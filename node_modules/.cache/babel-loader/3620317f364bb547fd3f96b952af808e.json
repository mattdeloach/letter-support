{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/Dev/letter/letter-support/src/layouts/ContentWithAsideLayout.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Row, Col } from 'reactstrap';\n\nconst ContentWithAsideLayout = ({\n  banner,\n  aside,\n  footer,\n  isStickyAside,\n  children\n}) => {\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, banner, /*#__PURE__*/React.createElement(Row, {\n    noGutters: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"8\",\n    className: classNames('pr-lg-2', {\n      'mb-3': !isStickyAside\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, children), /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    className: classNames('pl-lg-2', {\n      'mb-3': !isStickyAside\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, isStickyAside ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sticky-top sticky-sidebar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 28\n    }\n  }, aside) : aside)), footer);\n};\n\nContentWithAsideLayout.propTypes = {\n  aside: PropTypes.element.isRequired,\n  banner: PropTypes.element,\n  footer: PropTypes.element,\n  isStickyAside: PropTypes.bool,\n  children: PropTypes.node\n};\nContentWithAsideLayout.defaultProps = {\n  isStickyAside: true\n};\nexport default ContentWithAsideLayout;","map":{"version":3,"sources":["/Users/matt/Documents/Dev/letter/letter-support/src/layouts/ContentWithAsideLayout.js"],"names":["React","Fragment","PropTypes","classNames","Row","Col","ContentWithAsideLayout","banner","aside","footer","isStickyAside","children","propTypes","element","isRequired","bool","node","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,YAAzB;;AAEA,MAAMC,sBAAsB,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,KAAV;AAAiBC,EAAAA,MAAjB;AAAyBC,EAAAA,aAAzB;AAAwCC,EAAAA;AAAxC,CAAD,KAAwD;AACrF,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,MADH,eAEE,oBAAC,GAAD;AAAK,IAAA,SAAS,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAY,IAAA,SAAS,EAAEJ,UAAU,CAAC,SAAD,EAAY;AAAE,cAAQ,CAACO;AAAX,KAAZ,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,QADH,CADF,eAIE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAY,IAAA,SAAS,EAAER,UAAU,CAAC,SAAD,EAAY;AAAE,cAAQ,CAACO;AAAX,KAAZ,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,aAAa,gBAAG;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4CF,KAA5C,CAAH,GAA8DA,KAD9E,CAJF,CAFF,EAUGC,MAVH,CADF;AAcD,CAfD;;AAiBAH,sBAAsB,CAACM,SAAvB,GAAmC;AACjCJ,EAAAA,KAAK,EAAEN,SAAS,CAACW,OAAV,CAAkBC,UADQ;AAEjCP,EAAAA,MAAM,EAAEL,SAAS,CAACW,OAFe;AAGjCJ,EAAAA,MAAM,EAAEP,SAAS,CAACW,OAHe;AAIjCH,EAAAA,aAAa,EAAER,SAAS,CAACa,IAJQ;AAKjCJ,EAAAA,QAAQ,EAAET,SAAS,CAACc;AALa,CAAnC;AAQAV,sBAAsB,CAACW,YAAvB,GAAsC;AAAEP,EAAAA,aAAa,EAAE;AAAjB,CAAtC;AAEA,eAAeJ,sBAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Row, Col } from 'reactstrap';\n\nconst ContentWithAsideLayout = ({ banner, aside, footer, isStickyAside, children }) => {\n  return (\n    <Fragment>\n      {banner}\n      <Row noGutters>\n        <Col lg=\"8\" className={classNames('pr-lg-2', { 'mb-3': !isStickyAside })}>\n          {children}\n        </Col>\n        <Col lg=\"4\" className={classNames('pl-lg-2', { 'mb-3': !isStickyAside })}>\n          {isStickyAside ? <div className=\"sticky-top sticky-sidebar\">{aside}</div> : aside}\n        </Col>\n      </Row>\n      {footer}\n    </Fragment>\n  );\n};\n\nContentWithAsideLayout.propTypes = {\n  aside: PropTypes.element.isRequired,\n  banner: PropTypes.element,\n  footer: PropTypes.element,\n  isStickyAside: PropTypes.bool,\n  children: PropTypes.node\n};\n\nContentWithAsideLayout.defaultProps = { isStickyAside: true };\n\nexport default ContentWithAsideLayout;\n"]},"metadata":{},"sourceType":"module"}