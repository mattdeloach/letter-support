{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/Dev/letter/letter-support/src/components/common/ButtonIconTooltip.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport ButtonIcon from './ButtonIcon';\nimport { UncontrolledTooltip } from 'reactstrap';\n\nconst ButtonIconTooltip = ({\n  id,\n  placement,\n  children,\n  ...rest\n}) => /*#__PURE__*/React.createElement(Fragment, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(ButtonIcon, Object.assign({\n  id: id\n}, rest, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }\n})), /*#__PURE__*/React.createElement(UncontrolledTooltip, {\n  placement: placement,\n  target: id,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }\n}, children));\n\nButtonIconTooltip.propTypes = {\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  children: PropTypes.node.isRequired,\n  placement: PropTypes.oneOf(['top', 'bottom', 'left', 'right'])\n};\nButtonIconTooltip.defaultProps = {\n  color: 'falcon-default',\n  size: 'sm',\n  placement: 'bottom'\n};\nexport default ButtonIconTooltip;","map":{"version":3,"sources":["/Users/matt/Documents/Dev/letter/letter-support/src/components/common/ButtonIconTooltip.js"],"names":["React","Fragment","PropTypes","ButtonIcon","UncontrolledTooltip","ButtonIconTooltip","id","placement","children","rest","propTypes","oneOfType","string","number","isRequired","node","oneOf","defaultProps","color","size"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,mBAAT,QAAoC,YAApC;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,SAAN;AAAiBC,EAAAA,QAAjB;AAA2B,KAAGC;AAA9B,CAAD,kBACxB,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,UAAD;AAAY,EAAA,EAAE,EAAEH;AAAhB,GAAwBG,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADF,eAEE,oBAAC,mBAAD;AAAqB,EAAA,SAAS,EAAEF,SAAhC;AAA2C,EAAA,MAAM,EAAED,EAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGE,QADH,CAFF,CADF;;AASAH,iBAAiB,CAACK,SAAlB,GAA8B;AAC5BJ,EAAAA,EAAE,EAAEJ,SAAS,CAACS,SAAV,CAAoB,CAACT,SAAS,CAACU,MAAX,EAAmBV,SAAS,CAACW,MAA7B,CAApB,EAA0DC,UADlC;AAE5BN,EAAAA,QAAQ,EAAEN,SAAS,CAACa,IAAV,CAAeD,UAFG;AAG5BP,EAAAA,SAAS,EAAEL,SAAS,CAACc,KAAV,CAAgB,CAAC,KAAD,EAAQ,QAAR,EAAkB,MAAlB,EAA0B,OAA1B,CAAhB;AAHiB,CAA9B;AAMAX,iBAAiB,CAACY,YAAlB,GAAiC;AAAEC,EAAAA,KAAK,EAAE,gBAAT;AAA2BC,EAAAA,IAAI,EAAE,IAAjC;AAAuCZ,EAAAA,SAAS,EAAE;AAAlD,CAAjC;AAEA,eAAeF,iBAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport ButtonIcon from './ButtonIcon';\nimport { UncontrolledTooltip } from 'reactstrap';\n\nconst ButtonIconTooltip = ({ id, placement, children, ...rest }) => (\n  <Fragment>\n    <ButtonIcon id={id} {...rest} />\n    <UncontrolledTooltip placement={placement} target={id}>\n      {children}\n    </UncontrolledTooltip>\n  </Fragment>\n);\n\nButtonIconTooltip.propTypes = {\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  children: PropTypes.node.isRequired,\n  placement: PropTypes.oneOf(['top', 'bottom', 'left', 'right'])\n};\n\nButtonIconTooltip.defaultProps = { color: 'falcon-default', size: 'sm', placement: 'bottom' };\n\nexport default ButtonIconTooltip;\n"]},"metadata":{},"sourceType":"module"}