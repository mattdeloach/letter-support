{"ast":null,"code":"var _jsxFileName = \"/Users/greypro/Documents/Dev/letter/letter-support/src/components/feed/FeedInterest.js\";\nimport React from 'react';\nimport { Card, CardBody } from 'reactstrap';\nimport FalconCardHeader from '../common/FalconCardHeader';\nimport { isIterableArray } from '../../helpers/utils';\nimport EventSummary from '../event/EventSummary';\nimport FalconCardFooterLink from '../common/FalconCardFooterLink';\nimport useFakeFetch from '../../hooks/useFakeFetch';\nimport Loader from '../common/Loader';\nimport createMarkup from '../../helpers/createMarkup';\nimport rawEvents from '../../data/event/events';\nconst resolvedEvents = rawEvents.slice(2);\n\nconst FeedInterest = props => {\n  const {\n    loading,\n    data: events\n  } = useFakeFetch(resolvedEvents);\n  return /*#__PURE__*/React.createElement(Card, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(FalconCardHeader, {\n    title: \"You may interested\",\n    titleTag: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardBody, {\n    className: \"fs--1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }) : isIterableArray(events) && events.map(({\n    id,\n    additional,\n    ...rest\n  }, index) => /*#__PURE__*/React.createElement(EventSummary, Object.assign({}, rest, {\n    divider: events.length !== index + 1,\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-1000 mb-0\",\n    dangerouslySetInnerHTML: createMarkup(additional),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(FalconCardFooterLink, {\n    title: \"All Events\",\n    to: \"/pages/events\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default FeedInterest;","map":{"version":3,"sources":["/Users/greypro/Documents/Dev/letter/letter-support/src/components/feed/FeedInterest.js"],"names":["React","Card","CardBody","FalconCardHeader","isIterableArray","EventSummary","FalconCardFooterLink","useFakeFetch","Loader","createMarkup","rawEvents","resolvedEvents","slice","FeedInterest","props","loading","data","events","map","id","additional","rest","index","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,YAA/B;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,oBAAP,MAAiC,gCAAjC;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AAEA,MAAMC,cAAc,GAAGD,SAAS,CAACE,KAAV,CAAgB,CAAhB,CAAvB;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAC5B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,IAAI,EAAEC;AAAjB,MAA4BV,YAAY,CAACI,cAAD,CAA9C;AAEA,sBACE,oBAAC,IAAD,oBAAUG,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACE,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAC,oBAAxB;AAA6C,IAAA,QAAQ,EAAC,IAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,OAAO,gBACN,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,GAGNX,eAAe,CAACa,MAAD,CAAf,IACAA,MAAM,CAACC,GAAP,CAAW,CAAC;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,UAAN;AAAkB,OAAGC;AAArB,GAAD,EAA8BC,KAA9B,kBACT,oBAAC,YAAD,oBAAkBD,IAAlB;AAAwB,IAAA,OAAO,EAAEJ,MAAM,CAACM,MAAP,KAAkBD,KAAK,GAAG,CAA3D;AAA8D,IAAA,GAAG,EAAEH,EAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACE;AAAG,IAAA,SAAS,EAAC,gBAAb;AAA8B,IAAA,uBAAuB,EAAEV,YAAY,CAACW,UAAD,CAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CALJ,CAFF,eAcE,oBAAC,oBAAD;AAAsB,IAAA,KAAK,EAAC,YAA5B;AAAyC,IAAA,EAAE,EAAC,eAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,CADF;AAkBD,CArBD;;AAuBA,eAAeP,YAAf","sourcesContent":["import React from 'react';\r\nimport { Card, CardBody } from 'reactstrap';\r\nimport FalconCardHeader from '../common/FalconCardHeader';\r\nimport { isIterableArray } from '../../helpers/utils';\r\nimport EventSummary from '../event/EventSummary';\r\nimport FalconCardFooterLink from '../common/FalconCardFooterLink';\r\nimport useFakeFetch from '../../hooks/useFakeFetch';\r\nimport Loader from '../common/Loader';\r\nimport createMarkup from '../../helpers/createMarkup';\r\nimport rawEvents from '../../data/event/events';\r\n\r\nconst resolvedEvents = rawEvents.slice(2);\r\n\r\nconst FeedInterest = props => {\r\n  const { loading, data: events } = useFakeFetch(resolvedEvents);\r\n\r\n  return (\r\n    <Card {...props}>\r\n      <FalconCardHeader title=\"You may interested\" titleTag=\"h5\" />\r\n      <CardBody className=\"fs--1\">\r\n        {loading ? (\r\n          <Loader />\r\n        ) : (\r\n          isIterableArray(events) &&\r\n          events.map(({ id, additional, ...rest }, index) => (\r\n            <EventSummary {...rest} divider={events.length !== index + 1} key={id}>\r\n              <p className=\"text-1000 mb-0\" dangerouslySetInnerHTML={createMarkup(additional)} />\r\n            </EventSummary>\r\n          ))\r\n        )}\r\n      </CardBody>\r\n      <FalconCardFooterLink title=\"All Events\" to=\"/pages/events\" />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default FeedInterest;\r\n"]},"metadata":{},"sourceType":"module"}