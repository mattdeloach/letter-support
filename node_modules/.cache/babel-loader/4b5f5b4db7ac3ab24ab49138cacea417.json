{"ast":null,"code":"var _jsxFileName = \"/Users/greypro/Documents/Dev/letter/letter-support/src/components/chat/content/ChatContent.js\";\nimport React, { useState, useContext } from 'react';\nimport { TabContent, TabPane } from 'reactstrap';\nimport ChatContentHeader from './ChatContentHeader';\nimport MessageTextArea from './MessageTextArea';\nimport ChatContentBody from './ChatContentBody';\nimport { ChatContext } from '../../../context/Context';\n\nconst ChatContent = () => {\n  const {\n    threads,\n    activeThreadId\n  } = useContext(ChatContext);\n  const thread = threads.find(({\n    id\n  }) => id === activeThreadId);\n  const [isOpenThreadInfo, setIsOpenThreadInfo] = useState(false);\n  return /*#__PURE__*/React.createElement(TabContent, {\n    className: \"card-chat-content fs--1 position-relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TabPane, {\n    className: \"card-chat-pane active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ChatContentHeader, {\n    thread: thread,\n    setIsOpenThreadInfo: setIsOpenThreadInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ChatContentBody, {\n    thread: thread,\n    isOpenThreadInfo: isOpenThreadInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(MessageTextArea, {\n    thread: thread,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ChatContent;","map":{"version":3,"sources":["/Users/greypro/Documents/Dev/letter/letter-support/src/components/chat/content/ChatContent.js"],"names":["React","useState","useContext","TabContent","TabPane","ChatContentHeader","MessageTextArea","ChatContentBody","ChatContext","ChatContent","threads","activeThreadId","thread","find","id","isOpenThreadInfo","setIsOpenThreadInfo"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,YAApC;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,WAAT,QAA4B,0BAA5B;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAA8BT,UAAU,CAACM,WAAD,CAA9C;AACA,QAAMI,MAAM,GAAGF,OAAO,CAACG,IAAR,CAAa,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAYA,EAAE,KAAKH,cAAhC,CAAf;AACA,QAAM,CAACI,gBAAD,EAAmBC,mBAAnB,IAA0Cf,QAAQ,CAAC,KAAD,CAAxD;AAEA,sBACE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,2CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,uBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,iBAAD;AAAmB,IAAA,MAAM,EAAEW,MAA3B;AAAmC,IAAA,mBAAmB,EAAEI,mBAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,eAAD;AAAiB,IAAA,MAAM,EAAEJ,MAAzB;AAAiC,IAAA,gBAAgB,EAAEG,gBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eAME,oBAAC,eAAD;AAAiB,IAAA,MAAM,EAAEH,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAUD,CAfD;;AAiBA,eAAeH,WAAf","sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { TabContent, TabPane } from 'reactstrap';\r\nimport ChatContentHeader from './ChatContentHeader';\r\nimport MessageTextArea from './MessageTextArea';\r\nimport ChatContentBody from './ChatContentBody';\r\nimport { ChatContext } from '../../../context/Context';\r\n\r\nconst ChatContent = () => {\r\n  const { threads, activeThreadId } = useContext(ChatContext);\r\n  const thread = threads.find(({ id }) => id === activeThreadId);\r\n  const [isOpenThreadInfo, setIsOpenThreadInfo] = useState(false);\r\n\r\n  return (\r\n    <TabContent className=\"card-chat-content fs--1 position-relative\">\r\n      <TabPane className=\"card-chat-pane active\">\r\n        <ChatContentHeader thread={thread} setIsOpenThreadInfo={setIsOpenThreadInfo} />\r\n        <ChatContentBody thread={thread} isOpenThreadInfo={isOpenThreadInfo} />\r\n      </TabPane>\r\n\r\n      <MessageTextArea thread={thread} />\r\n    </TabContent>\r\n  );\r\n};\r\n\r\nexport default ChatContent;\r\n"]},"metadata":{},"sourceType":"module"}