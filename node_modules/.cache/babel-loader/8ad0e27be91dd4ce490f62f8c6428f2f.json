{"ast":null,"code":"var _jsxFileName = \"/Users/greypro/Documents/Dev/letter/letter-support/src/components/dashboard-alt/MarketShare.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getGrays, getPosition, isIterableArray, numberFormatter } from '../../helpers/utils';\nimport MarketShareItem from './MarketShareItem';\nimport { Card, CardBody, Col, Row } from 'reactstrap';\nimport echarts from 'echarts/lib/echarts';\nimport ReactEchartsCore from 'echarts-for-react/lib/core';\nimport 'echarts/lib/chart/pie';\nimport { useContext } from 'react';\nimport AppContext from '../../context/Context';\n\nconst getOption = (data, isDark) => {\n  const grays = getGrays(isDark);\n  return {\n    color: data.map(d => d.color),\n    tooltip: {\n      trigger: 'item',\n      padding: [7, 10],\n      backgroundColor: grays.white,\n      textStyle: {\n        color: grays.black\n      },\n      transitionDuration: 0,\n      borderColor: grays['300'],\n      borderWidth: 1,\n      formatter: function (params) {\n        return `<strong>${params.data.name}:</strong> ${params.percent}%`;\n      }\n    },\n\n    position(pos, params, dom, rect, size) {\n      return getPosition(pos, params, dom, rect, size);\n    },\n\n    legend: {\n      show: false\n    },\n    series: [{\n      type: 'pie',\n      radius: ['100%', '87%'],\n      avoidLabelOverlap: false,\n      hoverAnimation: false,\n      itemStyle: {\n        borderWidth: 2,\n        borderColor: isDark ? '#0E1C2F' : '#fff'\n      },\n      labelLine: {\n        normal: {\n          show: false\n        }\n      },\n      data: data\n    }]\n  };\n};\n\nconst MarketShare = ({\n  data\n}) => {\n  const {\n    isDark\n  } = useContext(AppContext);\n  const totalShare = data.map(d => d.value).reduce((total, currentValue) => total + currentValue, 0);\n  return /*#__PURE__*/React.createElement(Card, {\n    className: \"h-md-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    noGutters: true,\n    className: \"h-100 justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 5,\n    sm: 6,\n    className: \"col-xxl pr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"mt-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"Market Share\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fs--2 mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, isIterableArray(data) && data.map(({\n    id,\n    ...rest\n  }) => /*#__PURE__*/React.createElement(MarketShareItem, Object.assign({}, rest, {\n    totalShare: totalShare,\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 47\n    }\n  }))))), /*#__PURE__*/React.createElement(Col, {\n    xs: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"position-relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ReactEchartsCore, {\n    echarts: echarts,\n    option: getOption(data, isDark),\n    style: {\n      width: '6.625rem',\n      height: '6.625rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"absolute-centered font-weight-medium text-dark fs-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, numberFormatter(totalShare, 0)))))));\n};\n\nMarketShare.propTypes = {\n  data: PropTypes.array.isRequired\n};\nexport default MarketShare;","map":{"version":3,"sources":["/Users/greypro/Documents/Dev/letter/letter-support/src/components/dashboard-alt/MarketShare.js"],"names":["React","PropTypes","getGrays","getPosition","isIterableArray","numberFormatter","MarketShareItem","Card","CardBody","Col","Row","echarts","ReactEchartsCore","useContext","AppContext","getOption","data","isDark","grays","color","map","d","tooltip","trigger","padding","backgroundColor","white","textStyle","black","transitionDuration","borderColor","borderWidth","formatter","params","name","percent","position","pos","dom","rect","size","legend","show","series","type","radius","avoidLabelOverlap","hoverAnimation","itemStyle","labelLine","normal","MarketShare","totalShare","value","reduce","total","currentValue","id","rest","width","height","propTypes","array","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getGrays, getPosition, isIterableArray, numberFormatter } from '../../helpers/utils';\nimport MarketShareItem from './MarketShareItem';\nimport { Card, CardBody, Col, Row } from 'reactstrap';\nimport echarts from 'echarts/lib/echarts';\nimport ReactEchartsCore from 'echarts-for-react/lib/core';\nimport 'echarts/lib/chart/pie';\nimport { useContext } from 'react';\nimport AppContext from '../../context/Context';\n\nconst getOption = (data, isDark) => {\n  const grays = getGrays(isDark);\n  return {\n    color: data.map(d => d.color),\n    tooltip: {\n      trigger: 'item',\n      padding: [7, 10],\n      backgroundColor: grays.white,\n      textStyle: { color: grays.black },\n      transitionDuration: 0,\n      borderColor: grays['300'],\n      borderWidth: 1,\n      formatter: function(params) {\n        return `<strong>${params.data.name}:</strong> ${params.percent}%`;\n      }\n    },\n    position(pos, params, dom, rect, size) {\n      return getPosition(pos, params, dom, rect, size);\n    },\n    legend: { show: false },\n    series: [\n      {\n        type: 'pie',\n        radius: ['100%', '87%'],\n        avoidLabelOverlap: false,\n        hoverAnimation: false,\n        itemStyle: {\n          borderWidth: 2,\n          borderColor: isDark ? '#0E1C2F' : '#fff'\n        },\n        labelLine: { normal: { show: false } },\n        data: data\n      }\n    ]\n  };\n};\n\nconst MarketShare = ({ data }) => {\n  const { isDark } = useContext(AppContext);\n  const totalShare = data.map(d => d.value).reduce((total, currentValue) => total + currentValue, 0);\n  return (\n    <Card className=\"h-md-100\">\n      <CardBody>\n        <Row noGutters className=\"h-100 justify-content-between\">\n          <Col xs={5} sm={6} className=\"col-xxl pr-2\">\n            <h6 className=\"mt-1\">Market Share</h6>\n            <div className=\"fs--2 mt-3\">\n              {isIterableArray(data) &&\n                data.map(({ id, ...rest }) => <MarketShareItem {...rest} totalShare={totalShare} key={id} />)}\n            </div>\n          </Col>\n          <Col xs=\"auto\">\n            <div className=\"position-relative\">\n              <ReactEchartsCore\n                echarts={echarts}\n                option={getOption(data, isDark)}\n                style={{ width: '6.625rem', height: '6.625rem' }}\n              />\n              <div className=\"absolute-centered font-weight-medium text-dark fs-2\">\n                {numberFormatter(totalShare, 0)}\n              </div>\n            </div>\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  );\n};\n\nMarketShare.propTypes = { data: PropTypes.array.isRequired };\n\nexport default MarketShare;\n"]},"metadata":{},"sourceType":"module"}