{"ast":null,"code":"var _jsxFileName = \"/Users/greypro/Documents/Dev/letter/letter-support/src/components/plugins/ReactHookFrom.js\";\nimport React, { Fragment } from 'react';\nimport { useForm } from 'react-hook-form';\nimport PageHeader from '../common/PageHeader';\nimport { Button, Card, CardBody, CardHeader } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport FalconEditor from '../common/FalconEditor';\nimport classNames from 'classnames';\nconst ReactHookFormCode = ` function ReactHookFormExample (){\n  const { register, handleSubmit, errors, watch } = useForm();\n\n  const [formData, setData] = useState({});\n\n\n  const OnSubmit = (data, e) => {\n    setData(data);\n  };\n\n  return (\n    <Row>\n    <Col md={7}>\n      <Form onSubmit={handleSubmit(OnSubmit)}>\n        <FormGroup>\n          <Label for=\"name\">Name</Label>\n          <Input\n            type=\"text\"\n            name=\"name\"\n            id=\"name\"\n            placeholder=\"Enter your name\"\n            innerRef={register({\n              required: 'required',\n              minLength: {\n                value: 2,\n                message: 'Minimum two word'\n              }\n            })}\n            className={classNames({ 'border-danger': errors.name })}\n          />\n          {errors.name && <span className=\"text-danger fs--1\">{errors.name.message}</span>}\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"exampleEmail\">Email</Label>\n          <Input\n            type=\"email\"\n            name=\"email\"\n            id=\"exampleEmail\"\n            placeholder=\"Enter your email\"\n            className={classNames({ 'border-danger': errors.email })}\n            innerRef={register({\n              required: 'Email is required',\n              pattern: {\n                value: /[A-Za-z0-9._%+-]{3,}@[a-zA-Z]{3,}([.]{1}[a-zA-Z]{2,}|[.]{1}[a-zA-Z]{2,}[.]{1}[a-zA-Z]{2,})/i,\n                message: 'Email must be valid'\n              }\n            })}\n          />\n          {errors.email && <span className=\"text-danger fs--1\">{errors.email.message}</span>}\n        </FormGroup>\n        <Row>\n          <Col>\n            <FormGroup>\n              <Label for=\"password\">Password</Label>\n              <Input\n                type=\"password\"\n                name=\"password\"\n                id=\"password\"\n                placeholder=\"Enter your password\"\n                innerRef={register({\n                  required: 'You must specify a password',\n                  minLength: {\n                    value: 2,\n                    message: 'Password must have at least 2 characters'\n                  }\n                })}\n              />\n              {errors.password && <span className=\"text-danger fs--1\">{errors.password.message}</span>}\n            </FormGroup>\n          </Col>\n          <Col>\n            <FormGroup>\n              <Label for=\"confirmPassord\">Confirm Passord</Label>\n              <Input\n                type=\"password\"\n                name=\"confirmPassord\"\n                id=\"confirmPassord\"\n                placeholder=\"Confirm Password\"\n                innerRef={register({\n                  validate: value => value === watch('password') || 'The password do not match'\n                })}\n              />\n              {errors.confirmPassord && (\n                <span className=\"text-danger fs--1\">{errors.confirmPassord.message}</span>\n              )}\n            </FormGroup>\n          </Col>\n        </Row>\n        <Button type=\"submit\" color=\"primary\">\n          Submit\n        </Button>\n      </Form>\n    </Col>\n    <Col md=\"auto\">\n      <h5 className=\"mt-4\">Result</h5>\n      <pre>{JSON.stringify(formData, null, 2)}</pre>\n    </Col>\n  </Row>\n  );\n}`;\n\nconst ReactHookFrom = () => {\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PageHeader, {\n    title: \"React Hook Form\",\n    description: \"React Hook Form Performant, flexible and extensible forms with easy-to-use validation.\",\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    tag: \"a\",\n    href: \"https://www.react-hook-form.com/\",\n    target: \"_blank\",\n    color: \"link\",\n    size: \"sm\",\n    className: \"pl-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, \"React hook Form Documentation\", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: \"chevron-right\",\n    className: \"ml-1 fs--2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"bg-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, \"Example of form with validation\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FalconEditor, {\n    code: ReactHookFormCode,\n    scope: {\n      useForm,\n      classNames\n    },\n    language: \"jsx\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default ReactHookFrom;","map":{"version":3,"sources":["/Users/greypro/Documents/Dev/letter/letter-support/src/components/plugins/ReactHookFrom.js"],"names":["React","Fragment","useForm","PageHeader","Button","Card","CardBody","CardHeader","FontAwesomeIcon","FalconEditor","classNames","ReactHookFormCode","ReactHookFrom"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,iBAAxB;AAEA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,QAAvB,EAAiCC,UAAjC,QAAmD,YAAnD;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,MAAMC,iBAAiB,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAA3B;;AAqGA,MAAMC,aAAa,GAAG,MAAM;AAC1B,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AACE,IAAA,KAAK,EAAC,iBADR;AAEE,IAAA,WAAW,EAAC,wFAFd;AAGE,IAAA,SAAS,EAAC,MAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,MAAD;AAAQ,IAAA,GAAG,EAAC,GAAZ;AAAgB,IAAA,IAAI,EAAC,kCAArB;AAAwD,IAAA,MAAM,EAAC,QAA/D;AAAwE,IAAA,KAAK,EAAC,MAA9E;AAAqF,IAAA,IAAI,EAAC,IAA1F;AAA+F,IAAA,SAAS,EAAC,MAAzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAEE,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAC,eAAtB;AAAsC,IAAA,SAAS,EAAC,YAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CALF,CADF,eAWE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADF,CADF,eAIE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAED,iBAApB;AAAuC,IAAA,KAAK,EAAE;AAAET,MAAAA,OAAF;AAAWQ,MAAAA;AAAX,KAA9C;AAAuE,IAAA,QAAQ,EAAC,KAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,CAXF,CADF;AAsBD,CAvBD;;AAyBA,eAAeE,aAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport { useForm } from 'react-hook-form';\n\nimport PageHeader from '../common/PageHeader';\nimport { Button, Card, CardBody, CardHeader } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport FalconEditor from '../common/FalconEditor';\nimport classNames from 'classnames';\n\nconst ReactHookFormCode = ` function ReactHookFormExample (){\n  const { register, handleSubmit, errors, watch } = useForm();\n\n  const [formData, setData] = useState({});\n\n\n  const OnSubmit = (data, e) => {\n    setData(data);\n  };\n\n  return (\n    <Row>\n    <Col md={7}>\n      <Form onSubmit={handleSubmit(OnSubmit)}>\n        <FormGroup>\n          <Label for=\"name\">Name</Label>\n          <Input\n            type=\"text\"\n            name=\"name\"\n            id=\"name\"\n            placeholder=\"Enter your name\"\n            innerRef={register({\n              required: 'required',\n              minLength: {\n                value: 2,\n                message: 'Minimum two word'\n              }\n            })}\n            className={classNames({ 'border-danger': errors.name })}\n          />\n          {errors.name && <span className=\"text-danger fs--1\">{errors.name.message}</span>}\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"exampleEmail\">Email</Label>\n          <Input\n            type=\"email\"\n            name=\"email\"\n            id=\"exampleEmail\"\n            placeholder=\"Enter your email\"\n            className={classNames({ 'border-danger': errors.email })}\n            innerRef={register({\n              required: 'Email is required',\n              pattern: {\n                value: /[A-Za-z0-9._%+-]{3,}@[a-zA-Z]{3,}([.]{1}[a-zA-Z]{2,}|[.]{1}[a-zA-Z]{2,}[.]{1}[a-zA-Z]{2,})/i,\n                message: 'Email must be valid'\n              }\n            })}\n          />\n          {errors.email && <span className=\"text-danger fs--1\">{errors.email.message}</span>}\n        </FormGroup>\n        <Row>\n          <Col>\n            <FormGroup>\n              <Label for=\"password\">Password</Label>\n              <Input\n                type=\"password\"\n                name=\"password\"\n                id=\"password\"\n                placeholder=\"Enter your password\"\n                innerRef={register({\n                  required: 'You must specify a password',\n                  minLength: {\n                    value: 2,\n                    message: 'Password must have at least 2 characters'\n                  }\n                })}\n              />\n              {errors.password && <span className=\"text-danger fs--1\">{errors.password.message}</span>}\n            </FormGroup>\n          </Col>\n          <Col>\n            <FormGroup>\n              <Label for=\"confirmPassord\">Confirm Passord</Label>\n              <Input\n                type=\"password\"\n                name=\"confirmPassord\"\n                id=\"confirmPassord\"\n                placeholder=\"Confirm Password\"\n                innerRef={register({\n                  validate: value => value === watch('password') || 'The password do not match'\n                })}\n              />\n              {errors.confirmPassord && (\n                <span className=\"text-danger fs--1\">{errors.confirmPassord.message}</span>\n              )}\n            </FormGroup>\n          </Col>\n        </Row>\n        <Button type=\"submit\" color=\"primary\">\n          Submit\n        </Button>\n      </Form>\n    </Col>\n    <Col md=\"auto\">\n      <h5 className=\"mt-4\">Result</h5>\n      <pre>{JSON.stringify(formData, null, 2)}</pre>\n    </Col>\n  </Row>\n  );\n}`;\n\nconst ReactHookFrom = () => {\n  return (\n    <Fragment>\n      <PageHeader\n        title=\"React Hook Form\"\n        description=\"React Hook Form Performant, flexible and extensible forms with easy-to-use validation.\"\n        className=\"mb-3\"\n      >\n        <Button tag=\"a\" href=\"https://www.react-hook-form.com/\" target=\"_blank\" color=\"link\" size=\"sm\" className=\"pl-0\">\n          React hook Form Documentation\n          <FontAwesomeIcon icon=\"chevron-right\" className=\"ml-1 fs--2\" />\n        </Button>\n      </PageHeader>\n      <Card>\n        <CardHeader className=\"bg-light\">\n          <h4 className=\"mb-0\">Example of form with validation</h4>\n        </CardHeader>\n        <CardBody>\n          <FalconEditor code={ReactHookFormCode} scope={{ useForm, classNames }} language=\"jsx\" />\n        </CardBody>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default ReactHookFrom;\n"]},"metadata":{},"sourceType":"module"}