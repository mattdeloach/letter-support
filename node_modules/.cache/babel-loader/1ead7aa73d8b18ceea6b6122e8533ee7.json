{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/Dev/letter/letter-support/src/components/feed/LikeComentShareCount.js\";\nimport React, { Fragment } from 'react';\nimport classNames from 'classnames';\nimport { isIterableArray } from '../../helpers/utils';\n\nconst LikeCommentShareCountText = ({\n  count,\n  text\n}) => /*#__PURE__*/React.createElement(\"a\", {\n  className: \"text-700\",\n  href: \"#!\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }\n}, count, \" \", text, count !== 1 && 's');\n\nconst LikeCommentShareCount = ({\n  countLCS,\n  comments = []\n}) => {\n  const {\n    like = 0,\n    share = 0\n  } = countLCS;\n  const countLCSArray = [like, comments.length, share];\n  const countLCSObj = {};\n  countLCSArray.map((count, index) => {\n    if (count) {\n      countLCSObj[classNames({\n        Like: index === 0,\n        Comment: index === 1,\n        Share: index === 2\n      })] = count;\n    }\n\n    return countLCSObj;\n  });\n  const keys = Object.keys(countLCSObj);\n  return isIterableArray(keys) ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"border-bottom border-200 fs--1 py-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, keys.map((key, index) => /*#__PURE__*/React.createElement(Fragment, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LikeCommentShareCountText, {\n    count: countLCSObj[key],\n    text: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }), index < keys.length - 1 && ' • '))) : null;\n};\n\nexport default LikeCommentShareCount;","map":{"version":3,"sources":["/Users/matt/Documents/Dev/letter/letter-support/src/components/feed/LikeComentShareCount.js"],"names":["React","Fragment","classNames","isIterableArray","LikeCommentShareCountText","count","text","LikeCommentShareCount","countLCS","comments","like","share","countLCSArray","length","countLCSObj","map","index","Like","Comment","Share","keys","Object","key"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,eAAT,QAAgC,qBAAhC;;AAEA,MAAMC,yBAAyB,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,kBAChC;AAAG,EAAA,SAAS,EAAC,UAAb;AAAwB,EAAA,IAAI,EAAC,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGD,KADH,OACWC,IADX,EAEGD,KAAK,KAAK,CAAV,IAAe,GAFlB,CADF;;AAOA,MAAME,qBAAqB,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,QAAQ,GAAG;AAAvB,CAAD,KAAiC;AAC7D,QAAM;AAAEC,IAAAA,IAAI,GAAG,CAAT;AAAYC,IAAAA,KAAK,GAAG;AAApB,MAA0BH,QAAhC;AACA,QAAMI,aAAa,GAAG,CAACF,IAAD,EAAOD,QAAQ,CAACI,MAAhB,EAAwBF,KAAxB,CAAtB;AACA,QAAMG,WAAW,GAAG,EAApB;AAEAF,EAAAA,aAAa,CAACG,GAAd,CAAkB,CAACV,KAAD,EAAQW,KAAR,KAAkB;AAClC,QAAIX,KAAJ,EAAW;AACTS,MAAAA,WAAW,CACTZ,UAAU,CAAC;AACTe,QAAAA,IAAI,EAAED,KAAK,KAAK,CADP;AAETE,QAAAA,OAAO,EAAEF,KAAK,KAAK,CAFV;AAGTG,QAAAA,KAAK,EAAEH,KAAK,KAAK;AAHR,OAAD,CADD,CAAX,GAMIX,KANJ;AAOD;;AACD,WAAOS,WAAP;AACD,GAXD;AAaA,QAAMM,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYN,WAAZ,CAAb;AAEA,SAAOX,eAAe,CAACiB,IAAD,CAAf,gBACL;AAAK,IAAA,SAAS,EAAC,qCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,IAAI,CAACL,GAAL,CAAS,CAACO,GAAD,EAAMN,KAAN,kBACR,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,yBAAD;AAA2B,IAAA,KAAK,EAAEF,WAAW,CAACQ,GAAD,CAA7C;AAAoD,IAAA,IAAI,EAAEA,GAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGN,KAAK,GAAGI,IAAI,CAACP,MAAL,GAAc,CAAtB,IAA2B,KAF9B,CADD,CADH,CADK,GASH,IATJ;AAUD,CA9BD;;AA+BA,eAAeN,qBAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport classNames from 'classnames';\nimport { isIterableArray } from '../../helpers/utils';\n\nconst LikeCommentShareCountText = ({ count, text }) => (\n  <a className=\"text-700\" href=\"#!\">\n    {count} {text}\n    {count !== 1 && 's'}\n  </a>\n);\n\nconst LikeCommentShareCount = ({ countLCS, comments = [] }) => {\n  const { like = 0, share = 0 } = countLCS;\n  const countLCSArray = [like, comments.length, share];\n  const countLCSObj = {};\n\n  countLCSArray.map((count, index) => {\n    if (count) {\n      countLCSObj[\n        classNames({\n          Like: index === 0,\n          Comment: index === 1,\n          Share: index === 2\n        })\n      ] = count;\n    }\n    return countLCSObj;\n  });\n\n  const keys = Object.keys(countLCSObj);\n\n  return isIterableArray(keys) ? (\n    <div className=\"border-bottom border-200 fs--1 py-3\">\n      {keys.map((key, index) => (\n        <Fragment key={index}>\n          <LikeCommentShareCountText count={countLCSObj[key]} text={key} />\n          {index < keys.length - 1 && ' • '}\n        </Fragment>\n      ))}\n    </div>\n  ) : null;\n};\nexport default LikeCommentShareCount;\n"]},"metadata":{},"sourceType":"module"}