{"ast":null,"code":"var _jsxFileName = \"/Users/greypro/Documents/Dev/letter/letter-support/src/components/common/QuillEditor.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nconst modules = {\n  toolbar: [[{\n    header: [1, 2, 3, 4, 5, 6, false]\n  }], ['bold', 'italic', 'underline', 'strike', 'blockquote', 'code-block'], [{\n    color: []\n  }, {\n    background: []\n  }, {\n    align: []\n  }], [{\n    list: 'ordered'\n  }, {\n    list: 'bullet'\n  }, {\n    indent: '-1'\n  }, {\n    indent: '+1'\n  }, {\n    font: []\n  }], ['link', 'image', 'video'], ['clean']],\n  clipboard: {\n    matchVisual: false\n  }\n};\nconst formats = ['header', 'font', 'size', 'bold', 'italic', 'underline', 'strike', 'blockquote', 'list', 'bullet', 'indent', 'link', 'image', 'video', 'color', 'background', 'code-block', 'align'];\n\nconst getContent = value => value === '<p><br></p>' ? '' : value;\n\nconst QuillEditor = ({\n  value,\n  onChange,\n  ...rest\n}) => /*#__PURE__*/React.createElement(ReactQuill, Object.assign({\n  value: getContent(value),\n  onChange: value => onChange(value)\n}, rest, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 3\n  }\n}));\n\nQuillEditor.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n};\nQuillEditor.defaultProps = {\n  modules,\n  formats\n};\nexport default QuillEditor;","map":{"version":3,"sources":["/Users/greypro/Documents/Dev/letter/letter-support/src/components/common/QuillEditor.js"],"names":["React","PropTypes","ReactQuill","modules","toolbar","header","color","background","align","list","indent","font","clipboard","matchVisual","formats","getContent","value","QuillEditor","onChange","rest","propTypes","string","isRequired","func","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AAEA,OAAO,iCAAP;AAEA,MAAMC,OAAO,GAAG;AACdC,EAAAA,OAAO,EAAE,CACP,CAAC;AAAEC,IAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,KAAnB;AAAV,GAAD,CADO,EAEP,CAAC,MAAD,EAAS,QAAT,EAAmB,WAAnB,EAAgC,QAAhC,EAA0C,YAA1C,EAAwD,YAAxD,CAFO,EAGP,CAAC;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAD,EAAgB;AAAEC,IAAAA,UAAU,EAAE;AAAd,GAAhB,EAAoC;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAApC,CAHO,EAIP,CAAC;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAD,EAAsB;AAAEA,IAAAA,IAAI,EAAE;AAAR,GAAtB,EAA0C;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAA1C,EAA4D;AAAEA,IAAAA,MAAM,EAAE;AAAV,GAA5D,EAA8E;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAA9E,CAJO,EAKP,CAAC,MAAD,EAAS,OAAT,EAAkB,OAAlB,CALO,EAMP,CAAC,OAAD,CANO,CADK;AASdC,EAAAA,SAAS,EAAE;AAAEC,IAAAA,WAAW,EAAE;AAAf;AATG,CAAhB;AAYA,MAAMC,OAAO,GAAG,CACd,QADc,EAEd,MAFc,EAGd,MAHc,EAId,MAJc,EAKd,QALc,EAMd,WANc,EAOd,QAPc,EAQd,YARc,EASd,MATc,EAUd,QAVc,EAWd,QAXc,EAYd,MAZc,EAad,OAbc,EAcd,OAdc,EAed,OAfc,EAgBd,YAhBc,EAiBd,YAjBc,EAkBd,OAlBc,CAAhB;;AAqBA,MAAMC,UAAU,GAAGC,KAAK,IAAKA,KAAK,KAAK,aAAV,GAA0B,EAA1B,GAA+BA,KAA5D;;AACA,MAAMC,WAAW,GAAG,CAAC;AAAED,EAAAA,KAAF;AAASE,EAAAA,QAAT;AAAmB,KAAGC;AAAtB,CAAD,kBAClB,oBAAC,UAAD;AAAY,EAAA,KAAK,EAAEJ,UAAU,CAACC,KAAD,CAA7B;AAAsC,EAAA,QAAQ,EAAEA,KAAK,IAAIE,QAAQ,CAACF,KAAD;AAAjE,GAA8EG,IAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADF;;AAIAF,WAAW,CAACG,SAAZ,GAAwB;AACtBJ,EAAAA,KAAK,EAAEf,SAAS,CAACoB,MAAV,CAAiBC,UADF;AAEtBJ,EAAAA,QAAQ,EAAEjB,SAAS,CAACsB,IAAV,CAAeD;AAFH,CAAxB;AAKAL,WAAW,CAACO,YAAZ,GAA2B;AAAErB,EAAAA,OAAF;AAAWW,EAAAA;AAAX,CAA3B;AAEA,eAAeG,WAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactQuill from 'react-quill';\n\nimport 'react-quill/dist/quill.snow.css';\n\nconst modules = {\n  toolbar: [\n    [{ header: [1, 2, 3, 4, 5, 6, false] }],\n    ['bold', 'italic', 'underline', 'strike', 'blockquote', 'code-block'],\n    [{ color: [] }, { background: [] }, { align: [] }],\n    [{ list: 'ordered' }, { list: 'bullet' }, { indent: '-1' }, { indent: '+1' }, { font: [] }],\n    ['link', 'image', 'video'],\n    ['clean']\n  ],\n  clipboard: { matchVisual: false }\n};\n\nconst formats = [\n  'header',\n  'font',\n  'size',\n  'bold',\n  'italic',\n  'underline',\n  'strike',\n  'blockquote',\n  'list',\n  'bullet',\n  'indent',\n  'link',\n  'image',\n  'video',\n  'color',\n  'background',\n  'code-block',\n  'align'\n];\n\nconst getContent = value => (value === '<p><br></p>' ? '' : value);\nconst QuillEditor = ({ value, onChange, ...rest }) => (\n  <ReactQuill value={getContent(value)} onChange={value => onChange(value)} {...rest} />\n);\n\nQuillEditor.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nQuillEditor.defaultProps = { modules, formats };\n\nexport default QuillEditor;\n"]},"metadata":{},"sourceType":"module"}