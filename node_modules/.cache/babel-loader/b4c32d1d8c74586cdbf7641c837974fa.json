{"ast":null,"code":"var _jsxFileName = \"/Users/greypro/Documents/Dev/letter/letter-support/src/components/email/Inbox.js\";\nimport React, { Fragment } from 'react';\nimport { Card } from 'reactstrap';\nimport InboxHeader from './inbox/InboxHeader';\nimport InboxBody from './inbox/InboxBody';\nimport InboxFooter from './inbox/InboxFooter';\nimport useBulkSelect from '../../hooks/useBulkSelect';\nimport usePagination from '../../hooks/usePagination';\nimport rawEmails from '../../data/email/emails';\nconst emailIds = rawEmails.map(email => email.id);\n\nconst Inbox = () => {\n  // Hook\n  const {\n    data: paginationData,\n    meta: paginationMeta,\n    handler: paginationHandler\n  } = usePagination(emailIds, 10);\n  const {\n    selectedItems,\n    isSelectedItem,\n    isAllSelected,\n    isIndeterminate,\n    toggleSelectedItem,\n    toggleIsAllSelected\n  } = useBulkSelect(emailIds);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InboxHeader, {\n    isAllSelected: isAllSelected,\n    isIndeterminate: isIndeterminate,\n    toggleIsAllSelected: toggleIsAllSelected,\n    selectedItems: selectedItems,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(InboxBody, {\n    isSelectedItem: isSelectedItem,\n    toggleSelectedItem: toggleSelectedItem,\n    currentItems: paginationData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(InboxFooter, {\n    meta: paginationMeta,\n    handler: paginationHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Inbox;","map":{"version":3,"sources":["/Users/greypro/Documents/Dev/letter/letter-support/src/components/email/Inbox.js"],"names":["React","Fragment","Card","InboxHeader","InboxBody","InboxFooter","useBulkSelect","usePagination","rawEmails","emailIds","map","email","id","Inbox","data","paginationData","meta","paginationMeta","handler","paginationHandler","selectedItems","isSelectedItem","isAllSelected","isIndeterminate","toggleSelectedItem","toggleIsAllSelected"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AAEA,MAAMC,QAAQ,GAAGD,SAAS,CAACE,GAAV,CAAcC,KAAK,IAAIA,KAAK,CAACC,EAA7B,CAAjB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB;AACA,QAAM;AAAEC,IAAAA,IAAI,EAAEC,cAAR;AAAwBC,IAAAA,IAAI,EAAEC,cAA9B;AAA8CC,IAAAA,OAAO,EAAEC;AAAvD,MAA6EZ,aAAa,CAACE,QAAD,EAAW,EAAX,CAAhG;AACA,QAAM;AACJW,IAAAA,aADI;AAEJC,IAAAA,cAFI;AAGJC,IAAAA,aAHI;AAIJC,IAAAA,eAJI;AAKJC,IAAAA,kBALI;AAMJC,IAAAA;AANI,MAOFnB,aAAa,CAACG,QAAD,CAPjB;AASA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AACE,IAAA,aAAa,EAAEa,aADjB;AAEE,IAAA,eAAe,EAAEC,eAFnB;AAGE,IAAA,mBAAmB,EAAEE,mBAHvB;AAIE,IAAA,aAAa,EAAEL,aAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE,oBAAC,SAAD;AACE,IAAA,cAAc,EAAEC,cADlB;AAEE,IAAA,kBAAkB,EAAEG,kBAFtB;AAGE,IAAA,YAAY,EAAET,cAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAYE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAEE,cAAnB;AAAmC,IAAA,OAAO,EAAEE,iBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADF,CADF;AAkBD,CA9BD;;AAgCA,eAAeN,KAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport { Card } from 'reactstrap';\nimport InboxHeader from './inbox/InboxHeader';\nimport InboxBody from './inbox/InboxBody';\nimport InboxFooter from './inbox/InboxFooter';\nimport useBulkSelect from '../../hooks/useBulkSelect';\nimport usePagination from '../../hooks/usePagination';\nimport rawEmails from '../../data/email/emails';\n\nconst emailIds = rawEmails.map(email => email.id);\n\nconst Inbox = () => {\n  // Hook\n  const { data: paginationData, meta: paginationMeta, handler: paginationHandler } = usePagination(emailIds, 10);\n  const {\n    selectedItems,\n    isSelectedItem,\n    isAllSelected,\n    isIndeterminate,\n    toggleSelectedItem,\n    toggleIsAllSelected\n  } = useBulkSelect(emailIds);\n\n  return (\n    <Fragment>\n      <Card>\n        <InboxHeader\n          isAllSelected={isAllSelected}\n          isIndeterminate={isIndeterminate}\n          toggleIsAllSelected={toggleIsAllSelected}\n          selectedItems={selectedItems}\n        />\n        <InboxBody\n          isSelectedItem={isSelectedItem}\n          toggleSelectedItem={toggleSelectedItem}\n          currentItems={paginationData}\n        />\n        <InboxFooter meta={paginationMeta} handler={paginationHandler} />\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default Inbox;\n"]},"metadata":{},"sourceType":"module"}