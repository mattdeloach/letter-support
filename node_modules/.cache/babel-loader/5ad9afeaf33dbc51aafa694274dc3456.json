{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/Dev/letter/letter-support/src/components/pricing/PricingCardAlt.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'reactstrap';\nimport classNames from 'classnames';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Flex from '../common/Flex';\nimport { isIterableArray } from '../../helpers/utils';\n\nconst PricingRowAlt = ({\n  isDisable,\n  isLast,\n  children\n}) => /*#__PURE__*/React.createElement(\"li\", {\n  className: classNames('py-2', {\n    'border-bottom': !isLast,\n    'text-300': isDisable\n  }),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n  icon: \"check\",\n  transform: \"shrink-2\",\n  className: classNames({\n    'text-primary': !isDisable\n  }),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }\n}), ' ', children);\n\nPricingRowAlt.propTypes = {\n  isDisable: PropTypes.bool,\n  isLast: PropTypes.bool,\n  children: PropTypes.node\n};\n\nconst PricingCardAlt = ({\n  type,\n  price,\n  image,\n  features,\n  button,\n  isYearly\n}) => {\n  const plan = isYearly ? 'year' : 'month';\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"border rounded-soft overflow-hidden mb-3 mb-md-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Flex, {\n    align: \"center\",\n    justify: \"between\",\n    className: \"p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"font-weight-light fs-5 mb-0 text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, type), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"font-weight-light mt-0 text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"sup\", {\n    className: \"fs-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, \"$\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"fs-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, price[plan]), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"fs--2 mt-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \"/ \", plan))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pr-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: image,\n    width: \"70\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-4 bg-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-unstyled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, isIterableArray(features) && features.map((feature, index) => /*#__PURE__*/React.createElement(PricingRowAlt, {\n    isDisable: feature.isDisable,\n    key: index,\n    isLast: features.length === index + 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  }, feature.title))), /*#__PURE__*/React.createElement(Button, {\n    color: button.color,\n    block: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, button.text)));\n};\n\nPricingCardAlt.propTypes = {\n  type: PropTypes.string.isRequired,\n  price: PropTypes.object.isRequired,\n  isYearly: PropTypes.bool.isRequired,\n  image: PropTypes.string.isRequired,\n  features: PropTypes.array.isRequired,\n  button: PropTypes.object.isRequired\n};\nexport default PricingCardAlt;","map":{"version":3,"sources":["/Users/matt/Documents/Dev/letter/letter-support/src/components/pricing/PricingCardAlt.js"],"names":["React","PropTypes","Button","classNames","FontAwesomeIcon","Flex","isIterableArray","PricingRowAlt","isDisable","isLast","children","propTypes","bool","node","PricingCardAlt","type","price","image","features","button","isYearly","plan","map","feature","index","length","title","color","text","string","isRequired","object","array"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'reactstrap';\nimport classNames from 'classnames';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Flex from '../common/Flex';\nimport { isIterableArray } from '../../helpers/utils';\n\nconst PricingRowAlt = ({ isDisable, isLast, children }) => (\n  <li className={classNames('py-2', { 'border-bottom': !isLast, 'text-300': isDisable })}>\n    <FontAwesomeIcon icon=\"check\" transform=\"shrink-2\" className={classNames({ 'text-primary': !isDisable })} />{' '}\n    {children}\n  </li>\n);\n\nPricingRowAlt.propTypes = {\n  isDisable: PropTypes.bool,\n  isLast: PropTypes.bool,\n  children: PropTypes.node\n};\n\nconst PricingCardAlt = ({ type, price, image, features, button, isYearly }) => {\n  const plan = isYearly ? 'year' : 'month';\n\n  return (\n    <div className=\"border rounded-soft overflow-hidden mb-3 mb-md-0\">\n      <Flex align=\"center\" justify=\"between\" className=\"p-4\">\n        <div>\n          <h3 className=\"font-weight-light fs-5 mb-0 text-primary\">{type}</h3>\n          <h2 className=\"font-weight-light mt-0 text-primary\">\n            <sup className=\"fs-1\">$</sup>\n            <span className=\"fs-3\">{price[plan]}</span>\n            <span className=\"fs--2 mt-1\">/ {plan}</span>\n          </h2>\n        </div>\n        <div className=\"pr-3\">\n          <img src={image} width=\"70\" alt=\"\" />\n        </div>\n      </Flex>\n      <div className=\"p-4 bg-light\">\n        <ul className=\"list-unstyled\">\n          {isIterableArray(features) &&\n            features.map((feature, index) => (\n              <PricingRowAlt isDisable={feature.isDisable} key={index} isLast={features.length === index + 1}>\n                {feature.title}\n              </PricingRowAlt>\n            ))}\n        </ul>\n        <Button color={button.color} block>\n          {button.text}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nPricingCardAlt.propTypes = {\n  type: PropTypes.string.isRequired,\n  price: PropTypes.object.isRequired,\n  isYearly: PropTypes.bool.isRequired,\n  image: PropTypes.string.isRequired,\n  features: PropTypes.array.isRequired,\n  button: PropTypes.object.isRequired\n};\n\nexport default PricingCardAlt;\n"]},"metadata":{},"sourceType":"module"}