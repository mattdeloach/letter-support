{"ast":null,"code":"var _jsxFileName = \"/Users/greypro/Documents/Dev/letter/letter-support/src/components/utilities/Colors.js\";\nimport React, { Fragment } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Button, Row, Col, Card, CardBody } from 'reactstrap';\nimport PageHeader from '../common/PageHeader';\nimport FalconCardHeader from '../common/FalconCardHeader';\n\nconst Colors = () => /*#__PURE__*/React.createElement(Fragment, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(PageHeader, {\n  title: \"Colors\",\n  description: \"Convey meaning through color with a handful of color utility classes. Includes support for styling links with hover states, too.\",\n  className: \"mb-3\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Button, {\n  tag: \"a\",\n  href: \"https://reactstrap.github.io/utilities/colors/\",\n  target: \"_blank\",\n  color: \"link\",\n  size: \"sm\",\n  className: \"pl-0\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 7\n  }\n}, \"Colors on reactstrap\", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n  icon: \"chevron-right\",\n  className: \"ml-1 fs--2\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }\n}))), /*#__PURE__*/React.createElement(Card, {\n  className: \"mb-3\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(FalconCardHeader, {\n  title: \"Theme colors\",\n  light: false,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(CardBody, {\n  className: \"bg-light\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(Row, {\n  noGutters: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }\n}, ['primary', 'secondary', 'success', 'info', 'warning', 'danger', 'light', 'dark'].map((color, index) => /*#__PURE__*/React.createElement(Col, {\n  xs: 6,\n  sm: 4,\n  lg: 3,\n  key: index,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: `p-3 bg-${color}`,\n  style: {\n    height: '180px'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 15\n  }\n}, /*#__PURE__*/React.createElement(\"code\", {\n  className: color === 'light' ? 'text-black' : 'text-white',\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 17\n  }\n}, \".text-\", color), /*#__PURE__*/React.createElement(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 17\n  }\n}), /*#__PURE__*/React.createElement(\"code\", {\n  className: color === 'light' ? 'text-black' : 'text-white',\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 17\n  }\n}, \".bg-\", color))))))), /*#__PURE__*/React.createElement(Card, {\n  className: \"mb-3\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(FalconCardHeader, {\n  title: \"Gray shades\",\n  light: false,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(CardBody, {\n  className: \"bg-light\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(Row, {\n  noGutters: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }\n}, ['black', '1100', '1000', '900', '800', '700', '600', '500', '400', '300', '200', '100', 'white'].map((color, index) => /*#__PURE__*/React.createElement(Col, {\n  xs: 6,\n  sm: 4,\n  lg: 3,\n  key: index,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 15\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: `p-3 bg-${color}`,\n  style: {\n    height: '180px'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 17\n  }\n}, /*#__PURE__*/React.createElement(\"code\", {\n  className: color <= 400 || color === 'white' ? 'text-black' : 'text-white',\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 19\n  }\n}, \".text-\", color), /*#__PURE__*/React.createElement(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 19\n  }\n}), /*#__PURE__*/React.createElement(\"code\", {\n  className: color <= 400 || color === 'white' ? 'text-black' : 'text-white',\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 19\n  }\n}, \".bg-\", color))))))));\n\nexport default Colors;","map":{"version":3,"sources":["/Users/greypro/Documents/Dev/letter/letter-support/src/components/utilities/Colors.js"],"names":["React","Fragment","FontAwesomeIcon","Button","Row","Col","Card","CardBody","PageHeader","FalconCardHeader","Colors","map","color","index","height"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Button, Row, Col, Card, CardBody } from 'reactstrap';\nimport PageHeader from '../common/PageHeader';\nimport FalconCardHeader from '../common/FalconCardHeader';\n\nconst Colors = () => (\n  <Fragment>\n    <PageHeader\n      title=\"Colors\"\n      description=\"Convey meaning through color with a handful of color utility classes. Includes support for styling links with hover states, too.\"\n      className=\"mb-3\"\n    >\n      <Button\n        tag=\"a\"\n        href=\"https://reactstrap.github.io/utilities/colors/\"\n        target=\"_blank\"\n        color=\"link\"\n        size=\"sm\"\n        className=\"pl-0\"\n      >\n        Colors on reactstrap\n        <FontAwesomeIcon icon=\"chevron-right\" className=\"ml-1 fs--2\" />\n      </Button>\n    </PageHeader>\n    <Card className=\"mb-3\">\n      <FalconCardHeader title=\"Theme colors\" light={false} />\n      <CardBody className=\"bg-light\">\n        <Row noGutters>\n          {['primary', 'secondary', 'success', 'info', 'warning', 'danger', 'light', 'dark'].map((color, index) => (\n            <Col xs={6} sm={4} lg={3} key={index}>\n              <div className={`p-3 bg-${color}`} style={{ height: '180px' }}>\n                <code className={color === 'light' ? 'text-black' : 'text-white'}>.text-{color}</code>\n                <br />\n                <code className={color === 'light' ? 'text-black' : 'text-white'}>.bg-{color}</code>\n              </div>\n            </Col>\n          ))}\n        </Row>\n      </CardBody>\n    </Card>\n    <Card className=\"mb-3\">\n      <FalconCardHeader title=\"Gray shades\" light={false} />\n      <CardBody className=\"bg-light\">\n        <Row noGutters>\n          {['black', '1100', '1000', '900', '800', '700', '600', '500', '400', '300', '200', '100', 'white'].map(\n            (color, index) => (\n              <Col xs={6} sm={4} lg={3} key={index}>\n                <div className={`p-3 bg-${color}`} style={{ height: '180px' }}>\n                  <code className={color <= 400 || color === 'white' ? 'text-black' : 'text-white'}>.text-{color}</code>\n                  <br />\n                  <code className={color <= 400 || color === 'white' ? 'text-black' : 'text-white'}>.bg-{color}</code>\n                </div>\n              </Col>\n            )\n          )}\n        </Row>\n      </CardBody>\n    </Card>\n  </Fragment>\n);\n\nexport default Colors;\n"]},"metadata":{},"sourceType":"module"}