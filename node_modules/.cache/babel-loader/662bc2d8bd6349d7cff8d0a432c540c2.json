{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/Dev/letter/letter-support/src/layouts/AgentLayout.js\";\nimport React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Switch } from 'react-router-dom';\nimport Dashboard from '../components/dashboard/Dashboard';\nimport DashboardAlt from '../components/dashboard-alt/DashboardAlt';\nimport NavbarTop from '../components/navbar/NavbarTop';\nimport NavbarVertical from '../components/navbar/NavbarVertical';\nimport Footer from '../components/footer/Footer';\nimport AgentFooter from '../components/footer/AgentFooter';\nimport loadable from '@loadable/component';\nimport AppContext from '../context/Context';\nimport ProductProvider from '../components/e-commerce/ProductProvider';\nimport SidePanelModal from '../components/faq-panel/SidePanelModal';\nimport { getPageName } from '../helpers/utils';\nimport AgentNav from './navbar/AgentNav';\nconst AgentRoutes = loadable(() => import('./AgentRoutes'));\n\nconst AgentLayout = ({\n  location\n}) => {\n  const {\n    isFluid,\n    isVertical,\n    navbarStyle\n  } = useContext(AppContext);\n  const isKanban = getPageName('kanban');\n  useEffect(() => {\n    AgentRoutes.preload();\n  }, []);\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: isFluid || isKanban ? 'container-fluid' : 'container',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ProductProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AgentNav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    exact: true,\n    component: Dashboard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/dashboard-alt\",\n    exact: true,\n    component: DashboardAlt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(AgentRoutes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  })), !isKanban && /*#__PURE__*/React.createElement(AgentFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(SidePanelModal, {\n    path: location.pathname,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  })));\n};\n\nAgentLayout.propTypes = {\n  location: PropTypes.object.isRequired\n};\nexport default AgentLayout;","map":{"version":3,"sources":["/Users/matt/Documents/Dev/letter/letter-support/src/layouts/AgentLayout.js"],"names":["React","useContext","useEffect","PropTypes","Route","Switch","Dashboard","DashboardAlt","NavbarTop","NavbarVertical","Footer","AgentFooter","loadable","AppContext","ProductProvider","SidePanelModal","getPageName","AgentNav","AgentRoutes","AgentLayout","location","isFluid","isVertical","navbarStyle","isKanban","preload","window","scrollTo","pathname","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,cAAP,MAA2B,qCAA3B;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAOC,eAAP,MAA4B,0CAA5B;AACA,OAAOC,cAAP,MAA2B,wCAA3B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,QAAP,MAAqB,mBAArB;AAEA,MAAMC,WAAW,GAAGN,QAAQ,CAAC,MAAM,OAAO,eAAP,CAAP,CAA5B;;AAEA,MAAMO,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACpC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,UAAX;AAAuBC,IAAAA;AAAvB,MAAuCtB,UAAU,CAACY,UAAD,CAAvD;AAEA,QAAMW,QAAQ,GAAGR,WAAW,CAAC,QAAD,CAA5B;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,WAAW,CAACO,OAAZ;AACD,GAFQ,EAEN,EAFM,CAAT;AAIAvB,EAAAA,SAAS,CAAC,MAAM;AACdwB,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACD,GAFQ,EAEN,CAACP,QAAQ,CAACQ,QAAV,CAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAEP,OAAO,IAAIG,QAAX,GAAsB,iBAAtB,GAA0C,WAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAgB,IAAA,KAAK,MAArB;AAAsB,IAAA,SAAS,EAAElB,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,gBAAZ;AAA6B,IAAA,KAAK,MAAlC;AAAmC,IAAA,SAAS,EAAEC,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAFF,EAOG,CAACiB,QAAD,iBAAa,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPhB,CADF,eAUE,oBAAC,cAAD;AAAgB,IAAA,IAAI,EAAEJ,QAAQ,CAACQ,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF,CADF;AAgBD,CA7BD;;AA+BAT,WAAW,CAACU,SAAZ,GAAwB;AAAET,EAAAA,QAAQ,EAAEjB,SAAS,CAAC2B,MAAV,CAAiBC;AAA7B,CAAxB;AAEA,eAAeZ,WAAf","sourcesContent":["import React, { useContext, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Dashboard from '../components/dashboard/Dashboard';\r\nimport DashboardAlt from '../components/dashboard-alt/DashboardAlt';\r\nimport NavbarTop from '../components/navbar/NavbarTop';\r\nimport NavbarVertical from '../components/navbar/NavbarVertical';\r\nimport Footer from '../components/footer/Footer';\r\nimport AgentFooter from '../components/footer/AgentFooter';\r\nimport loadable from '@loadable/component';\r\nimport AppContext from '../context/Context';\r\nimport ProductProvider from '../components/e-commerce/ProductProvider';\r\nimport SidePanelModal from '../components/faq-panel/SidePanelModal';\r\nimport { getPageName } from '../helpers/utils';\r\nimport AgentNav from './navbar/AgentNav';\r\n\r\nconst AgentRoutes = loadable(() => import('./AgentRoutes'));\r\n\r\nconst AgentLayout = ({ location }) => {\r\n  const { isFluid, isVertical, navbarStyle } = useContext(AppContext);\r\n\r\n  const isKanban = getPageName('kanban');\r\n\r\n  useEffect(() => {\r\n    AgentRoutes.preload();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [location.pathname]);\r\n\r\n  return (\r\n    <div className={isFluid || isKanban ? 'container-fluid' : 'container'}>\r\n      <ProductProvider>\r\n        <div className=\"content\">\r\n          <AgentNav />\r\n          <Switch>\r\n            <Route path=\"/\" exact component={Dashboard} />\r\n            <Route path=\"/dashboard-alt\" exact component={DashboardAlt} />\r\n            <AgentRoutes />\r\n          </Switch>\r\n          {!isKanban && <AgentFooter />}\r\n        </div>\r\n        <SidePanelModal path={location.pathname} />\r\n      </ProductProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nAgentLayout.propTypes = { location: PropTypes.object.isRequired };\r\n\r\nexport default AgentLayout;\r\n"]},"metadata":{},"sourceType":"module"}