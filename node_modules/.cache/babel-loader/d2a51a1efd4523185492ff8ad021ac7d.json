{"ast":null,"code":"var _jsxFileName = \"/Users/greypro/Documents/Dev/letter/letter-support/src/components/event/EventTicket.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Button, Card, CardBody, CustomInput, Input, Table } from 'reactstrap';\nimport useFakeFetch from '../../hooks/useFakeFetch';\nimport Loader from '../common/Loader';\nimport ButtonIcon from '../common/ButtonIcon';\nimport FalconCardHeader from '../common/FalconCardHeader';\nimport { isIterableArray } from '../../helpers/utils';\nimport rawEventTickets from '../../data/event/eventTickets';\n\nconst TicketRow = ({\n  id,\n  name,\n  price,\n  checked = false,\n  handleChange,\n  handleRemove\n}) => /*#__PURE__*/React.createElement(\"tr\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"td\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Input, {\n  bsSize: \"sm\",\n  placeholder: \"Option Name\",\n  value: name,\n  onChange: ({\n    target\n  }) => handleChange(id, 'name', target.value),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 7\n  }\n})), /*#__PURE__*/React.createElement(\"td\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Input, {\n  bsSize: \"sm\",\n  placeholder: \"Price\",\n  value: price,\n  onChange: ({\n    target\n  }) => handleChange(id, 'price', target.value),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }\n})), /*#__PURE__*/React.createElement(\"td\", {\n  className: \"text-center align-middle\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(CustomInput, {\n  type: \"radio\",\n  id: `ticketPrice${id}`,\n  name: \"ticketPriceRadio\",\n  checked: checked,\n  onChange: ({\n    target\n  }) => handleChange(id, 'checked', target.checked),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }\n})), /*#__PURE__*/React.createElement(\"td\", {\n  className: \"text-center align-middle\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Button, {\n  color: \"link\",\n  size: \"sm\",\n  onClick: () => handleRemove(id),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n  icon: \"times-circle\",\n  className: \"text-danger\",\n  transform: \"shrink-3\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }\n}))));\n\nTicketRow.propTypes = {\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  price: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleRemove: PropTypes.func.isRequired,\n  checked: PropTypes.bool\n};\n\nconst EventTicket = () => {\n  // Data\n  const {\n    loading: loadingTickets,\n    data: tickets,\n    setData: setTickets\n  } = useFakeFetch(rawEventTickets); // Change Ticket\n\n  const changeTicket = (id, name, value) => {\n    const updatedTickets = name === 'checked' ? tickets.map(ticket => ({ ...ticket,\n      checked: false\n    })) : [...tickets];\n    const updatedTicket = { ...tickets[id],\n      [name]: value\n    };\n    setTickets([...updatedTickets.slice(0, id), updatedTicket, ...updatedTickets.slice(id + 1)]);\n  }; // Remove Ticket\n\n\n  const removeTicket = id => setTickets([...tickets.slice(0, id), ...tickets.slice(id + 1)]);\n\n  return /*#__PURE__*/React.createElement(Card, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FalconCardHeader, {\n    title: \"Ticket Price\",\n    light: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardBody, {\n    className: \"bg-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"falcon-default\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, \"Free\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"d-none d-sm-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, \" Ticket\")), /*#__PURE__*/React.createElement(Button, {\n    color: \"falcon-primary\",\n    size: \"sm\",\n    className: \"ml-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, \"Paid\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"d-none d-sm-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, \" Ticket\")), /*#__PURE__*/React.createElement(Button, {\n    color: \"falcon-default\",\n    size: \"sm\",\n    className: \"ml-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, \"Donation\")), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, \"Pricing Options:\"), /*#__PURE__*/React.createElement(CustomInput, {\n    type: \"checkbox\",\n    id: \"variablePricingCheckbox\",\n    label: \"Enable variable pricing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CustomInput, {\n    type: \"checkbox\",\n    id: \"multiOptionPurchaseCheckbox\",\n    label: \"Enable multi-option purchase mode.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Table, {\n    bordered: true,\n    className: \"mt-2 bg-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"fs--1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, \"Option Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }, \"Price ($)\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, \"Default\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, loadingTickets ? /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 19\n    }\n  }))) : isIterableArray(tickets) && tickets.map((ticketPrice, index) => /*#__PURE__*/React.createElement(TicketRow, Object.assign({}, ticketPrice, {\n    id: index,\n    handleChange: changeTicket,\n    handleRemove: removeTicket,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(ButtonIcon, {\n    color: \"falcon-default\",\n    size: \"sm\",\n    icon: \"plus\",\n    onClick: () => setTickets([...tickets, {\n      name: '',\n      price: ''\n    }]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, \"Add New\")));\n};\n\nexport default EventTicket;","map":{"version":3,"sources":["/Users/greypro/Documents/Dev/letter/letter-support/src/components/event/EventTicket.js"],"names":["React","PropTypes","FontAwesomeIcon","Button","Card","CardBody","CustomInput","Input","Table","useFakeFetch","Loader","ButtonIcon","FalconCardHeader","isIterableArray","rawEventTickets","TicketRow","id","name","price","checked","handleChange","handleRemove","target","value","propTypes","number","isRequired","string","func","bool","EventTicket","loading","loadingTickets","data","tickets","setData","setTickets","changeTicket","updatedTickets","map","ticket","updatedTicket","slice","removeTicket","ticketPrice","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Button, Card, CardBody, CustomInput, Input, Table } from 'reactstrap';\nimport useFakeFetch from '../../hooks/useFakeFetch';\nimport Loader from '../common/Loader';\nimport ButtonIcon from '../common/ButtonIcon';\nimport FalconCardHeader from '../common/FalconCardHeader';\nimport { isIterableArray } from '../../helpers/utils';\nimport rawEventTickets from '../../data/event/eventTickets';\n\nconst TicketRow = ({ id, name, price, checked = false, handleChange, handleRemove }) => (\n  <tr>\n    <td>\n      <Input\n        bsSize=\"sm\"\n        placeholder=\"Option Name\"\n        value={name}\n        onChange={({ target }) => handleChange(id, 'name', target.value)}\n      />\n    </td>\n    <td>\n      <Input\n        bsSize=\"sm\"\n        placeholder=\"Price\"\n        value={price}\n        onChange={({ target }) => handleChange(id, 'price', target.value)}\n      />\n    </td>\n    <td className=\"text-center align-middle\">\n      <CustomInput\n        type=\"radio\"\n        id={`ticketPrice${id}`}\n        name=\"ticketPriceRadio\"\n        checked={checked}\n        onChange={({ target }) => handleChange(id, 'checked', target.checked)}\n      />\n    </td>\n    <td className=\"text-center align-middle\">\n      <Button color=\"link\" size=\"sm\" onClick={() => handleRemove(id)}>\n        <FontAwesomeIcon icon=\"times-circle\" className=\"text-danger\" transform=\"shrink-3\" />\n      </Button>\n    </td>\n  </tr>\n);\n\nTicketRow.propTypes = {\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  price: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleRemove: PropTypes.func.isRequired,\n  checked: PropTypes.bool\n};\n\nconst EventTicket = () => {\n  // Data\n  const { loading: loadingTickets, data: tickets, setData: setTickets } = useFakeFetch(rawEventTickets);\n\n  // Change Ticket\n  const changeTicket = (id, name, value) => {\n    const updatedTickets = name === 'checked' ? tickets.map(ticket => ({ ...ticket, checked: false })) : [...tickets];\n    const updatedTicket = { ...tickets[id], [name]: value };\n\n    setTickets([...updatedTickets.slice(0, id), updatedTicket, ...updatedTickets.slice(id + 1)]);\n  };\n\n  // Remove Ticket\n  const removeTicket = id => setTickets([...tickets.slice(0, id), ...tickets.slice(id + 1)]);\n\n  return (\n    <Card className=\"mb-3\">\n      <FalconCardHeader title=\"Ticket Price\" light={false} />\n      <CardBody className=\"bg-light\">\n        <div className=\"mb-3\">\n          <Button color=\"falcon-default\" size=\"sm\">\n            Free\n            <span className=\"d-none d-sm-inline\"> Ticket</span>\n          </Button>\n          <Button color=\"falcon-primary\" size=\"sm\" className=\"ml-2\">\n            Paid\n            <span className=\"d-none d-sm-inline\"> Ticket</span>\n          </Button>\n          <Button color=\"falcon-default\" size=\"sm\" className=\"ml-2\">\n            Donation\n          </Button>\n        </div>\n        <hr />\n        <h6>Pricing Options:</h6>\n        <CustomInput type=\"checkbox\" id=\"variablePricingCheckbox\" label=\"Enable variable pricing\" />\n        <CustomInput type=\"checkbox\" id=\"multiOptionPurchaseCheckbox\" label=\"Enable multi-option purchase mode.\" />\n        <Table bordered className=\"mt-2 bg-white\">\n          <thead>\n            <tr className=\"fs--1\">\n              <th>Option Name</th>\n              <th>Price ($)</th>\n              <th>Default</th>\n              <th />\n            </tr>\n          </thead>\n          <tbody>\n            {loadingTickets ? (\n              <tr>\n                <td>\n                  <Loader />\n                </td>\n              </tr>\n            ) : (\n              isIterableArray(tickets) &&\n              tickets.map((ticketPrice, index) => (\n                <TicketRow\n                  {...ticketPrice}\n                  id={index}\n                  handleChange={changeTicket}\n                  handleRemove={removeTicket}\n                  key={index}\n                />\n              ))\n            )}\n          </tbody>\n        </Table>\n        <ButtonIcon\n          color=\"falcon-default\"\n          size=\"sm\"\n          icon=\"plus\"\n          onClick={() => setTickets([...tickets, { name: '', price: '' }])}\n        >\n          Add New\n        </ButtonIcon>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default EventTicket;\n"]},"metadata":{},"sourceType":"module"}