{"ast":null,"code":"var _jsxFileName = \"/Users/greypro/Documents/Dev/letter/letter-support/src/components/chat/sidebar/ChatSidebar.js\";\nimport React, { useContext } from 'react';\nimport { Nav } from 'reactstrap';\nimport Scrollbar from 'react-scrollbars-custom';\nimport ChatThread from './ChatThread';\nimport ChatContactsSearch from './ChatContactsSearch';\nimport AppContext, { ChatContext } from '../../../context/Context';\nimport { isIterableArray } from '../../../helpers/utils';\n\nconst ChatSidebar = () => {\n  const {\n    isRTL\n  } = useContext(AppContext);\n  const {\n    threads\n  } = useContext(ChatContext);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-sidebar rounded-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contacts-list bg-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Scrollbar, {\n    style: {\n      height: '100%',\n      minWidth: '75px'\n    },\n    rtl: isRTL,\n    noScrollX: true,\n    trackYProps: {\n      renderer(props) {\n        const {\n          elementRef,\n          ...restProps\n        } = props;\n        return /*#__PURE__*/React.createElement(\"span\", Object.assign({}, restProps, {\n          ref: elementRef,\n          className: \"TrackY\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 22\n          }\n        }));\n      }\n\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    className: \"border-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, isIterableArray(threads) && threads.map(thread => /*#__PURE__*/React.createElement(ChatThread, {\n    thread: thread,\n    key: thread.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 64\n    }\n  }))))), /*#__PURE__*/React.createElement(ChatContactsSearch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ChatSidebar;","map":{"version":3,"sources":["/Users/greypro/Documents/Dev/letter/letter-support/src/components/chat/sidebar/ChatSidebar.js"],"names":["React","useContext","Nav","Scrollbar","ChatThread","ChatContactsSearch","AppContext","ChatContext","isIterableArray","ChatSidebar","isRTL","threads","height","minWidth","renderer","props","elementRef","restProps","map","thread","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,UAAP,IAAqBC,WAArB,QAAwC,0BAAxC;AACA,SAASC,eAAT,QAAgC,wBAAhC;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAM;AAAEC,IAAAA;AAAF,MAAYT,UAAU,CAACK,UAAD,CAA5B;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAcV,UAAU,CAACM,WAAD,CAA9B;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAE;AACLK,MAAAA,MAAM,EAAE,MADH;AAELC,MAAAA,QAAQ,EAAE;AAFL,KADT;AAKE,IAAA,GAAG,EAAEH,KALP;AAME,IAAA,SAAS,MANX;AAOE,IAAA,WAAW,EAAE;AACXI,MAAAA,QAAQ,CAACC,KAAD,EAAQ;AACd,cAAM;AAAEC,UAAAA,UAAF;AAAc,aAAGC;AAAjB,YAA+BF,KAArC;AACA,4BAAO,8CAAUE,SAAV;AAAqB,UAAA,GAAG,EAAED,UAA1B;AAAsC,UAAA,SAAS,EAAC,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACD;;AAJU,KAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAcE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,eAAe,CAACG,OAAD,CAAf,IAA4BA,OAAO,CAACO,GAAR,CAAYC,MAAM,iBAAI,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAEA,MAApB;AAA4B,IAAA,GAAG,EAAEA,MAAM,CAACC,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAtB,CAD/B,CAdF,CADF,CADF,eAqBE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBF,CADF;AAyBD,CA7BD;;AA+BA,eAAeX,WAAf","sourcesContent":["import React, { useContext } from 'react';\r\nimport { Nav } from 'reactstrap';\r\nimport Scrollbar from 'react-scrollbars-custom';\r\nimport ChatThread from './ChatThread';\r\nimport ChatContactsSearch from './ChatContactsSearch';\r\nimport AppContext, { ChatContext } from '../../../context/Context';\r\nimport { isIterableArray } from '../../../helpers/utils';\r\n\r\nconst ChatSidebar = () => {\r\n  const { isRTL } = useContext(AppContext);\r\n  const { threads } = useContext(ChatContext);\r\n\r\n  return (\r\n    <div className=\"chat-sidebar rounded-left\">\r\n      <div className=\"contacts-list bg-white\">\r\n        <Scrollbar\r\n          style={{\r\n            height: '100%',\r\n            minWidth: '75px'\r\n          }}\r\n          rtl={isRTL}\r\n          noScrollX\r\n          trackYProps={{\r\n            renderer(props) {\r\n              const { elementRef, ...restProps } = props;\r\n              return <span {...restProps} ref={elementRef} className=\"TrackY\" />;\r\n            }\r\n          }}\r\n        >\r\n          <Nav className=\"border-0\">\r\n            {isIterableArray(threads) && threads.map(thread => <ChatThread thread={thread} key={thread.id} />)}\r\n          </Nav>\r\n        </Scrollbar>\r\n      </div>\r\n      <ChatContactsSearch />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatSidebar;\r\n"]},"metadata":{},"sourceType":"module"}