{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/Dev/letter/letter-support/src/components/email/inbox/InboxRowHoverActions.js\";\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { ButtonGroup } from 'reactstrap';\nimport InboxActionButton from './InboxActionButton';\nimport { EmailContext } from '../../../context/Context';\n\nconst EmailRowHoverActions = ({\n  id,\n  read,\n  snooze\n}) => {\n  const {\n    handleAction\n  } = useContext(EmailContext);\n  return /*#__PURE__*/React.createElement(ButtonGroup, {\n    size: \"sm\",\n    className: \"hover-actions r-0 mr-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(InboxActionButton, {\n    color: \"light\",\n    id: `archive${id}`,\n    icon: \"archive\",\n    onClick: () => handleAction('archive', [id]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, \"Archive\"), /*#__PURE__*/React.createElement(InboxActionButton, {\n    color: \"light\",\n    id: `delete${id}`,\n    icon: \"trash-alt\",\n    onClick: () => handleAction('delete', [id]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, \"Delete\"), /*#__PURE__*/React.createElement(InboxActionButton, {\n    color: \"light\",\n    id: `read${id}`,\n    icon: read ? 'envelope' : 'envelope-open',\n    onClick: () => handleAction('read', [id]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, \"Mark as \", read ? 'unread' : 'read'), /*#__PURE__*/React.createElement(InboxActionButton, {\n    color: \"light\",\n    id: `snooze${id}`,\n    icon: snooze ? ['far', 'clock'] : 'clock',\n    onClick: () => handleAction('snooze', [id]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, snooze ? 'Snoozed' : 'Snooze'));\n};\n\nEmailRowHoverActions.propTypes = {\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  read: PropTypes.bool.isRequired\n};\nexport default EmailRowHoverActions;","map":{"version":3,"sources":["/Users/matt/Documents/Dev/letter/letter-support/src/components/email/inbox/InboxRowHoverActions.js"],"names":["React","useContext","PropTypes","ButtonGroup","InboxActionButton","EmailContext","EmailRowHoverActions","id","read","snooze","handleAction","propTypes","oneOfType","number","string","isRequired","bool"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,SAASC,YAAT,QAA6B,0BAA7B;;AAEA,MAAMC,oBAAoB,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,IAAN;AAAYC,EAAAA;AAAZ,CAAD,KAA0B;AACrD,QAAM;AAAEC,IAAAA;AAAF,MAAmBT,UAAU,CAACI,YAAD,CAAnC;AAEA,sBACE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAC,IAAlB;AAAuB,IAAA,SAAS,EAAC,wBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,iBAAD;AAAmB,IAAA,KAAK,EAAC,OAAzB;AAAiC,IAAA,EAAE,EAAG,UAASE,EAAG,EAAlD;AAAqD,IAAA,IAAI,EAAC,SAA1D;AAAoE,IAAA,OAAO,EAAE,MAAMG,YAAY,CAAC,SAAD,EAAY,CAACH,EAAD,CAAZ,CAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAIE,oBAAC,iBAAD;AAAmB,IAAA,KAAK,EAAC,OAAzB;AAAiC,IAAA,EAAE,EAAG,SAAQA,EAAG,EAAjD;AAAoD,IAAA,IAAI,EAAC,WAAzD;AAAqE,IAAA,OAAO,EAAE,MAAMG,YAAY,CAAC,QAAD,EAAW,CAACH,EAAD,CAAX,CAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE,oBAAC,iBAAD;AACE,IAAA,KAAK,EAAC,OADR;AAEE,IAAA,EAAE,EAAG,OAAMA,EAAG,EAFhB;AAGE,IAAA,IAAI,EAAEC,IAAI,GAAG,UAAH,GAAgB,eAH5B;AAIE,IAAA,OAAO,EAAE,MAAME,YAAY,CAAC,MAAD,EAAS,CAACH,EAAD,CAAT,CAJ7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAMWC,IAAI,GAAG,QAAH,GAAc,MAN7B,CAPF,eAeE,oBAAC,iBAAD;AACE,IAAA,KAAK,EAAC,OADR;AAEE,IAAA,EAAE,EAAG,SAAQD,EAAG,EAFlB;AAGE,IAAA,IAAI,EAAEE,MAAM,GAAG,CAAC,KAAD,EAAQ,OAAR,CAAH,GAAsB,OAHpC;AAIE,IAAA,OAAO,EAAE,MAAMC,YAAY,CAAC,QAAD,EAAW,CAACH,EAAD,CAAX,CAJ7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGE,MAAM,GAAG,SAAH,GAAe,QANxB,CAfF,CADF;AA0BD,CA7BD;;AA+BAH,oBAAoB,CAACK,SAArB,GAAiC;AAC/BJ,EAAAA,EAAE,EAAEL,SAAS,CAACU,SAAV,CAAoB,CAACV,SAAS,CAACW,MAAX,EAAmBX,SAAS,CAACY,MAA7B,CAApB,EAA0DC,UAD/B;AAE/BP,EAAAA,IAAI,EAAEN,SAAS,CAACc,IAAV,CAAeD;AAFU,CAAjC;AAKA,eAAeT,oBAAf","sourcesContent":["import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { ButtonGroup } from 'reactstrap';\nimport InboxActionButton from './InboxActionButton';\nimport { EmailContext } from '../../../context/Context';\n\nconst EmailRowHoverActions = ({ id, read, snooze }) => {\n  const { handleAction } = useContext(EmailContext);\n\n  return (\n    <ButtonGroup size=\"sm\" className=\"hover-actions r-0 mr-3\">\n      <InboxActionButton color=\"light\" id={`archive${id}`} icon=\"archive\" onClick={() => handleAction('archive', [id])}>\n        Archive\n      </InboxActionButton>\n      <InboxActionButton color=\"light\" id={`delete${id}`} icon=\"trash-alt\" onClick={() => handleAction('delete', [id])}>\n        Delete\n      </InboxActionButton>\n      <InboxActionButton\n        color=\"light\"\n        id={`read${id}`}\n        icon={read ? 'envelope' : 'envelope-open'}\n        onClick={() => handleAction('read', [id])}\n      >\n        Mark as {read ? 'unread' : 'read'}\n      </InboxActionButton>\n      <InboxActionButton\n        color=\"light\"\n        id={`snooze${id}`}\n        icon={snooze ? ['far', 'clock'] : 'clock'}\n        onClick={() => handleAction('snooze', [id])}\n      >\n        {snooze ? 'Snoozed' : 'Snooze'}\n      </InboxActionButton>\n    </ButtonGroup>\n  );\n};\n\nEmailRowHoverActions.propTypes = {\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  read: PropTypes.bool.isRequired\n};\n\nexport default EmailRowHoverActions;\n"]},"metadata":{},"sourceType":"module"}