{"ast":null,"code":"/*\r\n  Leaflet.TileLayer.ColorFilter\r\n  (c) 2018, Claudio T. Kawakani\r\n  A simple and lightweight Leaflet plugin to apply CSS filters on map tiles.\r\n  https://github.com/xtk93x/Leaflet.TileLayer.ColorFilter\r\n*/\n\"use strict\";\n\nL.TileLayer.ColorFilter = L.TileLayer.extend({\n  intialize: function (t, i) {\n    L.TileLayer.prototype.initialize.call(this, t, i);\n  },\n  colorFilter: function () {\n    var r = [\"blur:px\", \"brightness:%\", \"bright:brightness:%\", \"bri:brightness:%\", \"contrast:%\", \"con:contrast:%\", \"grayscale:%\", \"gray:grayscale:%\", \"hue-rotate:deg\", \"hue:hue-rotate:deg\", \"hue-rotation:hue-rotate:deg\", \"invert:%\", \"inv:invert:%\", \"opacity:%\", \"op:opacity:%\", \"saturate:%\", \"saturation:saturate:%\", \"sat:saturate:%\", \"sepia:%\", \"sep:sepia:%\"];\n    return (this.options.filter ? this.options.filter : []).map(function (t) {\n      var i = t.toLowerCase().split(\":\");\n\n      if (2 === i.length) {\n        var e = r.find(function (t) {\n          return t.split(\":\")[0] === i[0];\n        });\n        if (e) return e = e.split(\":\"), i[1] += /^\\d+$/.test(i[1]) ? e[e.length - 1] : \"\", \"\".concat(e[e.length - 2], \"(\").concat(i[1], \")\");\n      }\n\n      return \"\";\n    }).join(\" \");\n  },\n  _initContainer: function () {\n    L.TileLayer.prototype._initContainer.call(this);\n\n    this._container.style.filter = this.colorFilter();\n  },\n  updateFilter: function (t) {\n    this.options.filter = t, this._container && (this._container.style.filter = this.colorFilter());\n  }\n}), L.tileLayer.colorFilter = function (t, i) {\n  return new L.TileLayer.ColorFilter(t, i);\n};","map":{"version":3,"sources":["/Users/matt/Documents/Dev/letter/letter-support/node_modules/leaflet.tilelayer.colorfilter/src/leaflet-tilelayer-colorfilter.min.js"],"names":["L","TileLayer","ColorFilter","extend","intialize","t","i","prototype","initialize","call","colorFilter","r","options","filter","map","toLowerCase","split","length","e","find","test","concat","join","_initContainer","_container","style","updateFilter","tileLayer"],"mappings":"AAAA;;;;;;AAMA;;AAAaA,CAAC,CAACC,SAAF,CAAYC,WAAZ,GAAwBF,CAAC,CAACC,SAAF,CAAYE,MAAZ,CAAmB;AAACC,EAAAA,SAAS,EAAC,UAASC,CAAT,EAAWC,CAAX,EAAa;AAACN,IAAAA,CAAC,CAACC,SAAF,CAAYM,SAAZ,CAAsBC,UAAtB,CAAiCC,IAAjC,CAAsC,IAAtC,EAA2CJ,CAA3C,EAA6CC,CAA7C;AAAgD,GAAzE;AAA0EI,EAAAA,WAAW,EAAC,YAAU;AAAC,QAAIC,CAAC,GAAC,CAAC,SAAD,EAAW,cAAX,EAA0B,qBAA1B,EAAgD,kBAAhD,EAAmE,YAAnE,EAAgF,gBAAhF,EAAiG,aAAjG,EAA+G,kBAA/G,EAAkI,gBAAlI,EAAmJ,oBAAnJ,EAAwK,6BAAxK,EAAsM,UAAtM,EAAiN,cAAjN,EAAgO,WAAhO,EAA4O,cAA5O,EAA2P,YAA3P,EAAwQ,uBAAxQ,EAAgS,gBAAhS,EAAiT,SAAjT,EAA2T,aAA3T,CAAN;AAAgV,WAAM,CAAC,KAAKC,OAAL,CAAaC,MAAb,GAAoB,KAAKD,OAAL,CAAaC,MAAjC,GAAwC,EAAzC,EAA6CC,GAA7C,CAAiD,UAAST,CAAT,EAAW;AAAC,UAAIC,CAAC,GAACD,CAAC,CAACU,WAAF,GAAgBC,KAAhB,CAAsB,GAAtB,CAAN;;AAAiC,UAAG,MAAIV,CAAC,CAACW,MAAT,EAAgB;AAAC,YAAIC,CAAC,GAACP,CAAC,CAACQ,IAAF,CAAO,UAASd,CAAT,EAAW;AAAC,iBAAOA,CAAC,CAACW,KAAF,CAAQ,GAAR,EAAa,CAAb,MAAkBV,CAAC,CAAC,CAAD,CAA1B;AAA8B,SAAjD,CAAN;AAAyD,YAAGY,CAAH,EAAK,OAAOA,CAAC,GAACA,CAAC,CAACF,KAAF,CAAQ,GAAR,CAAF,EAAeV,CAAC,CAAC,CAAD,CAAD,IAAM,QAAQc,IAAR,CAAad,CAAC,CAAC,CAAD,CAAd,IAAmBY,CAAC,CAACA,CAAC,CAACD,MAAF,GAAS,CAAV,CAApB,GAAiC,EAAtD,EAAyD,GAAGI,MAAH,CAAUH,CAAC,CAACA,CAAC,CAACD,MAAF,GAAS,CAAV,CAAX,EAAwB,GAAxB,EAA6BI,MAA7B,CAAoCf,CAAC,CAAC,CAAD,CAArC,EAAyC,GAAzC,CAAhE;AAA8G;;AAAA,aAAM,EAAN;AAAS,KAApS,EAAsSgB,IAAtS,CAA2S,GAA3S,CAAN;AAAsT,GAAvuB;AAAwuBC,EAAAA,cAAc,EAAC,YAAU;AAACvB,IAAAA,CAAC,CAACC,SAAF,CAAYM,SAAZ,CAAsBgB,cAAtB,CAAqCd,IAArC,CAA0C,IAA1C;;AAAgD,SAAKe,UAAL,CAAgBC,KAAhB,CAAsBZ,MAAtB,GAA6B,KAAKH,WAAL,EAA7B;AAAgD,GAAl2B;AAAm2BgB,EAAAA,YAAY,EAAC,UAASrB,CAAT,EAAW;AAAC,SAAKO,OAAL,CAAaC,MAAb,GAAoBR,CAApB,EAAsB,KAAKmB,UAAL,KAAkB,KAAKA,UAAL,CAAgBC,KAAhB,CAAsBZ,MAAtB,GAA6B,KAAKH,WAAL,EAA/C,CAAtB;AAAyF;AAAr9B,CAAnB,CAAxB,EAAmgCV,CAAC,CAAC2B,SAAF,CAAYjB,WAAZ,GAAwB,UAASL,CAAT,EAAWC,CAAX,EAAa;AAAC,SAAO,IAAIN,CAAC,CAACC,SAAF,CAAYC,WAAhB,CAA4BG,CAA5B,EAA8BC,CAA9B,CAAP;AAAwC,CAAjlC","sourcesContent":["/*\r\n  Leaflet.TileLayer.ColorFilter\r\n  (c) 2018, Claudio T. Kawakani\r\n  A simple and lightweight Leaflet plugin to apply CSS filters on map tiles.\r\n  https://github.com/xtk93x/Leaflet.TileLayer.ColorFilter\r\n*/\r\n\"use strict\";L.TileLayer.ColorFilter=L.TileLayer.extend({intialize:function(t,i){L.TileLayer.prototype.initialize.call(this,t,i)},colorFilter:function(){var r=[\"blur:px\",\"brightness:%\",\"bright:brightness:%\",\"bri:brightness:%\",\"contrast:%\",\"con:contrast:%\",\"grayscale:%\",\"gray:grayscale:%\",\"hue-rotate:deg\",\"hue:hue-rotate:deg\",\"hue-rotation:hue-rotate:deg\",\"invert:%\",\"inv:invert:%\",\"opacity:%\",\"op:opacity:%\",\"saturate:%\",\"saturation:saturate:%\",\"sat:saturate:%\",\"sepia:%\",\"sep:sepia:%\"];return(this.options.filter?this.options.filter:[]).map(function(t){var i=t.toLowerCase().split(\":\");if(2===i.length){var e=r.find(function(t){return t.split(\":\")[0]===i[0]});if(e)return e=e.split(\":\"),i[1]+=/^\\d+$/.test(i[1])?e[e.length-1]:\"\",\"\".concat(e[e.length-2],\"(\").concat(i[1],\")\")}return\"\"}).join(\" \")},_initContainer:function(){L.TileLayer.prototype._initContainer.call(this);this._container.style.filter=this.colorFilter()},updateFilter:function(t){this.options.filter=t,this._container&&(this._container.style.filter=this.colorFilter())}}),L.tileLayer.colorFilter=function(t,i){return new L.TileLayer.ColorFilter(t,i)};"]},"metadata":{},"sourceType":"script"}