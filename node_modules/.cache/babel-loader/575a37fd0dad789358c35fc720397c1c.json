{"ast":null,"code":"var _jsxFileName = \"/Users/greypro/Documents/Dev/letter/letter-support/src/components/bootstrap-components/VerticalNavbar.js\";\nimport React, { Fragment, useContext } from 'react';\nimport { Button, Card, CardBody, Media } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport vibrantImg from '../../assets/img/generic/vibrant.png'; // import card from '../../assets/img/generic/card.png';\n// import vibrant from '../../assets/img/generic/vibrant.png';\n\nimport PageHeader from '../common/PageHeader';\nimport FalconCardHeader from '../common/FalconCardHeader';\nimport CodeHighlight from '../common/CodeHighlight';\nimport AppContext from '../../context/Context';\n\nconst SpinnersExample = () => {\n  const {\n    setNavbarStyle\n  } = useContext(AppContext);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PageHeader, {\n    title: \"Vertical Navbar\",\n    description: \"Here is the available built-in option of Falcon's powerful, responsive vertical navigation. The following sections describe how you can customize both the responsive breakpoint and collapsing behavior.\",\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FalconCardHeader, {\n    title: \"Responsive behavior\",\n    light: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CardBody, {\n    className: \"bg-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, \"Falcon used the reactstrap's \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 40\n    }\n  }, \"expand\"), \" property in \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 72\n    }\n  }, \"Navbar\"), \" component to decide when the navbar vertical will expand or not.\", /*#__PURE__*/React.createElement(CodeHighlight, {\n    language: \"html\",\n    code: `\n              <Navbar color=\"light\" light expand=\"md\">\n                  // content \n              </Navbar>`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Card, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FalconCardHeader, {\n    title: \"Collapsing behavior\",\n    light: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CardBody, {\n    className: \"bg-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"You can control the default collapsing behavior of Falcon's vertical navigation - whether it will show up with the collapsed or expanded state when the page loads. From your project directory,\", ' ', /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, \"src/context/Context.js\"), \" and set initial navbar collapse state like\", ' ', /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, \"isNavbarVerticalCollapsed: false\"), \" into \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 62\n    }\n  }, \"AppContext\"), \" then go to \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 97\n    }\n  }, \"src/Main.js\"), ' ', \"for set the value to the AppContext provider\", /*#__PURE__*/React.createElement(CodeHighlight, {\n    language: \"jsx\",\n    code: ` const [isNavbarVerticalCollapsed, setIsNavbarVerticalCollapsed] = useState(getItemFromStore('isNavbarVerticalCollapsed', false));\n\n  useEffect(() => {\n    setItemToStore('isNavbarVerticalCollapsed', isNavbarVerticalCollapsed);\n    // eslint-disable-next-line\n  }, [isNavbarVerticalCollapsed]);\n            \n            `,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"my-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(PageHeader, {\n    title: \"Navbar Styles\",\n    description: \"You can change the look of your Navbar Vertical in different styles. You can also customize your navbar vertical using SCSS variables. One of the navbar style example <code>vibrant</code>  given below:\",\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    className: \"mb-3 mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    middle: true,\n    href: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: vibrantImg,\n    alt: \"\",\n    className: \"mr-3 border border-2x rounded-soft bg-200\",\n    width: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Media, {\n    body: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    heading: true,\n    className: \"mb-0 contains-anchor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, \"Navbar Vertical vibrant\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, \"You can update your Navbar Vertical \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 53\n    }\n  }, \"background-color\"), \" with Navbar Vertical vibrant.\"), /*#__PURE__*/React.createElement(Button, {\n    tag: \"a\",\n    href: \"#!\" // target=\"_blank\"\n    ,\n    color: \"link\",\n    size: \"sm\",\n    className: \"pl-0\",\n    onClick: () => setNavbarStyle(pre => {\n      if (pre === 'vibrant') {\n        return 'transparent';\n      } else {\n        return 'vibrant';\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, \"See The implementation here\", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: \"chevron-right\",\n    className: \"ml-1 fs--2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  })))))), /*#__PURE__*/React.createElement(Card, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FalconCardHeader, {\n    title: \"JSX\",\n    light: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CardBody, {\n    className: \"bg-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, \"Use \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, \"navbarStyle\"), \" prop to \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 48\n    }\n  }, \"NavbarVertical\"), \" component to change the navbar style. Example:\", /*#__PURE__*/React.createElement(CodeHighlight, {\n    language: \"jsx\",\n    code: `<NavbarVertical navbarStyle='vibrant' />`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Card, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FalconCardHeader, {\n    title: \"SCSS\",\n    light: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CardBody, {\n    className: \"bg-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, \"Falcon allow you to customize your Navbar vibrant with SCSS variables. The available options are listed below:\", /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"mt-3 fs-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, \"Background\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, \"To change the background only for the Navbar vibrant, add the inline CSS style to \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 95\n    }\n  }, \"Collapse\"), \" tag in \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 16\n    }\n  }, \"NavbarVertical.js\"), \" file.\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n    language: \"jsx\",\n    code: `<Collapse\n  navbar\n  style={\n    navbarStyle === 'vibrant' && {\n      backgroundImage: linear-gradient(-45deg, rgba(0, 160, 255, 0.86), #0048a2),url(${'bgNavbarImg'})\n    }\n  }\n>`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, \"For other navbar style add the SCSS variables \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 59\n    }\n  }, \"$navbar-inverted-bg, navbar-card-bg\"), \" in your\", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, \"_user-variables.scss\"), \". You can update both overlay color using this variable. Example:\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n    language: \"scss\",\n    code: `$navbar-inverted-bg: $gray-1000;\n$navbar-card-bg: $gray-1000`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"mt-5 fs-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, \"Navbar card shadow\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }, \"To change the shadow of the Navbar Card, add the SCSS variable \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 76\n    }\n  }, \"$navbar-card-shadow\"), \" in your\", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, \" _user-variables.scss.\"), \". Example:\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n    language: \"\\r scss\",\n    code: \"$navbar-card-shadow:  $box-shadow;\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"mt-5 fs-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, \"Link color\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, \"To change the color of the Navbar Vibrant links, add the SCSS variable\", ' ', /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, \"$navbar-vibrant-link-color\"), \" in your\", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, \" _user-variables.scss.\"), \". Example:\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n    language: \"scss\",\n    code: \"$navbar-vibrant-link-color: $gray-500;\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"mt-5 fs-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, \"Link hover color\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }, \"To change the hover color of the Navbar Vibrant links, add the SCSS vairable\", ' ', /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, \"$navbar-vibrant-link-hover-color\"), \" in your\", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, \"_user-variables.scss\"), \". Example:\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n    language: \"scss\",\n    code: \"$navbar-vibrant-link-hover-color: $gray-200;\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"mt-5 fs-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }, \"Link active color\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }, \"To change the active color of the Navbar Vibrant links, add the SCSS vairable\", ' ', /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }, \"$navbar-vibrant-link-active-color\"), \" in your\", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }, \"_user-variables.scss\"), \". Example:\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n    language: \"scss\",\n    code: \"$navbar-vibrant-link-active-color: $gray-200;\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"mt-5 fs-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, \"Navbar vibrant divider\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  }, \"To change the divider color, add the SCSS vairable \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 64\n    }\n  }, \"$navbar-vibrant-hr-color\"), \" in your\", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }, \"_user-variables.scss\"), \". Example:\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n    language: \"scss\",\n    code: \"$navbar-vibrant-hr-color: rgba($white, 0.2);\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"mt-5 fs-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 11\n    }\n  }, \"Navbar vibrant scrollbar color\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }, \"To change the scrollbar color, add the SCSS vairable \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 66\n    }\n  }, \"$navbar-vibrant-scrollbar-color\"), \" in your\", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, \"_user-variables.scss\"), \". Example:\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n    language: \"scss\",\n    code: \"$navbar-vibrant-scrollbar-color: $gray-400;\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mt-4 font-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }\n  }, \"For the \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 21\n    }\n  }, \"inverted\"), \" and \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 47\n    }\n  }, \"card\"), \" variation, please follow the same procedure.\"))));\n};\n\nexport default SpinnersExample;","map":{"version":3,"sources":["/Users/greypro/Documents/Dev/letter/letter-support/src/components/bootstrap-components/VerticalNavbar.js"],"names":["React","Fragment","useContext","Button","Card","CardBody","Media","FontAwesomeIcon","vibrantImg","PageHeader","FalconCardHeader","CodeHighlight","AppContext","SpinnersExample","setNavbarStyle","pre"],"mappings":"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","sourcesContent":["import React, { Fragment, useContext } from 'react';\r\nimport { Button, Card, CardBody, Media } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport vibrantImg from '../../assets/img/generic/vibrant.png';\r\n// import card from '../../assets/img/generic/card.png';\r\n// import vibrant from '../../assets/img/generic/vibrant.png';\r\nimport PageHeader from '../common/PageHeader';\r\nimport FalconCardHeader from '../common/FalconCardHeader';\r\nimport CodeHighlight from '../common/CodeHighlight';\r\nimport AppContext from '../../context/Context';\r\n\r\nconst SpinnersExample = () => {\r\n  const { setNavbarStyle } = useContext(AppContext);\r\n  return (\r\n    <Fragment>\r\n      <PageHeader\r\n        title=\"Vertical Navbar\"\r\n        description=\"Here is the available built-in option of Falcon's powerful, responsive vertical navigation. The following sections describe how you can customize both the responsive breakpoint and collapsing behavior.\"\r\n        className=\"mb-3\"\r\n      />\r\n      <Card className=\"mb-3\">\r\n        <FalconCardHeader title=\"Responsive behavior\" light={false} />\r\n        <CardBody className=\"bg-light\">\r\n          Falcon used the reactstrap's <code>expand</code> property in <code>Navbar</code> component to decide when the\r\n          navbar vertical will expand or not.\r\n          <CodeHighlight\r\n            language=\"html\"\r\n            code={`\r\n              <Navbar color=\"light\" light expand=\"md\">\r\n                  // content \r\n              </Navbar>`}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n      <Card className=\"mb-3\">\r\n        <FalconCardHeader title=\"Collapsing behavior\" light={false} />\r\n        <CardBody className=\"bg-light\">\r\n          You can control the default collapsing behavior of Falcon's vertical navigation - whether it will show up with\r\n          the collapsed or expanded state when the page loads. From your project directory,{' '}\r\n          <code>src/context/Context.js</code> and set initial navbar collapse state like{' '}\r\n          <code>isNavbarVerticalCollapsed: false</code> into <code>AppContext</code> then go to <code>src/Main.js</code>{' '}\r\n          for set the value to the AppContext provider\r\n          <CodeHighlight\r\n            language=\"jsx\"\r\n            code={` const [isNavbarVerticalCollapsed, setIsNavbarVerticalCollapsed] = useState(getItemFromStore('isNavbarVerticalCollapsed', false));\r\n\r\n  useEffect(() => {\r\n    setItemToStore('isNavbarVerticalCollapsed', isNavbarVerticalCollapsed);\r\n    // eslint-disable-next-line\r\n  }, [isNavbarVerticalCollapsed]);\r\n            \r\n            `}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n\r\n      <hr className=\"my-4\" />\r\n      <PageHeader\r\n        title=\"Navbar Styles\"\r\n        description=\"You can change the look of your Navbar Vertical in different styles. You can also customize your navbar vertical using SCSS variables. One of the navbar style example <code>vibrant</code>  given below:\"\r\n        className=\"mb-3\"\r\n      />\r\n      <Card className=\"mb-3 mt-4\">\r\n        <CardBody>\r\n          <Media>\r\n            <Media middle href=\"#\">\r\n              <img src={vibrantImg} alt=\"\" className=\"mr-3 border border-2x rounded-soft bg-200\" width=\"100\" />\r\n            </Media>\r\n            <Media body>\r\n              <Media heading className=\"mb-0 contains-anchor\">\r\n                Navbar Vertical vibrant\r\n              </Media>\r\n              <p className=\"mb-1\">\r\n                You can update your Navbar Vertical <code>background-color</code> with Navbar Vertical vibrant.\r\n              </p>\r\n              <Button\r\n                tag=\"a\"\r\n                href=\"#!\"\r\n                // target=\"_blank\"\r\n                color=\"link\"\r\n                size=\"sm\"\r\n                className=\"pl-0\"\r\n                onClick={() =>\r\n                  setNavbarStyle(pre => {\r\n                    if (pre === 'vibrant') {\r\n                      return 'transparent';\r\n                    } else {\r\n                      return 'vibrant';\r\n                    }\r\n                  })\r\n                }\r\n              >\r\n                See The implementation here\r\n                <FontAwesomeIcon icon=\"chevron-right\" className=\"ml-1 fs--2\" />\r\n              </Button>\r\n            </Media>\r\n          </Media>\r\n        </CardBody>\r\n      </Card>\r\n      <Card className=\"mb-3\">\r\n        <FalconCardHeader title=\"JSX\" light={false} />\r\n        <CardBody className=\"bg-light\">\r\n          Use <code>navbarStyle</code> prop to <code>NavbarVertical</code> component to change the navbar style.\r\n          Example:\r\n          <CodeHighlight language=\"jsx\" code={`<NavbarVertical navbarStyle='vibrant' />`} />\r\n        </CardBody>\r\n      </Card>\r\n      <Card className=\"mb-3\">\r\n        <FalconCardHeader title=\"SCSS\" light={false} />\r\n        <CardBody className=\"bg-light\">\r\n          Falcon allow you to customize your Navbar vibrant with SCSS variables. The available options are listed below:\r\n          <h6 className=\"mt-3 fs-0\">Background</h6>\r\n          <p>\r\n            To change the background only for the Navbar vibrant, add the inline CSS style to <code>Collapse</code> tag\r\n            in <code>NavbarVertical.js</code> file.\r\n          </p>\r\n          <CodeHighlight\r\n            language=\"jsx\"\r\n            code={`<Collapse\r\n  navbar\r\n  style={\r\n    navbarStyle === 'vibrant' && {\r\n      backgroundImage: linear-gradient(-45deg, rgba(0, 160, 255, 0.86), #0048a2),url(${'bgNavbarImg'})\r\n    }\r\n  }\r\n>`}\r\n          />\r\n          <p className=\"my-3\">\r\n            For other navbar style add the SCSS variables <code>$navbar-inverted-bg, navbar-card-bg</code> in your\r\n            <code>_user-variables.scss</code>. You can update both overlay color using this variable. Example:\r\n          </p>\r\n          <CodeHighlight\r\n            language=\"scss\"\r\n            code={`$navbar-inverted-bg: $gray-1000;\r\n$navbar-card-bg: $gray-1000`}\r\n          />\r\n          <h6 className=\"mt-5 fs-0\">Navbar card shadow</h6>\r\n          <p>\r\n            To change the shadow of the Navbar Card, add the SCSS variable <code>$navbar-card-shadow</code> in your\r\n            <code> _user-variables.scss.</code>. Example:\r\n          </p>\r\n          <CodeHighlight\r\n            language=\"\r\n          scss\"\r\n            code=\"$navbar-card-shadow:  $box-shadow;\"\r\n          />\r\n          <h6 className=\"mt-5 fs-0\">Link color</h6>\r\n          <p>\r\n            To change the color of the Navbar Vibrant links, add the SCSS variable{' '}\r\n            <code>$navbar-vibrant-link-color</code> in your\r\n            <code> _user-variables.scss.</code>. Example:\r\n          </p>\r\n          <CodeHighlight language=\"scss\" code=\"$navbar-vibrant-link-color: $gray-500;\" />\r\n          <h6 className=\"mt-5 fs-0\">Link hover color</h6>\r\n          <p>\r\n            To change the hover color of the Navbar Vibrant links, add the SCSS vairable{' '}\r\n            <code>$navbar-vibrant-link-hover-color</code> in your\r\n            <code>_user-variables.scss</code>. Example:\r\n          </p>\r\n          <CodeHighlight language=\"scss\" code=\"$navbar-vibrant-link-hover-color: $gray-200;\" />\r\n          {/* Link active color */}\r\n          <h6 className=\"mt-5 fs-0\">Link active color</h6>\r\n          <p>\r\n            To change the active color of the Navbar Vibrant links, add the SCSS vairable{' '}\r\n            <code>$navbar-vibrant-link-active-color</code> in your\r\n            <code>_user-variables.scss</code>. Example:\r\n          </p>\r\n          <CodeHighlight language=\"scss\" code=\"$navbar-vibrant-link-active-color: $gray-200;\" />\r\n          <h6 className=\"mt-5 fs-0\">Navbar vibrant divider</h6>\r\n          <p>\r\n            To change the divider color, add the SCSS vairable <code>$navbar-vibrant-hr-color</code> in your\r\n            <code>_user-variables.scss</code>. Example:\r\n          </p>\r\n          <CodeHighlight language=\"scss\" code=\"$navbar-vibrant-hr-color: rgba($white, 0.2);\" />\r\n          <h6 className=\"mt-5 fs-0\">Navbar vibrant scrollbar color</h6>\r\n          <p>\r\n            To change the scrollbar color, add the SCSS vairable <code>$navbar-vibrant-scrollbar-color</code> in your\r\n            <code>_user-variables.scss</code>. Example:\r\n          </p>\r\n          <CodeHighlight language=\"scss\" code=\"$navbar-vibrant-scrollbar-color: $gray-400;\" />\r\n          <p className=\"mt-4 font-weight-bold\">\r\n            For the <code>inverted</code> and <code>card</code> variation, please follow the same procedure.\r\n          </p>\r\n        </CardBody>\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default SpinnersExample;\r\n"]},"metadata":{},"sourceType":"module"}