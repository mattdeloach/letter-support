{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/Dev/letter/letter-support/src/components/navbar/NavbarVertical.js\";\nimport classNames from 'classnames';\nimport is from 'is_js';\nimport PropTypes from 'prop-types';\nimport React, { useContext, useEffect, useRef } from 'react';\nimport { Button, Collapse, Nav, Navbar } from 'reactstrap';\nimport bgNavbarImg from '../../assets/img/generic/bg-navbar.png';\nimport { navbarBreakPoint, topNavbarBreakpoint } from '../../config';\nimport AppContext from '../../context/Context';\nimport routes from '../../routes';\nimport Flex from '../common/Flex';\nimport Logo from './Logo';\nimport NavbarTopDropDownMenus from './NavbarTopDropDownMenus';\nimport NavbarVerticalMenu from './NavbarVerticalMenu';\nimport ToggleButton from './ToggleButton';\n\nconst NavbarVertical = ({\n  navbarStyle\n}) => {\n  const navBarRef = useRef(null);\n  const {\n    showBurgerMenu,\n    isNavbarVerticalCollapsed,\n    setIsNavbarVerticalCollapsed,\n    isCombo,\n    setShowBurgerMenu,\n    setNavbarCollapsed\n  } = useContext(AppContext);\n  const HTMLClassList = document.getElementsByTagName('html')[0].classList; //Control Component did mount and unmounted of hover effect\n\n  if (isNavbarVerticalCollapsed) {\n    HTMLClassList.add('navbar-vertical-collapsed');\n  }\n\n  useEffect(() => {\n    if (is.windows()) {\n      HTMLClassList.add('windows');\n    }\n\n    if (is.chrome()) {\n      HTMLClassList.add('chrome');\n    }\n\n    if (is.firefox()) {\n      HTMLClassList.add('firefox');\n    }\n\n    return () => {\n      HTMLClassList.remove('navbar-vertical-collapsed-hover');\n    };\n  }, [isNavbarVerticalCollapsed, HTMLClassList]); //Control mouseEnter event\n\n  let time = null;\n\n  const handleMouseEnter = () => {\n    if (isNavbarVerticalCollapsed) {\n      time = setTimeout(() => {\n        HTMLClassList.add('navbar-vertical-collapsed-hover');\n      }, 100);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Navbar, {\n    expand: navbarBreakPoint,\n    className: classNames('navbar-vertical navbar-glass', {\n      [`navbar-${navbarStyle}`]: navbarStyle !== 'transparent'\n    }),\n    light: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Flex, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ToggleButton, {\n    isNavbarVerticalCollapsed: isNavbarVerticalCollapsed,\n    setIsNavbarVerticalCollapsed: setIsNavbarVerticalCollapsed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Logo, {\n    at: \"navbar-vertical\",\n    width: 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Collapse, {\n    navbar: true,\n    isOpen: showBurgerMenu,\n    className: \"scrollbar\",\n    innerRef: navBarRef,\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: () => {\n      clearTimeout(time);\n      HTMLClassList.remove('navbar-vertical-collapsed-hover');\n    },\n    style: navbarStyle === 'vibrant' && {\n      backgroundImage: `linear-gradient(-45deg, rgba(0, 160, 255, 0.86), #0048a2),url(${bgNavbarImg})`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    navbar: true,\n    vertical: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NavbarVerticalMenu, {\n    routes: routes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"settings px-3 px-xl-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, isCombo && /*#__PURE__*/React.createElement(\"div\", {\n    className: `d-${topNavbarBreakpoint}-none`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navbar-vertical-divider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"navbar-vertical-hr my-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Nav, {\n    navbar: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(NavbarTopDropDownMenus, {\n    setNavbarCollapsed: setNavbarCollapsed,\n    setShowBurgerMenu: setShowBurgerMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navbar-vertical-divider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"navbar-vertical-hr my-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    tag: 'a',\n    href: \"https://themes.getbootstrap.com/product/falcon-admin-dashboard-webapp-template-react/\",\n    target: \"_blank\",\n    color: \"primary\",\n    size: \"sm\",\n    block: true,\n    className: \"my-3 btn-purchase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, \"Purchase\"))));\n};\n\nNavbarVertical.protoTypes = {\n  navbarStyle: PropTypes.string\n};\nNavbarVertical.defaultProps = {\n  navbarStyle: 'transparent'\n};\nexport default NavbarVertical;","map":{"version":3,"sources":["/Users/matt/Documents/Dev/letter/letter-support/src/components/navbar/NavbarVertical.js"],"names":["classNames","is","PropTypes","React","useContext","useEffect","useRef","Button","Collapse","Nav","Navbar","bgNavbarImg","navbarBreakPoint","topNavbarBreakpoint","AppContext","routes","Flex","Logo","NavbarTopDropDownMenus","NavbarVerticalMenu","ToggleButton","NavbarVertical","navbarStyle","navBarRef","showBurgerMenu","isNavbarVerticalCollapsed","setIsNavbarVerticalCollapsed","isCombo","setShowBurgerMenu","setNavbarCollapsed","HTMLClassList","document","getElementsByTagName","classList","add","windows","chrome","firefox","remove","time","handleMouseEnter","setTimeout","clearTimeout","backgroundImage","protoTypes","string","defaultProps"],"mappings":"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","sourcesContent":["import classNames from 'classnames';\r\nimport is from 'is_js';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useContext, useEffect, useRef } from 'react';\r\nimport { Button, Collapse, Nav, Navbar } from 'reactstrap';\r\nimport bgNavbarImg from '../../assets/img/generic/bg-navbar.png';\r\nimport { navbarBreakPoint, topNavbarBreakpoint } from '../../config';\r\nimport AppContext from '../../context/Context';\r\nimport routes from '../../routes';\r\nimport Flex from '../common/Flex';\r\nimport Logo from './Logo';\r\nimport NavbarTopDropDownMenus from './NavbarTopDropDownMenus';\r\nimport NavbarVerticalMenu from './NavbarVerticalMenu';\r\nimport ToggleButton from './ToggleButton';\r\n\r\nconst NavbarVertical = ({ navbarStyle }) => {\r\n  const navBarRef = useRef(null);\r\n\r\n  const {\r\n    showBurgerMenu,\r\n    isNavbarVerticalCollapsed,\r\n    setIsNavbarVerticalCollapsed,\r\n    isCombo,\r\n    setShowBurgerMenu,\r\n    setNavbarCollapsed\r\n  } = useContext(AppContext);\r\n\r\n  const HTMLClassList = document.getElementsByTagName('html')[0].classList;\r\n  //Control Component did mount and unmounted of hover effect\r\n  if (isNavbarVerticalCollapsed) {\r\n    HTMLClassList.add('navbar-vertical-collapsed');\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (is.windows()) {\r\n      HTMLClassList.add('windows');\r\n    }\r\n    if (is.chrome()) {\r\n      HTMLClassList.add('chrome');\r\n    }\r\n    if (is.firefox()) {\r\n      HTMLClassList.add('firefox');\r\n    }\r\n    return () => {\r\n      HTMLClassList.remove('navbar-vertical-collapsed-hover');\r\n    };\r\n  }, [isNavbarVerticalCollapsed, HTMLClassList]);\r\n\r\n  //Control mouseEnter event\r\n  let time = null;\r\n  const handleMouseEnter = () => {\r\n    if (isNavbarVerticalCollapsed) {\r\n      time = setTimeout(() => {\r\n        HTMLClassList.add('navbar-vertical-collapsed-hover');\r\n      }, 100);\r\n    }\r\n  };\r\n  return (\r\n    <Navbar\r\n      expand={navbarBreakPoint}\r\n      className={classNames('navbar-vertical navbar-glass', {\r\n        [`navbar-${navbarStyle}`]: navbarStyle !== 'transparent'\r\n      })}\r\n      light\r\n    >\r\n      <Flex align=\"center\">\r\n        <ToggleButton\r\n          isNavbarVerticalCollapsed={isNavbarVerticalCollapsed}\r\n          setIsNavbarVerticalCollapsed={setIsNavbarVerticalCollapsed}\r\n        />\r\n        <Logo at=\"navbar-vertical\" width={40} />\r\n      </Flex>\r\n\r\n      <Collapse\r\n        navbar\r\n        isOpen={showBurgerMenu}\r\n        className=\"scrollbar\"\r\n        innerRef={navBarRef}\r\n        onMouseEnter={handleMouseEnter}\r\n        onMouseLeave={() => {\r\n          clearTimeout(time);\r\n          HTMLClassList.remove('navbar-vertical-collapsed-hover');\r\n        }}\r\n        style={\r\n          navbarStyle === 'vibrant' && {\r\n            backgroundImage: `linear-gradient(-45deg, rgba(0, 160, 255, 0.86), #0048a2),url(${bgNavbarImg})`\r\n          }\r\n        }\r\n      >\r\n        <Nav navbar vertical>\r\n          <NavbarVerticalMenu routes={routes} />\r\n        </Nav>\r\n        <div className=\"settings px-3 px-xl-0\">\r\n          {isCombo && (\r\n            <div className={`d-${topNavbarBreakpoint}-none`}>\r\n              <div className=\"navbar-vertical-divider\">\r\n                <hr className=\"navbar-vertical-hr my-2\" />\r\n              </div>\r\n              <Nav navbar>\r\n                <NavbarTopDropDownMenus setNavbarCollapsed={setNavbarCollapsed} setShowBurgerMenu={setShowBurgerMenu} />\r\n              </Nav>\r\n            </div>\r\n          )}\r\n          <div className=\"navbar-vertical-divider\">\r\n            <hr className=\"navbar-vertical-hr my-2\" />\r\n          </div>\r\n          <Button\r\n            tag={'a'}\r\n            href=\"https://themes.getbootstrap.com/product/falcon-admin-dashboard-webapp-template-react/\"\r\n            target=\"_blank\"\r\n            color=\"primary\"\r\n            size=\"sm\"\r\n            block\r\n            className=\"my-3 btn-purchase\"\r\n          >\r\n            Purchase\r\n          </Button>\r\n        </div>\r\n      </Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nNavbarVertical.protoTypes = {\r\n  navbarStyle: PropTypes.string\r\n};\r\n\r\nNavbarVertical.defaultProps = {\r\n  navbarStyle: 'transparent'\r\n};\r\n\r\nexport default NavbarVertical;\r\n"]},"metadata":{},"sourceType":"module"}