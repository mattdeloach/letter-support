{"ast":null,"code":"var _jsxFileName = \"/Users/greypro/Documents/Dev/letter/letter-support/src/components/email/inbox/InboxHeader.js\";\nimport React, { Fragment, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, CardHeader, Col, CustomInput, Row } from 'reactstrap';\nimport Flex from '../../common/Flex';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport DropdownFilter from './DropdownFilter';\nimport InboxBulkActions from './InboxBulkActions';\nimport { Link } from 'react-router-dom';\nimport { EmailContext } from '../../../context/Context';\n\nconst InboxHeader = ({\n  isAllSelected,\n  toggleIsAllSelected,\n  selectedItems,\n  isIndeterminate\n}) => {\n  // Context\n  const {\n    filters,\n    handleFilter,\n    currentFilter\n  } = useContext(EmailContext);\n  return /*#__PURE__*/React.createElement(CardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    tag: Flex,\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CustomInput, {\n    id: \"checkbox-bulk\",\n    type: \"checkbox\",\n    checked: isAllSelected,\n    onChange: () => toggleIsAllSelected(),\n    innerRef: input => input && (input.indeterminate = isIndeterminate),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  }), isAllSelected || isIndeterminate ? /*#__PURE__*/React.createElement(InboxBulkActions, {\n    selectedItems: selectedItems,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"falcon-default\",\n    className: \"btn-sm ml-sm-1\",\n    onClick: () => handleFilter('all'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: \"redo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(DropdownFilter, {\n    className: \"ml-2\",\n    filters: filters,\n    handleFilter: handleFilter,\n    currentFilter: currentFilter,\n    icon: \"sliders-h\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    xs: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    tag: Link,\n    color: \"falcon-primary\",\n    size: \"sm\",\n    to: \"/email/compose\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: \"plus\",\n    transform: \"shrink-3\",\n    className: \"mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }), \"Compose \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"d-md-inline-block d-none \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, \"new\")))));\n};\n\nInboxHeader.propTypes = {\n  isAllSelected: PropTypes.bool.isRequired,\n  toggleIsAllSelected: PropTypes.func.isRequired,\n  selectedItems: PropTypes.array.isRequired\n};\nexport default InboxHeader;","map":{"version":3,"sources":["/Users/greypro/Documents/Dev/letter/letter-support/src/components/email/inbox/InboxHeader.js"],"names":["React","Fragment","useContext","PropTypes","Button","CardHeader","Col","CustomInput","Row","Flex","FontAwesomeIcon","DropdownFilter","InboxBulkActions","Link","EmailContext","InboxHeader","isAllSelected","toggleIsAllSelected","selectedItems","isIndeterminate","filters","handleFilter","currentFilter","input","indeterminate","propTypes","bool","isRequired","func","array"],"mappings":"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","sourcesContent":["import React, { Fragment, useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, CardHeader, Col, CustomInput, Row } from 'reactstrap';\r\nimport Flex from '../../common/Flex';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport DropdownFilter from './DropdownFilter';\r\nimport InboxBulkActions from './InboxBulkActions';\r\nimport { Link } from 'react-router-dom';\r\nimport { EmailContext } from '../../../context/Context';\r\n\r\nconst InboxHeader = ({ isAllSelected, toggleIsAllSelected, selectedItems, isIndeterminate }) => {\r\n  // Context\r\n  const { filters, handleFilter, currentFilter } = useContext(EmailContext);\r\n\r\n  return (\r\n    <CardHeader>\r\n      <Row>\r\n        <Col tag={Flex} align=\"center\">\r\n          <CustomInput\r\n            id=\"checkbox-bulk\"\r\n            type=\"checkbox\"\r\n            checked={isAllSelected}\r\n            onChange={() => toggleIsAllSelected()}\r\n            innerRef={input => input && (input.indeterminate = isIndeterminate)}\r\n          />\r\n\r\n          {isAllSelected || isIndeterminate ? (\r\n            <InboxBulkActions selectedItems={selectedItems} />\r\n          ) : (\r\n            <Fragment>\r\n              <Button color=\"falcon-default\" className=\"btn-sm ml-sm-1\" onClick={() => handleFilter('all')}>\r\n                <FontAwesomeIcon icon=\"redo\" />\r\n              </Button>\r\n              <DropdownFilter\r\n                className=\"ml-2\"\r\n                filters={filters}\r\n                handleFilter={handleFilter}\r\n                currentFilter={currentFilter}\r\n                icon=\"sliders-h\"\r\n              />\r\n            </Fragment>\r\n          )}\r\n        </Col>\r\n        <Col xs=\"auto\">\r\n          <Button tag={Link} color=\"falcon-primary\" size=\"sm\" to=\"/email/compose\">\r\n            <FontAwesomeIcon icon=\"plus\" transform=\"shrink-3\" className=\"mr-1\" />\r\n            Compose <span className=\"d-md-inline-block d-none \">new</span>\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </CardHeader>\r\n  );\r\n};\r\n\r\nInboxHeader.propTypes = {\r\n  isAllSelected: PropTypes.bool.isRequired,\r\n  toggleIsAllSelected: PropTypes.func.isRequired,\r\n  selectedItems: PropTypes.array.isRequired\r\n};\r\n\r\nexport default InboxHeader;\r\n"]},"metadata":{},"sourceType":"module"}