{"ast":null,"code":"var _jsxFileName = \"/Users/greypro/Documents/Dev/letter/letter-support/src/components/agent/transaction-detail/TransactionDetail.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Badge, Card, CardBody, CardFooter, CardHeader, Col, DropdownItem, DropdownMenu, DropdownToggle, Media, Row, UncontrolledDropdown } from 'reactstrap';\nimport Loader from '../../common/Loader';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport FalconCardHeader from '../../common/FalconCardHeader';\nimport FalconCardFooterLink from '../../common/FalconCardFooterLink';\nimport useFakeFetch from '../../../hooks/useFakeFetch';\nimport { isIterableArray } from '../../../helpers/utils';\nimport createMarkup from '../../../helpers/createMarkup';\nimport rawCustomer from './data/vendor';\nimport rawCustomerLogs from './data/purchaseHistory';\nimport Avatar from '../../common/Avatar';\nimport logo from '../../../assets/img/logos/apple.png';\nimport Subnav from './Subnav';\n\nconst TransactionHeader = () => {\n  const {\n    loading,\n    data: customer\n  } = useFakeFetch(rawCustomer);\n  const {\n    name,\n    email,\n    createdAt\n  } = customer;\n  return /*#__PURE__*/React.createElement(Card, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ButtonIcon, {\n    color: \"falcon-default\",\n    size: \"sm\",\n    icon: \"arrow-left\",\n    iconClassName: \"fs--2\",\n    className: \"btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 19\n    }\n  }), \" \\xA0 Transaction Detail \\xA0\", /*#__PURE__*/React.createElement(Badge, {\n    color: 'soft-success',\n    className: \"mr-2\",\n    pill: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: \"check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 19\n    }\n  }), \"\\xA0 Repeat Payment\")), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"ml-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, \"Alerts: \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 45\n    }\n  }, \" none\")))))));\n};\n\nconst VendorSummary = () => {\n  const {\n    loading,\n    data: customer\n  } = useFakeFetch(rawCustomer);\n  const {\n    name,\n    email,\n    createdAt\n  } = customer;\n  return /*#__PURE__*/React.createElement(Card, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    noGutters: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    noGutters: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    src: logo,\n    width: 100,\n    size: \"4xl\",\n    rounded: \"square\",\n    className: \"mb-2\",\n    mediaClass: \"img-thumbnail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-2 ml-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 19\n    }\n  }, \"Stark Industries\"), \"(888) 456-9873\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 33\n    }\n  }), \"starkind.com\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-2 ml-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 25\n    }\n  }, \"123 Main St\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 39\n    }\n  }), \"New York, NY 05432-1906\"))), /*#__PURE__*/React.createElement(ButtonIcon, {\n    color: \"falcon-default\",\n    size: \"sm\",\n    icon: \"plus\",\n    iconClassName: \"fs--2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, \"Add note\"), /*#__PURE__*/React.createElement(UncontrolledDropdown, {\n    className: \"d-inline-block ml-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DropdownToggle, {\n    color: \"falcon-default\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: \"ellipsis-h\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(DropdownMenu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(DropdownItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(DropdownItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }, \"Report\"), /*#__PURE__*/React.createElement(DropdownItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  }, \"Archive\"), /*#__PURE__*/React.createElement(DropdownItem, {\n    divider: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(DropdownItem, {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }, \"Delete user\")))), /*#__PURE__*/React.createElement(Col, {\n    xs: \"auto\",\n    className: \"d-none d-sm-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"text-uppercase text-600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, \"Vendor\", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: \"briefcase\",\n    className: \"ml-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 19\n    }\n  }))))), /*#__PURE__*/React.createElement(CardBody, {\n    className: \"border-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: \"check-square\",\n    transform: \"down-5\",\n    className: \"text-success mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Media, {\n    body: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }, \"Merchant flagged for fraud\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"fs--1 mb-0 text-600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, createdAt))))));\n};\n\nconst CustomerDetailRow = ({\n  title,\n  isLastItem,\n  children\n}) => /*#__PURE__*/React.createElement(Row, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Col, {\n  xs: 5,\n  sm: 4,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"p\", {\n  className: classNames('font-weight-semi-bold', {\n    'mb-0': isLastItem,\n    'mb-1': !isLastItem\n  }),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 7\n  }\n}, title)), /*#__PURE__*/React.createElement(Col, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }\n}, children));\n\nCustomerDetailRow.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n  isLastItem: PropTypes.bool\n};\nCustomerDetailRow.defaultProps = {\n  last: false\n};\n\nconst CustomerDetail = () => {\n  const {\n    loading,\n    data: customer\n  } = useFakeFetch(rawCustomer);\n  const {\n    status,\n    id,\n    email,\n    createdAt,\n    description,\n    vat_no,\n    email_to,\n    address,\n    cell,\n    invoice_prefix\n  } = customer;\n  return /*#__PURE__*/React.createElement(Card, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FalconCardHeader, {\n    title: \"$82,239.23\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardBody, {\n    className: \"bg-light border-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: true,\n    className: \"col-xxl-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"font-weight-semi-bold ls mb-3 text-uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 15\n    }\n  }, \"Overview\"), /*#__PURE__*/React.createElement(CustomerDetailRow, {\n    title: \"Status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 15\n    }\n  }, status), /*#__PURE__*/React.createElement(CustomerDetailRow, {\n    title: \"ID\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 15\n    }\n  }, \"92348209384\"), /*#__PURE__*/React.createElement(CustomerDetailRow, {\n    title: \"Created\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 15\n    }\n  }, createdAt), /*#__PURE__*/React.createElement(CustomerDetailRow, {\n    title: \"Category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 15\n    }\n  }, description ? description : /*#__PURE__*/React.createElement(\"p\", {\n    className: \"font-italic text-400 mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 46\n    }\n  }, \"Merchandise\")), /*#__PURE__*/React.createElement(CustomerDetailRow, {\n    title: \"Description\",\n    isLastItem: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 15\n    }\n  }, vat_no ? vat_no : /*#__PURE__*/React.createElement(\"p\", {\n    className: \"font-italic text-400 mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 36\n    }\n  }, \"A super secret laboratory\"))), /*#__PURE__*/React.createElement(Col, {\n    lg: true,\n    className: \"col-xxl-5 mt-4 mt-lg-0 offset-xxl-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"font-weight-semi-bold ls mb-3 text-uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 15\n    }\n  }, \"Internal Details\"), /*#__PURE__*/React.createElement(CustomerDetailRow, {\n    title: \"Merchant Code\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `mailto:${email_to}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }\n  }, \"000008475136201\")), /*#__PURE__*/React.createElement(CustomerDetailRow, {\n    title: \"Transaction Code\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 15\n    }\n  }, \"0HE74CSR 000008475136201\"), /*#__PURE__*/React.createElement(CustomerDetailRow, {\n    title: \"Custome rTag\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 15\n    }\n  }, \"none\"), /*#__PURE__*/React.createElement(CustomerDetailRow, {\n    title: \"Customer Flag\",\n    isLastItem: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 15\n    }\n  }, \"none\")))), /*#__PURE__*/React.createElement(CardFooter, {\n    className: \"border-top text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ButtonIcon, {\n    tag: Link,\n    color: \"falcon-default\",\n    size: \"sm\",\n    icon: \"exclamation-circle\",\n    to: \"#!\",\n    iconClassName: \"fs--2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }\n  }, \"Dispute\")));\n};\n\nconst CustomerLog = ({\n  status,\n  link,\n  time\n}) => {\n  let badgeColor = 'soft-warning';\n  if (status === 404) badgeColor = 'soft-danger';else if (status === 200) badgeColor = 'soft-success';\n  return /*#__PURE__*/React.createElement(Row, {\n    noGutters: true,\n    className: \"align-items-center border-bottom py-2 px-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"auto\",\n    className: \"pr-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Badge, {\n    color: badgeColor,\n    pill: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }\n  }, status)), /*#__PURE__*/React.createElement(Col, {\n    md: true,\n    className: \"mt-1 mt-md-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }\n  }, \"POST \", link)), /*#__PURE__*/React.createElement(Col, {\n    md: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }\n  }, time)));\n};\n\nCustomerLog.propTypes = {\n  status: PropTypes.number.isRequired,\n  link: PropTypes.string.isRequired,\n  time: PropTypes.string.isRequired\n};\n\nconst CustomerLogs = () => {\n  const {\n    loading,\n    data: customerLogs\n  } = useFakeFetch(rawCustomerLogs);\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FalconCardHeader, {\n    title: \"Purchase History\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardBody, {\n    className: \"border-top p-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 11\n    }\n  }) : isIterableArray(customerLogs) && customerLogs.map((log, index) => /*#__PURE__*/React.createElement(CustomerLog, Object.assign({}, log, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 77\n    }\n  })))), /*#__PURE__*/React.createElement(FalconCardFooterLink, {\n    title: \"View more logs\",\n    to: \"#!\",\n    borderTop: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst TransactionDetail = () => /*#__PURE__*/React.createElement(Fragment, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 267,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(TransactionHeader, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 269,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(VendorSummary, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 270,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(CustomerDetail, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 271,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(CustomerLogs, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 272,\n    columnNumber: 5\n  }\n}));\n\nexport default TransactionDetail;","map":{"version":3,"sources":["/Users/greypro/Documents/Dev/letter/letter-support/src/components/agent/transaction-detail/TransactionDetail.js"],"names":["React","Fragment","PropTypes","classNames","Link","FontAwesomeIcon","Badge","Card","CardBody","CardFooter","CardHeader","Col","DropdownItem","DropdownMenu","DropdownToggle","Media","Row","UncontrolledDropdown","Loader","ButtonIcon","FalconCardHeader","FalconCardFooterLink","useFakeFetch","isIterableArray","createMarkup","rawCustomer","rawCustomerLogs","Avatar","logo","Subnav","TransactionHeader","loading","data","customer","name","email","createdAt","VendorSummary","CustomerDetailRow","title","isLastItem","children","propTypes","string","isRequired","node","bool","defaultProps","last","CustomerDetail","status","id","description","vat_no","email_to","address","cell","invoice_prefix","CustomerLog","link","time","badgeColor","number","CustomerLogs","customerLogs","map","log","index","TransactionDetail"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  Badge,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Col,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  Media,\n  Row,\n  UncontrolledDropdown\n} from 'reactstrap';\nimport Loader from '../../common/Loader';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport FalconCardHeader from '../../common/FalconCardHeader';\nimport FalconCardFooterLink from '../../common/FalconCardFooterLink';\nimport useFakeFetch from '../../../hooks/useFakeFetch';\nimport { isIterableArray } from '../../../helpers/utils';\nimport createMarkup from '../../../helpers/createMarkup';\nimport rawCustomer from './data/vendor';\nimport rawCustomerLogs from './data/purchaseHistory';\nimport Avatar from '../../common/Avatar';\nimport logo from '../../../assets/img/logos/apple.png';\n\n\n\nimport Subnav from './Subnav';\n\nconst TransactionHeader = () => {\n  const { loading, data: customer } = useFakeFetch(rawCustomer);\n  const { name, email, createdAt } = customer;\n\n  return (\n    <Card className=\"mb-3\">\n      {loading ? (\n        <Loader />\n      ) : (\n        <Fragment>\n          <CardHeader>\n            <Row>\n              <Col>\n                <h5 className=\"mb-2\">\n                  <ButtonIcon color=\"falcon-default\" size=\"sm\" icon=\"arrow-left\" iconClassName=\"fs--2\" className=\"btn-primary\" /> &nbsp; Transaction Detail &nbsp;\n                  <Badge color={'soft-success'} className=\"mr-2\" pill>\n\n                  <FontAwesomeIcon icon=\"check\" />&nbsp;\n                    Repeat Payment\n                  </Badge>\n                </h5>\n                <p className=\"ml-6\">Alerts: <code> none</code></p>\n              </Col>\n            </Row>\n          </CardHeader>\n        </Fragment>\n      )}\n    </Card>\n  );\n};\n\nconst VendorSummary = () => {\n  const { loading, data: customer } = useFakeFetch(rawCustomer);\n  const { name, email, createdAt } = customer;\n\n  return (\n    <Card className=\"mb-3\">\n      {loading ? (\n        <Loader />\n      ) : (\n        <Fragment>\n          <CardHeader>\n            <Row noGutters>\n              <Col>\n                <Row noGutters>\n                <Avatar\n                  src={logo}\n                  width={100}\n                  size=\"4xl\"\n                  rounded=\"square\"\n                  className=\"mb-2\"\n                  mediaClass=\"img-thumbnail\"\n                />\n                <div className=\"mt-2 ml-2\">\n                  <h5 className=\"mb-2\">\n                    Stark Industries\n                  </h5>\n                  (888) 456-9873<br />\n                  starkind.com\n                </div>\n                <div className=\"mt-2 ml-10\">\n                  <br /><p>123 Main St<br />\n                  New York, NY 05432-1906</p>\n                </div>\n\n                </Row>\n                <ButtonIcon color=\"falcon-default\" size=\"sm\" icon=\"plus\" iconClassName=\"fs--2\">\n                  Add note\n                </ButtonIcon>\n\n                <UncontrolledDropdown className=\"d-inline-block ml-2\">\n                  <DropdownToggle color=\"falcon-default\" size=\"sm\">\n                    <FontAwesomeIcon icon=\"ellipsis-h\" />\n                  </DropdownToggle>\n                  <DropdownMenu>\n                    <DropdownItem>Edit</DropdownItem>\n                    <DropdownItem>Report</DropdownItem>\n                    <DropdownItem>Archive</DropdownItem>\n                    <DropdownItem divider />\n                    <DropdownItem className=\"text-danger\">Delete user</DropdownItem>\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n              </Col>\n              <Col xs=\"auto\" className=\"d-none d-sm-block\">\n                <h6 className=\"text-uppercase text-600\">\n                  Vendor\n                  <FontAwesomeIcon icon=\"briefcase\" className=\"ml-2\" />\n                </h6>\n              </Col>\n            </Row>\n          </CardHeader>\n          <CardBody className=\"border-top\">\n            <Media>\n              <FontAwesomeIcon icon=\"check-square\" transform=\"down-5\" className=\"text-success mr-2\" />\n              <Media body>\n                <p className=\"mb-0\">Merchant flagged for fraud</p>\n                <p className=\"fs--1 mb-0 text-600\">{createdAt}</p>\n              </Media>\n            </Media>\n          </CardBody>\n        </Fragment>\n      )}\n    </Card>\n  );\n};\n\nconst CustomerDetailRow = ({ title, isLastItem, children }) => (\n  <Row>\n    <Col xs={5} sm={4}>\n      <p\n        className={classNames('font-weight-semi-bold', {\n          'mb-0': isLastItem,\n          'mb-1': !isLastItem\n        })}\n      >\n        {title}\n      </p>\n    </Col>\n    <Col>{children}</Col>\n  </Row>\n);\n\nCustomerDetailRow.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n  isLastItem: PropTypes.bool\n};\n\nCustomerDetailRow.defaultProps = { last: false };\n\nconst CustomerDetail = () => {\n  const { loading, data: customer } = useFakeFetch(rawCustomer);\n  const { status, id, email, createdAt, description, vat_no, email_to, address, cell, invoice_prefix } = customer;\n\n  return (\n    <Card className=\"mb-3\">\n      <FalconCardHeader title=\"$82,239.23\">\n      </FalconCardHeader>\n      <CardBody className=\"bg-light border-top\">\n        {loading ? (\n          <Loader />\n        ) : (\n          <Row>\n            <Col lg className=\"col-xxl-5\">\n              <h6 className=\"font-weight-semi-bold ls mb-3 text-uppercase\">Overview</h6>\n              <CustomerDetailRow title=\"Status\">{status}</CustomerDetailRow>\n              <CustomerDetailRow title=\"ID\">92348209384</CustomerDetailRow>\n              <CustomerDetailRow title=\"Created\">\n                {createdAt}\n              </CustomerDetailRow>\n              <CustomerDetailRow title=\"Category\">\n                {description ? description : <p className=\"font-italic text-400 mb-1\">Merchandise</p>}\n              </CustomerDetailRow>\n              <CustomerDetailRow title=\"Description\" isLastItem>\n                {vat_no ? vat_no : <p className=\"font-italic text-400 mb-0\">A super secret laboratory</p>}\n              </CustomerDetailRow>\n            </Col>\n            <Col lg className=\"col-xxl-5 mt-4 mt-lg-0 offset-xxl-1\">\n              <h6 className=\"font-weight-semi-bold ls mb-3 text-uppercase\">Internal Details</h6>\n              <CustomerDetailRow title=\"Merchant Code\">\n                <a href={`mailto:${email_to}`}>000008475136201</a>\n              </CustomerDetailRow>\n              <CustomerDetailRow title=\"Transaction Code\">\n                0HE74CSR 000008475136201\n              </CustomerDetailRow>\n              <CustomerDetailRow title=\"Custome rTag\">\n                none\n              </CustomerDetailRow>\n              <CustomerDetailRow title=\"Customer Flag\" isLastItem>\n                none\n              </CustomerDetailRow>\n            </Col>\n          </Row>\n        )}\n      </CardBody>\n      <CardFooter className=\"border-top text-right\">\n        <ButtonIcon tag={Link} color=\"falcon-default\" size=\"sm\" icon=\"exclamation-circle\" to=\"#!\" iconClassName=\"fs--2\">\n          Dispute\n        </ButtonIcon>\n      </CardFooter>\n    </Card>\n  );\n};\n\nconst CustomerLog = ({ status, link, time }) => {\n  let badgeColor = 'soft-warning';\n  if (status === 404) badgeColor = 'soft-danger';\n  else if (status === 200) badgeColor = 'soft-success';\n\n  return (\n    <Row noGutters className=\"align-items-center border-bottom py-2 px-3\">\n      <Col md=\"auto\" className=\"pr-3\">\n        <Badge color={badgeColor} pill>\n          {status}\n        </Badge>\n      </Col>\n      <Col md className=\"mt-1 mt-md-0\">\n        <code>POST {link}</code>\n      </Col>\n      <Col md=\"auto\">\n        <p className=\"mb-0\">{time}</p>\n      </Col>\n    </Row>\n  );\n};\n\nCustomerLog.propTypes = {\n  status: PropTypes.number.isRequired,\n  link: PropTypes.string.isRequired,\n  time: PropTypes.string.isRequired\n};\n\nconst CustomerLogs = () => {\n  const { loading, data: customerLogs } = useFakeFetch(rawCustomerLogs);\n\n  return (\n    <Card>\n      <FalconCardHeader title=\"Purchase History\" />\n      <CardBody className=\"border-top p-0\">\n        {loading ? (\n          <Loader />\n        ) : (\n          isIterableArray(customerLogs) && customerLogs.map((log, index) => <CustomerLog {...log} key={index} />)\n        )}\n      </CardBody>\n      <FalconCardFooterLink title=\"View more logs\" to=\"#!\" borderTop={false} />\n    </Card>\n  );\n};\n\nconst TransactionDetail = () => (\n  <Fragment>\n\n    <TransactionHeader />\n    <VendorSummary />\n    <CustomerDetail />\n    <CustomerLogs />\n  </Fragment>\n);\n\nexport default TransactionDetail;\n"]},"metadata":{},"sourceType":"module"}