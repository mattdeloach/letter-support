{"ast":null,"code":"/**\r\n * Prism: Lightweight, robust, elegant syntax highlighting\r\n * MIT license http://www.opensource.org/licenses/mit-license.php/\r\n * @author Lea Verou http://lea.verou.me\r\n */\n\n/**\r\n * prism-react-renderer:\r\n * This file has been modified to remove:\r\n * - globals and window dependency\r\n * - worker support\r\n * - highlightAll and other element dependent methods\r\n * - _.hooks helpers\r\n * - UMD/node-specific hacks\r\n * It has also been run through prettier\r\n */\nvar Prism = function () {\n  // Private helper vars\n  var lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\n  var uniqueId = 0;\n  var _ = {\n    util: {\n      encode: function encode(tokens) {\n        if (tokens instanceof Token) {\n          return new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);\n        } else if (_.util.type(tokens) === \"Array\") {\n          return tokens.map(_.util.encode);\n        } else {\n          return tokens.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/\\u00a0/g, \" \");\n        }\n      },\n      type: function type(o) {\n        return Object.prototype.toString.call(o).match(/\\[object (\\w+)\\]/)[1];\n      },\n      objId: function objId(obj) {\n        if (!obj[\"__id\"]) {\n          Object.defineProperty(obj, \"__id\", {\n            value: ++uniqueId\n          });\n        }\n\n        return obj[\"__id\"];\n      },\n      // Deep clone a language definition (e.g. to extend it)\n      clone: function clone(o, visited) {\n        var type = _.util.type(o);\n\n        visited = visited || {};\n\n        switch (type) {\n          case \"Object\":\n            if (visited[_.util.objId(o)]) {\n              return visited[_.util.objId(o)];\n            }\n\n            var clone = {};\n            visited[_.util.objId(o)] = clone;\n\n            for (var key in o) {\n              if (o.hasOwnProperty(key)) {\n                clone[key] = _.util.clone(o[key], visited);\n              }\n            }\n\n            return clone;\n\n          case \"Array\":\n            if (visited[_.util.objId(o)]) {\n              return visited[_.util.objId(o)];\n            }\n\n            var clone = [];\n            visited[_.util.objId(o)] = clone;\n            o.forEach(function (v, i) {\n              clone[i] = _.util.clone(v, visited);\n            });\n            return clone;\n        }\n\n        return o;\n      }\n    },\n    languages: {\n      extend: function extend(id, redef) {\n        var lang = _.util.clone(_.languages[id]);\n\n        for (var key in redef) {\n          lang[key] = redef[key];\n        }\n\n        return lang;\n      },\n\n      /**\r\n       * Insert a token before another token in a language literal\r\n       * As this needs to recreate the object (we cannot actually insert before keys in object literals),\r\n       * we cannot just provide an object, we need anobject and a key.\r\n       * @param inside The key (or language id) of the parent\r\n       * @param before The key to insert before. If not provided, the function appends instead.\r\n       * @param insert Object with the key/value pairs to insert\r\n       * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\r\n       */\n      insertBefore: function insertBefore(inside, before, insert, root) {\n        root = root || _.languages;\n        var grammar = root[inside];\n\n        if (arguments.length == 2) {\n          insert = arguments[1];\n\n          for (var newToken in insert) {\n            if (insert.hasOwnProperty(newToken)) {\n              grammar[newToken] = insert[newToken];\n            }\n          }\n\n          return grammar;\n        }\n\n        var ret = {};\n\n        for (var token in grammar) {\n          if (grammar.hasOwnProperty(token)) {\n            if (token == before) {\n              for (var newToken in insert) {\n                if (insert.hasOwnProperty(newToken)) {\n                  ret[newToken] = insert[newToken];\n                }\n              }\n            }\n\n            ret[token] = grammar[token];\n          }\n        } // Update references in other language definitions\n\n\n        _.languages.DFS(_.languages, function (key, value) {\n          if (value === root[inside] && key != inside) {\n            this[key] = ret;\n          }\n        });\n\n        return root[inside] = ret;\n      },\n      // Traverse a language definition with Depth First Search\n      DFS: function DFS(o, callback, type, visited) {\n        visited = visited || {};\n\n        for (var i in o) {\n          if (o.hasOwnProperty(i)) {\n            callback.call(o, i, o[i], type || i);\n\n            if (_.util.type(o[i]) === \"Object\" && !visited[_.util.objId(o[i])]) {\n              visited[_.util.objId(o[i])] = true;\n\n              _.languages.DFS(o[i], callback, null, visited);\n            } else if (_.util.type(o[i]) === \"Array\" && !visited[_.util.objId(o[i])]) {\n              visited[_.util.objId(o[i])] = true;\n\n              _.languages.DFS(o[i], callback, i, visited);\n            }\n          }\n        }\n      }\n    },\n    plugins: {},\n    highlight: function highlight(text, grammar, language) {\n      var env = {\n        code: text,\n        grammar: grammar,\n        language: language\n      };\n      env.tokens = _.tokenize(env.code, env.grammar);\n      return Token.stringify(_.util.encode(env.tokens), env.language);\n    },\n    matchGrammar: function matchGrammar(text, strarr, grammar, index, startPos, oneshot, target) {\n      var Token = _.Token;\n\n      for (var token in grammar) {\n        if (!grammar.hasOwnProperty(token) || !grammar[token]) {\n          continue;\n        }\n\n        if (token == target) {\n          return;\n        }\n\n        var patterns = grammar[token];\n        patterns = _.util.type(patterns) === \"Array\" ? patterns : [patterns];\n\n        for (var j = 0; j < patterns.length; ++j) {\n          var pattern = patterns[j],\n              inside = pattern.inside,\n              lookbehind = !!pattern.lookbehind,\n              greedy = !!pattern.greedy,\n              lookbehindLength = 0,\n              alias = pattern.alias;\n\n          if (greedy && !pattern.pattern.global) {\n            // Without the global flag, lastIndex won't work\n            var flags = pattern.pattern.toString().match(/[imuy]*$/)[0];\n            pattern.pattern = RegExp(pattern.pattern.source, flags + \"g\");\n          }\n\n          pattern = pattern.pattern || pattern; // Donâ€™t cache length as it changes during the loop\n\n          for (var i = index, pos = startPos; i < strarr.length; pos += strarr[i].length, ++i) {\n            var str = strarr[i];\n\n            if (strarr.length > text.length) {\n              // Something went terribly wrong, ABORT, ABORT!\n              return;\n            }\n\n            if (str instanceof Token) {\n              continue;\n            }\n\n            if (greedy && i != strarr.length - 1) {\n              pattern.lastIndex = pos;\n              var match = pattern.exec(text);\n\n              if (!match) {\n                break;\n              }\n\n              var from = match.index + (lookbehind ? match[1].length : 0),\n                  to = match.index + match[0].length,\n                  k = i,\n                  p = pos;\n\n              for (var len = strarr.length; k < len && (p < to || !strarr[k].type && !strarr[k - 1].greedy); ++k) {\n                p += strarr[k].length; // Move the index i to the element in strarr that is closest to from\n\n                if (from >= p) {\n                  ++i;\n                  pos = p;\n                }\n              } // If strarr[i] is a Token, then the match starts inside another Token, which is invalid\n\n\n              if (strarr[i] instanceof Token) {\n                continue;\n              } // Number of tokens to delete and replace with the new match\n\n\n              delNum = k - i;\n              str = text.slice(pos, p);\n              match.index -= pos;\n            } else {\n              pattern.lastIndex = 0;\n              var match = pattern.exec(str),\n                  delNum = 1;\n            }\n\n            if (!match) {\n              if (oneshot) {\n                break;\n              }\n\n              continue;\n            }\n\n            if (lookbehind) {\n              lookbehindLength = match[1] ? match[1].length : 0;\n            }\n\n            var from = match.index + lookbehindLength,\n                match = match[0].slice(lookbehindLength),\n                to = from + match.length,\n                before = str.slice(0, from),\n                after = str.slice(to);\n            var args = [i, delNum];\n\n            if (before) {\n              ++i;\n              pos += before.length;\n              args.push(before);\n            }\n\n            var wrapped = new Token(token, inside ? _.tokenize(match, inside) : match, alias, match, greedy);\n            args.push(wrapped);\n\n            if (after) {\n              args.push(after);\n            }\n\n            Array.prototype.splice.apply(strarr, args);\n            if (delNum != 1) _.matchGrammar(text, strarr, grammar, i, pos, true, token);\n            if (oneshot) break;\n          }\n        }\n      }\n    },\n    hooks: {\n      add: function add() {}\n    },\n    tokenize: function tokenize(text, grammar, language) {\n      var strarr = [text];\n      var rest = grammar.rest;\n\n      if (rest) {\n        for (var token in rest) {\n          grammar[token] = rest[token];\n        }\n\n        delete grammar.rest;\n      }\n\n      _.matchGrammar(text, strarr, grammar, 0, 0, false);\n\n      return strarr;\n    }\n  };\n\n  var Token = _.Token = function (type, content, alias, matchedStr, greedy) {\n    this.type = type;\n    this.content = content;\n    this.alias = alias; // Copy of the full string this token was created from\n\n    this.length = (matchedStr || \"\").length | 0;\n    this.greedy = !!greedy;\n  };\n\n  Token.stringify = function (o, language, parent) {\n    if (typeof o == \"string\") {\n      return o;\n    }\n\n    if (_.util.type(o) === \"Array\") {\n      return o.map(function (element) {\n        return Token.stringify(element, language, o);\n      }).join(\"\");\n    }\n\n    var env = {\n      type: o.type,\n      content: Token.stringify(o.content, language, parent),\n      tag: \"span\",\n      classes: [\"token\", o.type],\n      attributes: {},\n      language: language,\n      parent: parent\n    };\n\n    if (o.alias) {\n      var aliases = _.util.type(o.alias) === \"Array\" ? o.alias : [o.alias];\n      Array.prototype.push.apply(env.classes, aliases);\n    }\n\n    var attributes = Object.keys(env.attributes).map(function (name) {\n      return name + '=\"' + (env.attributes[name] || \"\").replace(/\"/g, \"&quot;\") + '\"';\n    }).join(\" \");\n    return \"<\" + env.tag + ' class=\"' + env.classes.join(\" \") + '\"' + (attributes ? \" \" + attributes : \"\") + \">\" + env.content + \"</\" + env.tag + \">\";\n  };\n\n  return _;\n}();\n\nmodule.exports = Prism;\nPrism.default = Prism;","map":{"version":3,"sources":["/Users/matt/Documents/Dev/letter/letter-support/node_modules/prism-react-renderer/es/vendor/prism/prism-core.js"],"names":["Prism","lang","uniqueId","_","util","encode","tokens","Token","type","content","alias","map","replace","o","Object","prototype","toString","call","match","objId","obj","defineProperty","value","clone","visited","key","hasOwnProperty","forEach","v","i","languages","extend","id","redef","insertBefore","inside","before","insert","root","grammar","arguments","length","newToken","ret","token","DFS","callback","plugins","highlight","text","language","env","code","tokenize","stringify","matchGrammar","strarr","index","startPos","oneshot","target","patterns","j","pattern","lookbehind","greedy","lookbehindLength","global","flags","RegExp","source","pos","str","lastIndex","exec","from","to","k","p","len","delNum","slice","after","args","push","wrapped","Array","splice","apply","hooks","add","rest","matchedStr","parent","element","join","tag","classes","attributes","aliases","keys","name","module","exports","default"],"mappings":"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","sourcesContent":["/**\r\n * Prism: Lightweight, robust, elegant syntax highlighting\r\n * MIT license http://www.opensource.org/licenses/mit-license.php/\r\n * @author Lea Verou http://lea.verou.me\r\n */\n\n/**\r\n * prism-react-renderer:\r\n * This file has been modified to remove:\r\n * - globals and window dependency\r\n * - worker support\r\n * - highlightAll and other element dependent methods\r\n * - _.hooks helpers\r\n * - UMD/node-specific hacks\r\n * It has also been run through prettier\r\n */\nvar Prism = function () {\n  // Private helper vars\n  var lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\n  var uniqueId = 0;\n  var _ = {\n    util: {\n      encode: function encode(tokens) {\n        if (tokens instanceof Token) {\n          return new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);\n        } else if (_.util.type(tokens) === \"Array\") {\n          return tokens.map(_.util.encode);\n        } else {\n          return tokens.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/\\u00a0/g, \" \");\n        }\n      },\n      type: function type(o) {\n        return Object.prototype.toString.call(o).match(/\\[object (\\w+)\\]/)[1];\n      },\n      objId: function objId(obj) {\n        if (!obj[\"__id\"]) {\n          Object.defineProperty(obj, \"__id\", {\n            value: ++uniqueId\n          });\n        }\n\n        return obj[\"__id\"];\n      },\n      // Deep clone a language definition (e.g. to extend it)\n      clone: function clone(o, visited) {\n        var type = _.util.type(o);\n\n        visited = visited || {};\n\n        switch (type) {\n          case \"Object\":\n            if (visited[_.util.objId(o)]) {\n              return visited[_.util.objId(o)];\n            }\n\n            var clone = {};\n            visited[_.util.objId(o)] = clone;\n\n            for (var key in o) {\n              if (o.hasOwnProperty(key)) {\n                clone[key] = _.util.clone(o[key], visited);\n              }\n            }\n\n            return clone;\n\n          case \"Array\":\n            if (visited[_.util.objId(o)]) {\n              return visited[_.util.objId(o)];\n            }\n\n            var clone = [];\n            visited[_.util.objId(o)] = clone;\n            o.forEach(function (v, i) {\n              clone[i] = _.util.clone(v, visited);\n            });\n            return clone;\n        }\n\n        return o;\n      }\n    },\n    languages: {\n      extend: function extend(id, redef) {\n        var lang = _.util.clone(_.languages[id]);\n\n        for (var key in redef) {\n          lang[key] = redef[key];\n        }\n\n        return lang;\n      },\n\n      /**\r\n       * Insert a token before another token in a language literal\r\n       * As this needs to recreate the object (we cannot actually insert before keys in object literals),\r\n       * we cannot just provide an object, we need anobject and a key.\r\n       * @param inside The key (or language id) of the parent\r\n       * @param before The key to insert before. If not provided, the function appends instead.\r\n       * @param insert Object with the key/value pairs to insert\r\n       * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\r\n       */\n      insertBefore: function insertBefore(inside, before, insert, root) {\n        root = root || _.languages;\n        var grammar = root[inside];\n\n        if (arguments.length == 2) {\n          insert = arguments[1];\n\n          for (var newToken in insert) {\n            if (insert.hasOwnProperty(newToken)) {\n              grammar[newToken] = insert[newToken];\n            }\n          }\n\n          return grammar;\n        }\n\n        var ret = {};\n\n        for (var token in grammar) {\n          if (grammar.hasOwnProperty(token)) {\n            if (token == before) {\n              for (var newToken in insert) {\n                if (insert.hasOwnProperty(newToken)) {\n                  ret[newToken] = insert[newToken];\n                }\n              }\n            }\n\n            ret[token] = grammar[token];\n          }\n        } // Update references in other language definitions\n\n\n        _.languages.DFS(_.languages, function (key, value) {\n          if (value === root[inside] && key != inside) {\n            this[key] = ret;\n          }\n        });\n\n        return root[inside] = ret;\n      },\n      // Traverse a language definition with Depth First Search\n      DFS: function DFS(o, callback, type, visited) {\n        visited = visited || {};\n\n        for (var i in o) {\n          if (o.hasOwnProperty(i)) {\n            callback.call(o, i, o[i], type || i);\n\n            if (_.util.type(o[i]) === \"Object\" && !visited[_.util.objId(o[i])]) {\n              visited[_.util.objId(o[i])] = true;\n\n              _.languages.DFS(o[i], callback, null, visited);\n            } else if (_.util.type(o[i]) === \"Array\" && !visited[_.util.objId(o[i])]) {\n              visited[_.util.objId(o[i])] = true;\n\n              _.languages.DFS(o[i], callback, i, visited);\n            }\n          }\n        }\n      }\n    },\n    plugins: {},\n    highlight: function highlight(text, grammar, language) {\n      var env = {\n        code: text,\n        grammar: grammar,\n        language: language\n      };\n      env.tokens = _.tokenize(env.code, env.grammar);\n      return Token.stringify(_.util.encode(env.tokens), env.language);\n    },\n    matchGrammar: function matchGrammar(text, strarr, grammar, index, startPos, oneshot, target) {\n      var Token = _.Token;\n\n      for (var token in grammar) {\n        if (!grammar.hasOwnProperty(token) || !grammar[token]) {\n          continue;\n        }\n\n        if (token == target) {\n          return;\n        }\n\n        var patterns = grammar[token];\n        patterns = _.util.type(patterns) === \"Array\" ? patterns : [patterns];\n\n        for (var j = 0; j < patterns.length; ++j) {\n          var pattern = patterns[j],\n              inside = pattern.inside,\n              lookbehind = !!pattern.lookbehind,\n              greedy = !!pattern.greedy,\n              lookbehindLength = 0,\n              alias = pattern.alias;\n\n          if (greedy && !pattern.pattern.global) {\n            // Without the global flag, lastIndex won't work\n            var flags = pattern.pattern.toString().match(/[imuy]*$/)[0];\n            pattern.pattern = RegExp(pattern.pattern.source, flags + \"g\");\n          }\n\n          pattern = pattern.pattern || pattern; // Donâ€™t cache length as it changes during the loop\n\n          for (var i = index, pos = startPos; i < strarr.length; pos += strarr[i].length, ++i) {\n            var str = strarr[i];\n\n            if (strarr.length > text.length) {\n              // Something went terribly wrong, ABORT, ABORT!\n              return;\n            }\n\n            if (str instanceof Token) {\n              continue;\n            }\n\n            if (greedy && i != strarr.length - 1) {\n              pattern.lastIndex = pos;\n              var match = pattern.exec(text);\n\n              if (!match) {\n                break;\n              }\n\n              var from = match.index + (lookbehind ? match[1].length : 0),\n                  to = match.index + match[0].length,\n                  k = i,\n                  p = pos;\n\n              for (var len = strarr.length; k < len && (p < to || !strarr[k].type && !strarr[k - 1].greedy); ++k) {\n                p += strarr[k].length; // Move the index i to the element in strarr that is closest to from\n\n                if (from >= p) {\n                  ++i;\n                  pos = p;\n                }\n              } // If strarr[i] is a Token, then the match starts inside another Token, which is invalid\n\n\n              if (strarr[i] instanceof Token) {\n                continue;\n              } // Number of tokens to delete and replace with the new match\n\n\n              delNum = k - i;\n              str = text.slice(pos, p);\n              match.index -= pos;\n            } else {\n              pattern.lastIndex = 0;\n              var match = pattern.exec(str),\n                  delNum = 1;\n            }\n\n            if (!match) {\n              if (oneshot) {\n                break;\n              }\n\n              continue;\n            }\n\n            if (lookbehind) {\n              lookbehindLength = match[1] ? match[1].length : 0;\n            }\n\n            var from = match.index + lookbehindLength,\n                match = match[0].slice(lookbehindLength),\n                to = from + match.length,\n                before = str.slice(0, from),\n                after = str.slice(to);\n            var args = [i, delNum];\n\n            if (before) {\n              ++i;\n              pos += before.length;\n              args.push(before);\n            }\n\n            var wrapped = new Token(token, inside ? _.tokenize(match, inside) : match, alias, match, greedy);\n            args.push(wrapped);\n\n            if (after) {\n              args.push(after);\n            }\n\n            Array.prototype.splice.apply(strarr, args);\n            if (delNum != 1) _.matchGrammar(text, strarr, grammar, i, pos, true, token);\n            if (oneshot) break;\n          }\n        }\n      }\n    },\n    hooks: {\n      add: function add() {}\n    },\n    tokenize: function tokenize(text, grammar, language) {\n      var strarr = [text];\n      var rest = grammar.rest;\n\n      if (rest) {\n        for (var token in rest) {\n          grammar[token] = rest[token];\n        }\n\n        delete grammar.rest;\n      }\n\n      _.matchGrammar(text, strarr, grammar, 0, 0, false);\n\n      return strarr;\n    }\n  };\n\n  var Token = _.Token = function (type, content, alias, matchedStr, greedy) {\n    this.type = type;\n    this.content = content;\n    this.alias = alias; // Copy of the full string this token was created from\n\n    this.length = (matchedStr || \"\").length | 0;\n    this.greedy = !!greedy;\n  };\n\n  Token.stringify = function (o, language, parent) {\n    if (typeof o == \"string\") {\n      return o;\n    }\n\n    if (_.util.type(o) === \"Array\") {\n      return o.map(function (element) {\n        return Token.stringify(element, language, o);\n      }).join(\"\");\n    }\n\n    var env = {\n      type: o.type,\n      content: Token.stringify(o.content, language, parent),\n      tag: \"span\",\n      classes: [\"token\", o.type],\n      attributes: {},\n      language: language,\n      parent: parent\n    };\n\n    if (o.alias) {\n      var aliases = _.util.type(o.alias) === \"Array\" ? o.alias : [o.alias];\n      Array.prototype.push.apply(env.classes, aliases);\n    }\n\n    var attributes = Object.keys(env.attributes).map(function (name) {\n      return name + '=\"' + (env.attributes[name] || \"\").replace(/\"/g, \"&quot;\") + '\"';\n    }).join(\" \");\n    return \"<\" + env.tag + ' class=\"' + env.classes.join(\" \") + '\"' + (attributes ? \" \" + attributes : \"\") + \">\" + env.content + \"</\" + env.tag + \">\";\n  };\n\n  return _;\n}();\n\nmodule.exports = Prism;\nPrism.default = Prism;"]},"metadata":{},"sourceType":"script"}