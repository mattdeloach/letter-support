{"ast":null,"code":"var _jsxFileName = \"/Users/greypro/Documents/Dev/letter/letter-support/src/components/notification/Notification.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport Avatar from '../common/Avatar';\nimport createMarkup from '../../helpers/createMarkup';\n\nconst Notification = ({\n  to,\n  avatar,\n  time,\n  className,\n  unread,\n  flush,\n  emoji,\n  children\n}) => /*#__PURE__*/React.createElement(Link, {\n  className: classNames('notification', {\n    'bg-200': unread,\n    'notification-flush': flush\n  }, className),\n  to: to,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 3\n  }\n}, avatar && /*#__PURE__*/React.createElement(\"div\", {\n  className: \"notification-avatar\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(Avatar, Object.assign({}, avatar, {\n  className: \"mr-3\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }\n}))), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"notification-body\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"p\", {\n  className: emoji ? 'mb-1' : 'mb-0',\n  dangerouslySetInnerHTML: createMarkup(children),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(\"span\", {\n  className: \"notification-time\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 7\n  }\n}, emoji && /*#__PURE__*/React.createElement(\"span\", {\n  className: \"mr-1\",\n  role: \"img\",\n  \"aria-label\": \"Emoji\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 11\n  }\n}, emoji), time)));\n\nNotification.propTypes = {\n  to: PropTypes.string.isRequired,\n  avatar: PropTypes.shape(Avatar.propTypes),\n  time: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  unread: PropTypes.bool,\n  flush: PropTypes.bool,\n  emoji: PropTypes.string,\n  children: PropTypes.node\n};\nNotification.defaultProps = {\n  unread: false,\n  flush: false\n};\nexport default Notification;","map":{"version":3,"sources":["/Users/greypro/Documents/Dev/letter/letter-support/src/components/notification/Notification.js"],"names":["React","PropTypes","classNames","Link","Avatar","createMarkup","Notification","to","avatar","time","className","unread","flush","emoji","children","propTypes","string","isRequired","shape","bool","node","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,MAAN;AAAcC,EAAAA,IAAd;AAAoBC,EAAAA,SAApB;AAA+BC,EAAAA,MAA/B;AAAuCC,EAAAA,KAAvC;AAA8CC,EAAAA,KAA9C;AAAqDC,EAAAA;AAArD,CAAD,kBACnB,oBAAC,IAAD;AAAM,EAAA,SAAS,EAAEZ,UAAU,CAAC,cAAD,EAAiB;AAAE,cAAUS,MAAZ;AAAoB,0BAAsBC;AAA1C,GAAjB,EAAoEF,SAApE,CAA3B;AAA2G,EAAA,EAAE,EAAEH,EAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGC,MAAM,iBACL;AAAK,EAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,MAAD,oBAAYA,MAAZ;AAAoB,EAAA,SAAS,EAAC,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADF,CAFJ,eAME;AAAK,EAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAG,EAAA,SAAS,EAAEK,KAAK,GAAG,MAAH,GAAY,MAA/B;AAAuC,EAAA,uBAAuB,EAAER,YAAY,CAACS,QAAD,CAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,eAEE;AAAM,EAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGD,KAAK,iBACJ;AAAM,EAAA,SAAS,EAAC,MAAhB;AAAuB,EAAA,IAAI,EAAC,KAA5B;AAAkC,gBAAW,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGA,KADH,CAFJ,EAMGJ,IANH,CAFF,CANF,CADF;;AAqBAH,YAAY,CAACS,SAAb,GAAyB;AACvBR,EAAAA,EAAE,EAAEN,SAAS,CAACe,MAAV,CAAiBC,UADE;AAEvBT,EAAAA,MAAM,EAAEP,SAAS,CAACiB,KAAV,CAAgBd,MAAM,CAACW,SAAvB,CAFe;AAGvBN,EAAAA,IAAI,EAAER,SAAS,CAACe,MAAV,CAAiBC,UAHA;AAIvBP,EAAAA,SAAS,EAAET,SAAS,CAACe,MAJE;AAKvBL,EAAAA,MAAM,EAAEV,SAAS,CAACkB,IALK;AAMvBP,EAAAA,KAAK,EAAEX,SAAS,CAACkB,IANM;AAOvBN,EAAAA,KAAK,EAAEZ,SAAS,CAACe,MAPM;AAQvBF,EAAAA,QAAQ,EAAEb,SAAS,CAACmB;AARG,CAAzB;AAWAd,YAAY,CAACe,YAAb,GAA4B;AAAEV,EAAAA,MAAM,EAAE,KAAV;AAAiBC,EAAAA,KAAK,EAAE;AAAxB,CAA5B;AAEA,eAAeN,YAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport Avatar from '../common/Avatar';\nimport createMarkup from '../../helpers/createMarkup';\n\nconst Notification = ({ to, avatar, time, className, unread, flush, emoji, children }) => (\n  <Link className={classNames('notification', { 'bg-200': unread, 'notification-flush': flush }, className)} to={to}>\n    {avatar && (\n      <div className=\"notification-avatar\">\n        <Avatar {...avatar} className=\"mr-3\" />\n      </div>\n    )}\n    <div className=\"notification-body\">\n      <p className={emoji ? 'mb-1' : 'mb-0'} dangerouslySetInnerHTML={createMarkup(children)} />\n      <span className=\"notification-time\">\n        {emoji && (\n          <span className=\"mr-1\" role=\"img\" aria-label=\"Emoji\">\n            {emoji}\n          </span>\n        )}\n        {time}\n      </span>\n    </div>\n  </Link>\n);\n\nNotification.propTypes = {\n  to: PropTypes.string.isRequired,\n  avatar: PropTypes.shape(Avatar.propTypes),\n  time: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  unread: PropTypes.bool,\n  flush: PropTypes.bool,\n  emoji: PropTypes.string,\n  children: PropTypes.node\n};\n\nNotification.defaultProps = { unread: false, flush: false };\n\nexport default Notification;\n"]},"metadata":{},"sourceType":"module"}