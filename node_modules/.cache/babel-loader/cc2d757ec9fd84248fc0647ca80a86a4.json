{"ast":null,"code":"var _jsxFileName = \"/Users/greypro/Documents/Dev/letter/letter-support/src/components/auth/ForgetPasswordForm.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Button, Form, FormGroup, Input } from 'reactstrap';\nimport withRedirect from '../../hoc/withRedirect';\n\nconst ForgetPasswordForm = ({\n  setRedirect,\n  setRedirectUrl,\n  layout\n}) => {\n  // State\n  const [email, setEmail] = useState(''); // Handler\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (email) {\n      toast.success(`An email is sent to ${email} with password reset link`);\n      setRedirect(true);\n    }\n  };\n\n  useEffect(() => {\n    setRedirectUrl(`/authentication/${layout}/confirm-mail`);\n  }, [setRedirectUrl, layout]);\n  return /*#__PURE__*/React.createElement(Form, {\n    className: \"mt-4\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control\",\n    placeholder: \"Email address\",\n    value: email,\n    onChange: ({\n      target\n    }) => setEmail(target.value),\n    type: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    block: true,\n    disabled: !email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"Send reset link\")), /*#__PURE__*/React.createElement(Link, {\n    className: \"fs--1 text-600\",\n    to: \"#!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \"I can't recover my account using this page\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"d-inline-block ml-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"\\u2192\")));\n};\n\nForgetPasswordForm.propTypes = {\n  setRedirect: PropTypes.func.isRequired,\n  setRedirectUrl: PropTypes.func.isRequired,\n  layout: PropTypes.string\n};\nForgetPasswordForm.defaultProps = {\n  layout: 'basic'\n};\nexport default withRedirect(ForgetPasswordForm);","map":{"version":3,"sources":["/Users/greypro/Documents/Dev/letter/letter-support/src/components/auth/ForgetPasswordForm.js"],"names":["React","useState","useEffect","PropTypes","Link","toast","Button","Form","FormGroup","Input","withRedirect","ForgetPasswordForm","setRedirect","setRedirectUrl","layout","email","setEmail","handleSubmit","e","preventDefault","success","target","value","propTypes","func","isRequired","string","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,SAAvB,EAAkCC,KAAlC,QAA+C,YAA/C;AACA,OAAOC,YAAP,MAAyB,wBAAzB;;AAEA,MAAMC,kBAAkB,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,cAAf;AAA+BC,EAAAA;AAA/B,CAAD,KAA6C;AACtE;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC,CAFsE,CAItE;;AACA,QAAMgB,YAAY,GAAGC,CAAC,IAAI;AACxBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIJ,KAAJ,EAAW;AACTV,MAAAA,KAAK,CAACe,OAAN,CAAe,uBAAsBL,KAAM,2BAA3C;AACAH,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD;AACF,GAND;;AAQAV,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,cAAc,CAAE,mBAAkBC,MAAO,eAA3B,CAAd;AACD,GAFQ,EAEN,CAACD,cAAD,EAAiBC,MAAjB,CAFM,CAAT;AAIA,sBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,QAAQ,EAAEG,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,WAAW,EAAC,eAFd;AAGE,IAAA,KAAK,EAAEF,KAHT;AAIE,IAAA,QAAQ,EAAE,CAAC;AAAEM,MAAAA;AAAF,KAAD,KAAgBL,QAAQ,CAACK,MAAM,CAACC,KAAR,CAJpC;AAKE,IAAA,IAAI,EAAC,OALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAUE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,KAAK,MAA7B;AAA8B,IAAA,QAAQ,EAAE,CAACP,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CAVF,eAeE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAiC,IAAA,EAAE,EAAC,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gEAEE;AAAM,IAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CAfF,CADF;AAsBD,CAvCD;;AAyCAJ,kBAAkB,CAACY,SAAnB,GAA+B;AAC7BX,EAAAA,WAAW,EAAET,SAAS,CAACqB,IAAV,CAAeC,UADC;AAE7BZ,EAAAA,cAAc,EAAEV,SAAS,CAACqB,IAAV,CAAeC,UAFF;AAG7BX,EAAAA,MAAM,EAAEX,SAAS,CAACuB;AAHW,CAA/B;AAMAf,kBAAkB,CAACgB,YAAnB,GAAkC;AAAEb,EAAAA,MAAM,EAAE;AAAV,CAAlC;AAEA,eAAeJ,YAAY,CAACC,kBAAD,CAA3B","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Button, Form, FormGroup, Input } from 'reactstrap';\nimport withRedirect from '../../hoc/withRedirect';\n\nconst ForgetPasswordForm = ({ setRedirect, setRedirectUrl, layout }) => {\n  // State\n  const [email, setEmail] = useState('');\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (email) {\n      toast.success(`An email is sent to ${email} with password reset link`);\n      setRedirect(true);\n    }\n  };\n\n  useEffect(() => {\n    setRedirectUrl(`/authentication/${layout}/confirm-mail`);\n  }, [setRedirectUrl, layout]);\n\n  return (\n    <Form className=\"mt-4\" onSubmit={handleSubmit}>\n      <FormGroup>\n        <Input\n          className=\"form-control\"\n          placeholder=\"Email address\"\n          value={email}\n          onChange={({ target }) => setEmail(target.value)}\n          type=\"email\"\n        />\n      </FormGroup>\n      <FormGroup>\n        <Button color=\"primary\" block disabled={!email}>\n          Send reset link\n        </Button>\n      </FormGroup>\n      <Link className=\"fs--1 text-600\" to=\"#!\">\n        I can't recover my account using this page\n        <span className=\"d-inline-block ml-1\">&rarr;</span>\n      </Link>\n    </Form>\n  );\n};\n\nForgetPasswordForm.propTypes = {\n  setRedirect: PropTypes.func.isRequired,\n  setRedirectUrl: PropTypes.func.isRequired,\n  layout: PropTypes.string\n};\n\nForgetPasswordForm.defaultProps = { layout: 'basic' };\n\nexport default withRedirect(ForgetPasswordForm);\n"]},"metadata":{},"sourceType":"module"}