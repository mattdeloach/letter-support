{"ast":null,"code":"var _jsxFileName = \"/Users/greypro/Documents/Dev/letter/letter-support/src/components/page/Activity.js\";\nimport React from 'react';\nimport { Alert, Card, CardBody, Col, Row } from 'reactstrap';\nimport Loader from '../common/Loader';\nimport FalconCardHeader from '../common/FalconCardHeader';\nimport Notification from '../notification/Notification';\nimport { isIterableArray } from '../../helpers/utils';\nimport useFakeFetch from '../../hooks/useFakeFetch';\nimport rawActivities from '../../data/activity/activities';\n\nconst Activity = () => {\n  const {\n    loading,\n    data: activities\n  } = useFakeFetch(rawActivities);\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FalconCardHeader, {\n    title: \"Activity log\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardBody, {\n    className: \"fs--1 p-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }) : isIterableArray(activities) ? activities.map((activity, index) => {\n    const roundedClass = activities.length === index + 1 ? 'rounded-top-0' : 'rounded-0';\n    return /*#__PURE__*/React.createElement(Notification, Object.assign({\n      key: index,\n      className: `border-x-0 border-bottom-0 border-300 ${roundedClass}`\n    }, activity, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 15\n      }\n    }));\n  }) : /*#__PURE__*/React.createElement(Row, {\n    className: \"p-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    color: \"info\",\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  }, \"No activity found\")))));\n};\n\nexport default Activity;","map":{"version":3,"sources":["/Users/greypro/Documents/Dev/letter/letter-support/src/components/page/Activity.js"],"names":["React","Alert","Card","CardBody","Col","Row","Loader","FalconCardHeader","Notification","isIterableArray","useFakeFetch","rawActivities","Activity","loading","data","activities","map","activity","index","roundedClass","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,QAAtB,EAAgCC,GAAhC,EAAqCC,GAArC,QAAgD,YAAhD;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,IAAI,EAAEC;AAAjB,MAAgCL,YAAY,CAACC,aAAD,CAAlD;AAEA,sBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAC,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,OAAO,gBACN,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,GAEJJ,eAAe,CAACM,UAAD,CAAf,GACFA,UAAU,CAACC,GAAX,CAAe,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAClC,UAAMC,YAAY,GAAGJ,UAAU,CAACK,MAAX,KAAsBF,KAAK,GAAG,CAA9B,GAAkC,eAAlC,GAAoD,WAAzE;AAEA,wBACE,oBAAC,YAAD;AACE,MAAA,GAAG,EAAEA,KADP;AAEE,MAAA,SAAS,EAAG,yCAAwCC,YAAa;AAFnE,OAGMF,QAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF;AAOD,GAVD,CADE,gBAaF,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAC,MAAb;AAAoB,IAAA,SAAS,EAAC,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CADF,CAhBJ,CAFF,CADF;AA8BD,CAjCD;;AAmCA,eAAeL,QAAf","sourcesContent":["import React from 'react';\nimport { Alert, Card, CardBody, Col, Row } from 'reactstrap';\nimport Loader from '../common/Loader';\nimport FalconCardHeader from '../common/FalconCardHeader';\nimport Notification from '../notification/Notification';\nimport { isIterableArray } from '../../helpers/utils';\nimport useFakeFetch from '../../hooks/useFakeFetch';\nimport rawActivities from '../../data/activity/activities';\n\nconst Activity = () => {\n  const { loading, data: activities } = useFakeFetch(rawActivities);\n\n  return (\n    <Card>\n      <FalconCardHeader title=\"Activity log\" />\n      <CardBody className=\"fs--1 p-0\">\n        {loading ? (\n          <Loader />\n        ) : isIterableArray(activities) ? (\n          activities.map((activity, index) => {\n            const roundedClass = activities.length === index + 1 ? 'rounded-top-0' : 'rounded-0';\n\n            return (\n              <Notification\n                key={index}\n                className={`border-x-0 border-bottom-0 border-300 ${roundedClass}`}\n                {...activity}\n              />\n            );\n          })\n        ) : (\n          <Row className=\"p-card\">\n            <Col>\n              <Alert color=\"info\" className=\"mb-0\">\n                No activity found\n              </Alert>\n            </Col>\n          </Row>\n        )}\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default Activity;\n"]},"metadata":{},"sourceType":"module"}