{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/Dev/letter/letter-support/src/components/agent/transaction-detail/TransactionDetail.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Badge, Card, CardBody, CardFooter, CardHeader, Col, DropdownItem, DropdownMenu, DropdownToggle, Media, Row, UncontrolledDropdown } from 'reactstrap';\nimport Loader from '../../common/Loader';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport FalconCardHeader from '../../common/FalconCardHeader';\nimport FalconCardFooterLink from '../../common/FalconCardFooterLink';\nimport useFakeFetch from '../../../hooks/useFakeFetch';\nimport { isIterableArray } from '../../../helpers/utils';\nimport createMarkup from '../../../helpers/createMarkup';\nimport rawCustomer from './data/vendor';\nimport rawCustomerLogs from './data/purchaseHistory';\n\nconst Subnav = () => {\n  const {\n    loading,\n    data: customer\n  } = useFakeFetch(rawCustomer);\n  const {\n    name,\n    email,\n    createdAt\n  } = customer;\n  return /*#__PURE__*/React.createElement(Card, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, \"Transaction Detail\"), /*#__PURE__*/React.createElement(ButtonIcon, {\n    color: \"falcon-default\",\n    size: \"sm\",\n    icon: \"plus\",\n    iconClassName: \"fs--2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, \"Add note\"), /*#__PURE__*/React.createElement(UncontrolledDropdown, {\n    className: \"d-inline-block ml-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DropdownToggle, {\n    color: \"falcon-default\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: \"ellipsis-h\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(DropdownMenu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(DropdownItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(DropdownItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, \"Report\"), /*#__PURE__*/React.createElement(DropdownItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, \"Archive\"), /*#__PURE__*/React.createElement(DropdownItem, {\n    divider: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(DropdownItem, {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, \"Delete user\")))), /*#__PURE__*/React.createElement(Col, {\n    xs: \"auto\",\n    className: \"d-none d-sm-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"text-uppercase text-600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, \"Customer\", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: \"user\",\n    className: \"ml-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 19\n    }\n  }))))), /*#__PURE__*/React.createElement(CardBody, {\n    className: \"border-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: \"user\",\n    transform: \"down-5\",\n    className: \"text-success mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Media, {\n    body: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, \"Customer was created\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"fs--1 mb-0 text-600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, createdAt))))));\n};\n\nconst VendorSummary = () => {\n  const {\n    loading,\n    data: customer\n  } = useFakeFetch(rawCustomer);\n  const {\n    name,\n    email,\n    createdAt\n  } = customer;\n  return /*#__PURE__*/React.createElement(Card, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, \"Something\"), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, \"Stark Industries\"), /*#__PURE__*/React.createElement(ButtonIcon, {\n    color: \"falcon-default\",\n    size: \"sm\",\n    icon: \"plus\",\n    iconClassName: \"fs--2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, \"Add note\"), /*#__PURE__*/React.createElement(UncontrolledDropdown, {\n    className: \"d-inline-block ml-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DropdownToggle, {\n    color: \"falcon-default\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: \"ellipsis-h\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(DropdownMenu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(DropdownItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(DropdownItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }, \"Report\"), /*#__PURE__*/React.createElement(DropdownItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }, \"Archive\"), /*#__PURE__*/React.createElement(DropdownItem, {\n    divider: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(DropdownItem, {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }, \"Delete user\")))), /*#__PURE__*/React.createElement(Col, {\n    xs: \"auto\",\n    className: \"d-none d-sm-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"text-uppercase text-600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, \"Customer\", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: \"user\",\n    className: \"ml-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 19\n    }\n  }))))), /*#__PURE__*/React.createElement(CardBody, {\n    className: \"border-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: \"building\",\n    transform: \"down-5\",\n    className: \"text-success mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Media, {\n    body: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, \"Merchant flagged for fraud\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"fs--1 mb-0 text-600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, createdAt))))));\n};\n\nconst CustomerDetailRow = ({\n  title,\n  isLastItem,\n  children\n}) => /*#__PURE__*/React.createElement(Row, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Col, {\n  xs: 5,\n  sm: 4,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"p\", {\n  className: classNames('font-weight-semi-bold', {\n    'mb-0': isLastItem,\n    'mb-1': !isLastItem\n  }),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 7\n  }\n}, title)), /*#__PURE__*/React.createElement(Col, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }\n}, children));\n\nCustomerDetailRow.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n  isLastItem: PropTypes.bool\n};\nCustomerDetailRow.defaultProps = {\n  last: false\n};\n\nconst CustomerDetail = () => {\n  const {\n    loading,\n    data: customer\n  } = useFakeFetch(rawCustomer);\n  const {\n    status,\n    id,\n    email,\n    createdAt,\n    description,\n    vat_no,\n    email_to,\n    address,\n    cell,\n    invoice_prefix\n  } = customer;\n  return /*#__PURE__*/React.createElement(Card, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FalconCardHeader, {\n    title: \"$82,239.23\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ButtonIcon, {\n    tag: Link,\n    color: \"falcon-default\",\n    size: \"sm\",\n    icon: \"pencil-alt\",\n    to: \"#!\",\n    iconClassName: \"fs--2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }, \"Update details\")), /*#__PURE__*/React.createElement(CardBody, {\n    className: \"bg-light border-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: true,\n    className: \"col-xxl-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"font-weight-semi-bold ls mb-3 text-uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 15\n    }\n  }, \"Details\"), /*#__PURE__*/React.createElement(CustomerDetailRow, {\n    title: \"Status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 15\n    }\n  }, status), /*#__PURE__*/React.createElement(CustomerDetailRow, {\n    title: \"Created\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 15\n    }\n  }, createdAt), /*#__PURE__*/React.createElement(CustomerDetailRow, {\n    title: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `mailto:${email}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }\n  }, email)), /*#__PURE__*/React.createElement(CustomerDetailRow, {\n    title: \"Description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 15\n    }\n  }, description ? description : /*#__PURE__*/React.createElement(\"p\", {\n    className: \"font-italic text-400 mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 46\n    }\n  }, \"No Description\")), /*#__PURE__*/React.createElement(CustomerDetailRow, {\n    title: \"VAT number\",\n    isLastItem: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 15\n    }\n  }, vat_no ? vat_no : /*#__PURE__*/React.createElement(\"p\", {\n    className: \"font-italic text-400 mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 36\n    }\n  }, \"No VAT Number\"))), /*#__PURE__*/React.createElement(Col, {\n    lg: true,\n    className: \"col-xxl-5 mt-4 mt-lg-0 offset-xxl-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"font-weight-semi-bold ls mb-3 text-uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 15\n    }\n  }, \"Billing Information\"), /*#__PURE__*/React.createElement(CustomerDetailRow, {\n    title: \"Send email to\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `mailto:${email_to}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 17\n    }\n  }, email_to)), /*#__PURE__*/React.createElement(CustomerDetailRow, {\n    title: \"Address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-1\",\n    dangerouslySetInnerHTML: createMarkup(address),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(CustomerDetailRow, {\n    title: \"Phone number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `tel:${cell}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 17\n    }\n  }, cell)), /*#__PURE__*/React.createElement(CustomerDetailRow, {\n    title: \"Invoice prefix\",\n    isLastItem: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"font-weight-semi-bold mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 17\n    }\n  }, invoice_prefix))))), /*#__PURE__*/React.createElement(CardFooter, {\n    className: \"border-top text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ButtonIcon, {\n    tag: Link,\n    color: \"falcon-default\",\n    size: \"sm\",\n    icon: \"dollar-sign\",\n    to: \"#!\",\n    iconClassName: \"fs--2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }\n  }, \"Refund\"), /*#__PURE__*/React.createElement(ButtonIcon, {\n    tag: Link,\n    color: \"falcon-default\",\n    size: \"sm\",\n    icon: \"check\",\n    className: \"ml-2\",\n    to: \"#!\",\n    iconClassName: \"fs--2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }\n  }, \"Save changes\")));\n};\n\nconst CustomerLog = ({\n  status,\n  link,\n  time\n}) => {\n  let badgeColor = 'soft-warning';\n  if (status === 404) badgeColor = 'soft-danger';else if (status === 200) badgeColor = 'soft-success';\n  return /*#__PURE__*/React.createElement(Row, {\n    noGutters: true,\n    className: \"align-items-center border-bottom py-2 px-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"auto\",\n    className: \"pr-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Badge, {\n    color: badgeColor,\n    pill: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 9\n    }\n  }, status)), /*#__PURE__*/React.createElement(Col, {\n    md: true,\n    className: \"mt-1 mt-md-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }\n  }, \"POST \", link)), /*#__PURE__*/React.createElement(Col, {\n    md: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 9\n    }\n  }, time)));\n};\n\nCustomerLog.propTypes = {\n  status: PropTypes.number.isRequired,\n  link: PropTypes.string.isRequired,\n  time: PropTypes.string.isRequired\n};\n\nconst CustomerLogs = () => {\n  const {\n    loading,\n    data: customerLogs\n  } = useFakeFetch(rawCustomerLogs);\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FalconCardHeader, {\n    title: \"Purchase History\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardBody, {\n    className: \"border-top p-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 11\n    }\n  }) : isIterableArray(customerLogs) && customerLogs.map((log, index) => /*#__PURE__*/React.createElement(CustomerLog, Object.assign({}, log, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 77\n    }\n  })))), /*#__PURE__*/React.createElement(FalconCardFooterLink, {\n    title: \"View more logs\",\n    to: \"#!\",\n    borderTop: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst TransactionDetail = () => /*#__PURE__*/React.createElement(Fragment, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 284,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Subnav, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 285,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(VendorSummary, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 286,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(CustomerDetail, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 287,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(CustomerLogs, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 288,\n    columnNumber: 5\n  }\n}));\n\nexport default TransactionDetail;","map":{"version":3,"sources":["/Users/matt/Documents/Dev/letter/letter-support/src/components/agent/transaction-detail/TransactionDetail.js"],"names":["React","Fragment","PropTypes","classNames","Link","FontAwesomeIcon","Badge","Card","CardBody","CardFooter","CardHeader","Col","DropdownItem","DropdownMenu","DropdownToggle","Media","Row","UncontrolledDropdown","Loader","ButtonIcon","FalconCardHeader","FalconCardFooterLink","useFakeFetch","isIterableArray","createMarkup","rawCustomer","rawCustomerLogs","Subnav","loading","data","customer","name","email","createdAt","VendorSummary","CustomerDetailRow","title","isLastItem","children","propTypes","string","isRequired","node","bool","defaultProps","last","CustomerDetail","status","id","description","vat_no","email_to","address","cell","invoice_prefix","CustomerLog","link","time","badgeColor","number","CustomerLogs","customerLogs","map","log","index","TransactionDetail"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  Badge,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Col,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  Media,\n  Row,\n  UncontrolledDropdown\n} from 'reactstrap';\nimport Loader from '../../common/Loader';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport FalconCardHeader from '../../common/FalconCardHeader';\nimport FalconCardFooterLink from '../../common/FalconCardFooterLink';\nimport useFakeFetch from '../../../hooks/useFakeFetch';\nimport { isIterableArray } from '../../../helpers/utils';\nimport createMarkup from '../../../helpers/createMarkup';\nimport rawCustomer from './data/vendor';\nimport rawCustomerLogs from './data/purchaseHistory';\n\nconst Subnav = () => {\n  const { loading, data: customer } = useFakeFetch(rawCustomer);\n  const { name, email, createdAt } = customer;\n\n  return (\n    <Card className=\"mb-3\">\n      {loading ? (\n        <Loader />\n      ) : (\n        <Fragment>\n          <CardHeader>\n            <Row>\n              <Col>\n                <h5 className=\"mb-2\">\n                  Transaction Detail\n                </h5>\n                <ButtonIcon color=\"falcon-default\" size=\"sm\" icon=\"plus\" iconClassName=\"fs--2\">\n                  Add note\n                </ButtonIcon>\n\n                <UncontrolledDropdown className=\"d-inline-block ml-2\">\n                  <DropdownToggle color=\"falcon-default\" size=\"sm\">\n                    <FontAwesomeIcon icon=\"ellipsis-h\" />\n                  </DropdownToggle>\n                  <DropdownMenu>\n                    <DropdownItem>Edit</DropdownItem>\n                    <DropdownItem>Report</DropdownItem>\n                    <DropdownItem>Archive</DropdownItem>\n                    <DropdownItem divider />\n                    <DropdownItem className=\"text-danger\">Delete user</DropdownItem>\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n              </Col>\n              <Col xs=\"auto\" className=\"d-none d-sm-block\">\n                <h6 className=\"text-uppercase text-600\">\n                  Customer\n                  <FontAwesomeIcon icon=\"user\" className=\"ml-2\" />\n                </h6>\n              </Col>\n            </Row>\n          </CardHeader>\n          <CardBody className=\"border-top\">\n            <Media>\n              <FontAwesomeIcon icon=\"user\" transform=\"down-5\" className=\"text-success mr-2\" />\n              <Media body>\n                <p className=\"mb-0\">Customer was created</p>\n                <p className=\"fs--1 mb-0 text-600\">{createdAt}</p>\n              </Media>\n            </Media>\n          </CardBody>\n        </Fragment>\n      )}\n    </Card>\n  );\n};\n\nconst VendorSummary = () => {\n  const { loading, data: customer } = useFakeFetch(rawCustomer);\n  const { name, email, createdAt } = customer;\n\n  return (\n    <Card className=\"mb-3\">\n      {loading ? (\n        <Loader />\n      ) : (\n        <Fragment>\n          <CardHeader>\n            <Row>\n              <Col>\n                Something\n              </Col>\n              <Col>\n                <h5 className=\"mb-2\">\n                  Stark Industries\n                </h5>\n                <ButtonIcon color=\"falcon-default\" size=\"sm\" icon=\"plus\" iconClassName=\"fs--2\">\n                  Add note\n                </ButtonIcon>\n\n                <UncontrolledDropdown className=\"d-inline-block ml-2\">\n                  <DropdownToggle color=\"falcon-default\" size=\"sm\">\n                    <FontAwesomeIcon icon=\"ellipsis-h\" />\n                  </DropdownToggle>\n                  <DropdownMenu>\n                    <DropdownItem>Edit</DropdownItem>\n                    <DropdownItem>Report</DropdownItem>\n                    <DropdownItem>Archive</DropdownItem>\n                    <DropdownItem divider />\n                    <DropdownItem className=\"text-danger\">Delete user</DropdownItem>\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n              </Col>\n              <Col xs=\"auto\" className=\"d-none d-sm-block\">\n                <h6 className=\"text-uppercase text-600\">\n                  Customer\n                  <FontAwesomeIcon icon=\"user\" className=\"ml-2\" />\n                </h6>\n              </Col>\n            </Row>\n          </CardHeader>\n          <CardBody className=\"border-top\">\n            <Media>\n              <FontAwesomeIcon icon=\"building\" transform=\"down-5\" className=\"text-success mr-2\" />\n              <Media body>\n                <p className=\"mb-0\">Merchant flagged for fraud</p>\n                <p className=\"fs--1 mb-0 text-600\">{createdAt}</p>\n              </Media>\n            </Media>\n          </CardBody>\n        </Fragment>\n      )}\n    </Card>\n  );\n};\n\nconst CustomerDetailRow = ({ title, isLastItem, children }) => (\n  <Row>\n    <Col xs={5} sm={4}>\n      <p\n        className={classNames('font-weight-semi-bold', {\n          'mb-0': isLastItem,\n          'mb-1': !isLastItem\n        })}\n      >\n        {title}\n      </p>\n    </Col>\n    <Col>{children}</Col>\n  </Row>\n);\n\nCustomerDetailRow.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n  isLastItem: PropTypes.bool\n};\n\nCustomerDetailRow.defaultProps = { last: false };\n\nconst CustomerDetail = () => {\n  const { loading, data: customer } = useFakeFetch(rawCustomer);\n  const { status, id, email, createdAt, description, vat_no, email_to, address, cell, invoice_prefix } = customer;\n\n  return (\n    <Card className=\"mb-3\">\n      <FalconCardHeader title=\"$82,239.23\">\n        <ButtonIcon tag={Link} color=\"falcon-default\" size=\"sm\" icon=\"pencil-alt\" to=\"#!\" iconClassName=\"fs--2\">\n          Update details\n        </ButtonIcon>\n      </FalconCardHeader>\n      <CardBody className=\"bg-light border-top\">\n        {loading ? (\n          <Loader />\n        ) : (\n          <Row>\n            <Col lg className=\"col-xxl-5\">\n              <h6 className=\"font-weight-semi-bold ls mb-3 text-uppercase\">Details</h6>\n              <CustomerDetailRow title=\"Status\">{status}</CustomerDetailRow>\n              <CustomerDetailRow title=\"Created\">{createdAt}</CustomerDetailRow>\n              <CustomerDetailRow title=\"Email\">\n                <a href={`mailto:${email}`}>{email}</a>\n              </CustomerDetailRow>\n              <CustomerDetailRow title=\"Description\">\n                {description ? description : <p className=\"font-italic text-400 mb-1\">No Description</p>}\n              </CustomerDetailRow>\n              <CustomerDetailRow title=\"VAT number\" isLastItem>\n                {vat_no ? vat_no : <p className=\"font-italic text-400 mb-0\">No VAT Number</p>}\n              </CustomerDetailRow>\n            </Col>\n            <Col lg className=\"col-xxl-5 mt-4 mt-lg-0 offset-xxl-1\">\n              <h6 className=\"font-weight-semi-bold ls mb-3 text-uppercase\">Billing Information</h6>\n              <CustomerDetailRow title=\"Send email to\">\n                <a href={`mailto:${email_to}`}>{email_to}</a>\n              </CustomerDetailRow>\n              <CustomerDetailRow title=\"Address\">\n                <p className=\"mb-1\" dangerouslySetInnerHTML={createMarkup(address)} />\n              </CustomerDetailRow>\n              <CustomerDetailRow title=\"Phone number\">\n                <a href={`tel:${cell}`}>{cell}</a>\n              </CustomerDetailRow>\n              <CustomerDetailRow title=\"Invoice prefix\" isLastItem>\n                <p className=\"font-weight-semi-bold mb-0\">{invoice_prefix}</p>\n              </CustomerDetailRow>\n            </Col>\n          </Row>\n        )}\n      </CardBody>\n      <CardFooter className=\"border-top text-right\">\n        <ButtonIcon tag={Link} color=\"falcon-default\" size=\"sm\" icon=\"dollar-sign\" to=\"#!\" iconClassName=\"fs--2\">\n          Refund\n        </ButtonIcon>\n        <ButtonIcon\n          tag={Link}\n          color=\"falcon-default\"\n          size=\"sm\"\n          icon=\"check\"\n          className=\"ml-2\"\n          to=\"#!\"\n          iconClassName=\"fs--2\"\n        >\n          Save changes\n        </ButtonIcon>\n      </CardFooter>\n    </Card>\n  );\n};\n\nconst CustomerLog = ({ status, link, time }) => {\n  let badgeColor = 'soft-warning';\n  if (status === 404) badgeColor = 'soft-danger';\n  else if (status === 200) badgeColor = 'soft-success';\n\n  return (\n    <Row noGutters className=\"align-items-center border-bottom py-2 px-3\">\n      <Col md=\"auto\" className=\"pr-3\">\n        <Badge color={badgeColor} pill>\n          {status}\n        </Badge>\n      </Col>\n      <Col md className=\"mt-1 mt-md-0\">\n        <code>POST {link}</code>\n      </Col>\n      <Col md=\"auto\">\n        <p className=\"mb-0\">{time}</p>\n      </Col>\n    </Row>\n  );\n};\n\nCustomerLog.propTypes = {\n  status: PropTypes.number.isRequired,\n  link: PropTypes.string.isRequired,\n  time: PropTypes.string.isRequired\n};\n\nconst CustomerLogs = () => {\n  const { loading, data: customerLogs } = useFakeFetch(rawCustomerLogs);\n\n  return (\n    <Card>\n      <FalconCardHeader title=\"Purchase History\" />\n      <CardBody className=\"border-top p-0\">\n        {loading ? (\n          <Loader />\n        ) : (\n          isIterableArray(customerLogs) && customerLogs.map((log, index) => <CustomerLog {...log} key={index} />)\n        )}\n      </CardBody>\n      <FalconCardFooterLink title=\"View more logs\" to=\"#!\" borderTop={false} />\n    </Card>\n  );\n};\n\nconst TransactionDetail = () => (\n  <Fragment>\n    <Subnav />\n    <VendorSummary />\n    <CustomerDetail />\n    <CustomerLogs />\n  </Fragment>\n);\n\nexport default TransactionDetail;\n"]},"metadata":{},"sourceType":"module"}