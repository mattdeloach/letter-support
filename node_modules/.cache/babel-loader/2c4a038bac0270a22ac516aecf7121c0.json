{"ast":null,"code":"var _jsxFileName = \"/Users/greypro/Documents/Dev/letter/letter-support/src/components/bootstrap-components/FalconAccordions.js\";\nimport React, { Fragment } from 'react';\nimport { Card, CardBody } from 'reactstrap';\nimport PageHeader from '../common/PageHeader';\nimport FalconCardHeader from '../common/FalconCardHeader';\nimport Accordion from '../common/accordion/Accordion';\nimport Accordions from '../common/accordion/Accordions';\nimport FalconEditor from '../common/FalconEditor';\nconst exampleCode = `<div  className=\"border-x border-top\">\n  <Accordion\n    title=\"How long do payouts take?\"\n    description=\"Once you’re set up, payouts arrive in your bank account on a 2-day rolling basis. Or you can opt to receive payouts weekly or monthly.\"\n    open={true}\n  />\n</div>`;\nconst accordionProperty = `Accordion.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  open: PropTypes.bool // default: false\n};\n`;\nconst accordionsProperty = `Accordions.propTypes = {\n  items: PropTypes.array.isRequired,\n  titleKey: PropTypes.string.isRequired,\n  descriptionKey: PropTypes.string.isRequired,\n  isOpenKey: PropTypes.string\n};\n`;\nconst faq = [{\n  question: 'How long do payouts take?',\n  answer: 'Once you’re set up, payouts arrive in your bank account on a 2-day rolling basis. Or you can opt to receive payouts weekly or monthly.',\n  open: true\n}, {\n  question: 'How do refunds work?',\n  answer: 'You can issue either partial or full refunds. There are no fees to refund a charge, but the fees from the original charge are not returned.'\n}, {\n  question: 'How much do disputes costs?',\n  answer: 'Disputed payments (also known as chargebacks) incur a $15.00 fee. If the customer’s bank resolves the dispute in your favor, the fee is fully refunded.'\n}, {\n  question: 'Is there a fee to use Apple Pay or Google Pay?',\n  answer: 'There are no additional fees for using our mobile SDKs or to accept payments using consumer wallets like Apple Pay or Google Pay.'\n}];\n\nconst FalconAccordions = () => /*#__PURE__*/React.createElement(Fragment, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(PageHeader, {\n  title: \"Accordion\",\n  description: \"An accordion allows users to toggle the display of sections of content.\",\n  className: \"mb-3\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(Card, {\n  className: \"mb-3\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(FalconCardHeader, {\n  title: \"Example\",\n  light: false,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(CardBody, {\n  className: \"bg-light\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(FalconEditor, {\n  code: exampleCode,\n  scope: {\n    Accordion\n  },\n  language: \"jsx\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }\n}))), /*#__PURE__*/React.createElement(Card, {\n  className: \"mb-3\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(FalconCardHeader, {\n  title: \"Accordion Property\",\n  light: false,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(CardBody, {\n  className: \"bg-light\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(FalconEditor, {\n  code: accordionProperty,\n  hidePreview: true,\n  scope: {\n    Accordion\n  },\n  language: \"jsx\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }\n}))), /*#__PURE__*/React.createElement(Card, {\n  className: \"mb-3\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(FalconCardHeader, {\n  title: \"Accordions\",\n  light: false,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(CardBody, {\n  className: \"bg-light\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(Accordions, {\n  items: faq,\n  titleKey: \"question\",\n  descriptionKey: \"answer\",\n  isOpenKey: \"open\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }\n}))), /*#__PURE__*/React.createElement(Card, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(FalconCardHeader, {\n  title: \"Accordion Property\",\n  light: false,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(CardBody, {\n  className: \"bg-light\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(FalconEditor, {\n  code: accordionsProperty,\n  hidePreview: true,\n  scope: {\n    Accordions\n  },\n  language: \"jsx\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }\n}))));\n\nexport default FalconAccordions;","map":{"version":3,"sources":["/Users/greypro/Documents/Dev/letter/letter-support/src/components/bootstrap-components/FalconAccordions.js"],"names":["React","Fragment","Card","CardBody","PageHeader","FalconCardHeader","Accordion","Accordions","FalconEditor","exampleCode","accordionProperty","accordionsProperty","faq","question","answer","open","FalconAccordions"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport { Card, CardBody } from 'reactstrap';\nimport PageHeader from '../common/PageHeader';\nimport FalconCardHeader from '../common/FalconCardHeader';\nimport Accordion from '../common/accordion/Accordion';\nimport Accordions from '../common/accordion/Accordions';\nimport FalconEditor from '../common/FalconEditor';\n\nconst exampleCode = `<div  className=\"border-x border-top\">\n  <Accordion\n    title=\"How long do payouts take?\"\n    description=\"Once you’re set up, payouts arrive in your bank account on a 2-day rolling basis. Or you can opt to receive payouts weekly or monthly.\"\n    open={true}\n  />\n</div>`;\n\nconst accordionProperty = `Accordion.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  open: PropTypes.bool // default: false\n};\n`;\nconst accordionsProperty = `Accordions.propTypes = {\n  items: PropTypes.array.isRequired,\n  titleKey: PropTypes.string.isRequired,\n  descriptionKey: PropTypes.string.isRequired,\n  isOpenKey: PropTypes.string\n};\n`;\n\nconst faq = [\n  {\n    question: 'How long do payouts take?',\n    answer:\n      'Once you’re set up, payouts arrive in your bank account on a 2-day rolling basis. Or you can opt to receive payouts weekly or monthly.',\n    open: true\n  },\n  {\n    question: 'How do refunds work?',\n    answer:\n      'You can issue either partial or full refunds. There are no fees to refund a charge, but the fees from the original charge are not returned.'\n  },\n  {\n    question: 'How much do disputes costs?',\n    answer:\n      'Disputed payments (also known as chargebacks) incur a $15.00 fee. If the customer’s bank resolves the dispute in your favor, the fee is fully refunded.'\n  },\n  {\n    question: 'Is there a fee to use Apple Pay or Google Pay?',\n    answer:\n      'There are no additional fees for using our mobile SDKs or to accept payments using consumer wallets like Apple Pay or Google Pay.'\n  }\n];\n\nconst FalconAccordions = () => (\n  <Fragment>\n    <PageHeader\n      title=\"Accordion\"\n      description=\"An accordion allows users to toggle the display of sections of content.\"\n      className=\"mb-3\"\n    />\n    <Card className=\"mb-3\">\n      <FalconCardHeader title=\"Example\" light={false} />\n      <CardBody className=\"bg-light\">\n        <FalconEditor code={exampleCode} scope={{ Accordion }} language=\"jsx\" />\n      </CardBody>\n    </Card>\n    <Card className=\"mb-3\">\n      <FalconCardHeader title=\"Accordion Property\" light={false} />\n      <CardBody className=\"bg-light\">\n        <FalconEditor code={accordionProperty} hidePreview scope={{ Accordion }} language=\"jsx\" />\n      </CardBody>\n    </Card>\n    <Card className=\"mb-3\">\n      <FalconCardHeader title=\"Accordions\" light={false} />\n      <CardBody className=\"bg-light\">\n        <Accordions items={faq} titleKey=\"question\" descriptionKey=\"answer\" isOpenKey=\"open\" />\n      </CardBody>\n    </Card>\n    <Card>\n      <FalconCardHeader title=\"Accordion Property\" light={false} />\n      <CardBody className=\"bg-light\">\n        <FalconEditor code={accordionsProperty} hidePreview scope={{ Accordions }} language=\"jsx\" />\n      </CardBody>\n    </Card>\n  </Fragment>\n);\n\nexport default FalconAccordions;\n"]},"metadata":{},"sourceType":"module"}