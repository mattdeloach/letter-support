{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport chunk from 'lodash/chunk';\nimport { isIterableArray } from '../helpers/utils';\n\nconst usePagination = (items, defaultItemsPerPage = 5) => {\n  const [data, setData] = useState([]);\n  const [itemsChunk, setItemsChunk] = useState([]);\n  const [total, setTotal] = useState(0);\n  const [lastPageNo, setLastPageNo] = useState(0);\n  const [itemsPerPage, setItemsPerPage] = useState(defaultItemsPerPage);\n  const [pageNo, setPageNo] = useState(null);\n  const [from, setFrom] = useState(1);\n  const [to, setTo] = useState(itemsPerPage);\n  const [prevPageNo, setPrevPageNo] = useState(true);\n  const [nextPageNo, setNextPageNo] = useState(true);\n  useEffect(() => {\n    setData(isIterableArray(itemsChunk[pageNo - 1]) ? itemsChunk[pageNo - 1] : []);\n  }, [setData, itemsPerPage, itemsChunk, pageNo]);\n  useEffect(() => {\n    setItemsChunk(chunk(items, itemsPerPage));\n    setPageNo(1);\n    setTotal(items.length);\n  }, [itemsPerPage, setPageNo, items]);\n  useEffect(() => {\n    setFrom(itemsPerPage * (pageNo - 1) + 1);\n    setTo(itemsPerPage * (pageNo - 1) + data.length);\n    setPrevPageNo(pageNo > 1 ? pageNo - 1 : null);\n    setNextPageNo(pageNo < lastPageNo ? pageNo + 1 : null);\n  }, [itemsPerPage, pageNo, data, lastPageNo]);\n  useEffect(() => {\n    setLastPageNo(itemsChunk.length);\n  }, [itemsChunk]);\n\n  const handleNextPage = () => setPageNo(pageNo + 1);\n\n  const handlePrevPage = () => setPageNo(pageNo - 1);\n\n  return {\n    data,\n    meta: {\n      total,\n      pageNo,\n      lastPageNo,\n      itemsPerPage,\n      from,\n      to,\n      nextPageNo,\n      prevPageNo\n    },\n    handler: {\n      nextPage: handleNextPage,\n      prevPage: handlePrevPage,\n      currentPage: setPageNo,\n      perPage: setItemsPerPage\n    }\n  };\n};\n\nexport default usePagination;","map":{"version":3,"sources":["/Users/matt/Documents/Dev/letter/letter-support/src/hooks/usePagination.js"],"names":["useState","useEffect","chunk","isIterableArray","usePagination","items","defaultItemsPerPage","data","setData","itemsChunk","setItemsChunk","total","setTotal","lastPageNo","setLastPageNo","itemsPerPage","setItemsPerPage","pageNo","setPageNo","from","setFrom","to","setTo","prevPageNo","setPrevPageNo","nextPageNo","setNextPageNo","length","handleNextPage","handlePrevPage","meta","handler","nextPage","prevPage","currentPage","perPage"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport chunk from 'lodash/chunk';\nimport { isIterableArray } from '../helpers/utils';\n\nconst usePagination = (items, defaultItemsPerPage = 5) => {\n  const [data, setData] = useState([]);\n  const [itemsChunk, setItemsChunk] = useState([]);\n  const [total, setTotal] = useState(0);\n  const [lastPageNo, setLastPageNo] = useState(0);\n  const [itemsPerPage, setItemsPerPage] = useState(defaultItemsPerPage);\n  const [pageNo, setPageNo] = useState(null);\n  const [from, setFrom] = useState(1);\n  const [to, setTo] = useState(itemsPerPage);\n  const [prevPageNo, setPrevPageNo] = useState(true);\n  const [nextPageNo, setNextPageNo] = useState(true);\n\n  useEffect(() => {\n    setData(isIterableArray(itemsChunk[pageNo - 1]) ? itemsChunk[pageNo - 1] : []);\n  }, [setData, itemsPerPage, itemsChunk, pageNo]);\n\n  useEffect(() => {\n    setItemsChunk(chunk(items, itemsPerPage));\n    setPageNo(1);\n    setTotal(items.length);\n  }, [itemsPerPage, setPageNo, items]);\n\n  useEffect(() => {\n    setFrom(itemsPerPage * (pageNo - 1) + 1);\n    setTo(itemsPerPage * (pageNo - 1) + data.length);\n    setPrevPageNo(pageNo > 1 ? pageNo - 1 : null);\n    setNextPageNo(pageNo < lastPageNo ? pageNo + 1 : null);\n  }, [itemsPerPage, pageNo, data, lastPageNo]);\n\n  useEffect(() => {\n    setLastPageNo(itemsChunk.length);\n  }, [itemsChunk]);\n\n  const handleNextPage = () => setPageNo(pageNo + 1);\n  const handlePrevPage = () => setPageNo(pageNo - 1);\n\n  return {\n    data,\n    meta: { total, pageNo, lastPageNo, itemsPerPage, from, to, nextPageNo, prevPageNo },\n    handler: {\n      nextPage: handleNextPage,\n      prevPage: handlePrevPage,\n      currentPage: setPageNo,\n      perPage: setItemsPerPage\n    }\n  };\n};\n\nexport default usePagination;\n"]},"metadata":{},"sourceType":"module"}