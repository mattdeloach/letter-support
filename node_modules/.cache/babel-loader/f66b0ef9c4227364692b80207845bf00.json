{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/Dev/letter/letter-support/src/components/common/FalconPlyr.js\";\nimport React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport 'plyr/dist/plyr.css';\nimport Plyr from 'plyr';\n\nconst FalconPlyr = ({\n  type,\n  videoId\n}) => {\n  const plyrRef = useRef();\n  useEffect(() => {\n    new Plyr(plyrRef.current);\n  }, []);\n\n  switch (type) {\n    case 'youtube':\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"position-relative\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"plyr__video-embed\",\n        ref: plyrRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"iframe\", {\n        src: `https://www.youtube.com/embed/${videoId}?origin=https://plyr.io&amp;iv_load_policy=3&amp;modestbranding=1&amp;playsinline=1&amp;showinfo=0&amp;rel=0&amp;enablejsapi=1`,\n        allowFullScreen: true,\n        allow: \"autoplay\",\n        title: videoId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }\n      })));\n\n    case 'vimeo':\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"plyr__video-embed\",\n        ref: plyrRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"iframe\", {\n        src: `https://player.vimeo.com/video/${videoId}?loop=false&amp;byline=false&amp;portrait=false&amp;title=false&amp;speed=true&amp;transparent=0&amp;gesture=media`,\n        allowFullScreen: true,\n        allow: \"autoplay\",\n        title: videoId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }\n      }));\n\n    default:\n      return null;\n  }\n};\n\nFalconPlyr.propTypes = {\n  videoId: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(['youtube', 'vimeo']).isRequired\n};\nexport default FalconPlyr;","map":{"version":3,"sources":["/Users/matt/Documents/Dev/letter/letter-support/src/components/common/FalconPlyr.js"],"names":["React","useEffect","useRef","PropTypes","Plyr","FalconPlyr","type","videoId","plyrRef","current","propTypes","string","isRequired","oneOf"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,oBAAP;AACA,OAAOC,IAAP,MAAiB,MAAjB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAuB;AACxC,QAAMC,OAAO,GAAGN,MAAM,EAAtB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIG,IAAJ,CAASI,OAAO,CAACC,OAAjB;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,UAAQH,IAAR;AACE,SAAK,SAAL;AACE,0BACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAmC,QAAA,GAAG,EAAEE,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AACE,QAAA,GAAG,EAAG,iCAAgCD,OAAQ,gIADhD;AAEE,QAAA,eAAe,MAFjB;AAGE,QAAA,KAAK,EAAC,UAHR;AAIE,QAAA,KAAK,EAAEA,OAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF;;AAYF,SAAK,OAAL;AACE,0BACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAmC,QAAA,GAAG,EAAEC,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AACE,QAAA,GAAG,EAAG,kCAAiCD,OAAQ,oHADjD;AAEE,QAAA,eAAe,MAFjB;AAGE,QAAA,KAAK,EAAC,UAHR;AAIE,QAAA,KAAK,EAAEA,OAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;;AAUF;AACE,aAAO,IAAP;AA1BJ;AA4BD,CAnCD;;AAqCAF,UAAU,CAACK,SAAX,GAAuB;AACrBH,EAAAA,OAAO,EAAEJ,SAAS,CAACQ,MAAV,CAAiBC,UADL;AAErBN,EAAAA,IAAI,EAAEH,SAAS,CAACU,KAAV,CAAgB,CAAC,SAAD,EAAY,OAAZ,CAAhB,EAAsCD;AAFvB,CAAvB;AAKA,eAAeP,UAAf","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport 'plyr/dist/plyr.css';\nimport Plyr from 'plyr';\n\nconst FalconPlyr = ({ type, videoId }) => {\n  const plyrRef = useRef();\n\n  useEffect(() => {\n    new Plyr(plyrRef.current);\n  }, []);\n\n  switch (type) {\n    case 'youtube':\n      return (\n        <div className=\"position-relative\">\n          <div className=\"plyr__video-embed\" ref={plyrRef}>\n            <iframe\n              src={`https://www.youtube.com/embed/${videoId}?origin=https://plyr.io&amp;iv_load_policy=3&amp;modestbranding=1&amp;playsinline=1&amp;showinfo=0&amp;rel=0&amp;enablejsapi=1`}\n              allowFullScreen\n              allow=\"autoplay\"\n              title={videoId}\n            />\n          </div>\n        </div>\n      );\n    case 'vimeo':\n      return (\n        <div className=\"plyr__video-embed\" ref={plyrRef}>\n          <iframe\n            src={`https://player.vimeo.com/video/${videoId}?loop=false&amp;byline=false&amp;portrait=false&amp;title=false&amp;speed=true&amp;transparent=0&amp;gesture=media`}\n            allowFullScreen\n            allow=\"autoplay\"\n            title={videoId}\n          />\n        </div>\n      );\n    default:\n      return null;\n  }\n};\n\nFalconPlyr.propTypes = {\n  videoId: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(['youtube', 'vimeo']).isRequired\n};\n\nexport default FalconPlyr;\n"]},"metadata":{},"sourceType":"module"}