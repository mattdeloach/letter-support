{"ast":null,"code":"var _jsxFileName = \"/Users/greypro/Documents/Dev/letter/letter-support/src/layouts/DashboardLayout.js\";\nimport React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Switch } from 'react-router-dom';\nimport Dashboard from '../components/dashboard/Dashboard';\nimport DashboardAlt from '../components/dashboard-alt/DashboardAlt';\nimport NavbarTop from '../components/navbar/NavbarTop';\nimport NavbarVertical from '../components/navbar/NavbarVertical';\nimport Footer from '../components/footer/Footer';\nimport loadable from '@loadable/component';\nimport AppContext from '../context/Context';\nimport ProductProvider from '../components/e-commerce/ProductProvider';\nimport SidePanelModal from '../components/side-panel/SidePanelModal';\nimport { getPageName } from '../helpers/utils';\nconst DashboardRoutes = loadable(() => import('./DashboardRoutes'));\n\nconst DashboardLayout = ({\n  location\n}) => {\n  const {\n    isFluid,\n    isVertical,\n    navbarStyle\n  } = useContext(AppContext);\n  const isKanban = getPageName('kanban');\n  useEffect(() => {\n    DashboardRoutes.preload();\n  }, []);\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location.pathname]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: isFluid || isKanban ? 'container-fluid' : 'container',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, isVertical && /*#__PURE__*/React.createElement(NavbarVertical, {\n    isKanban: isKanban,\n    navbarStyle: navbarStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 22\n    }\n  }), /*#__PURE__*/React.createElement(ProductProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NavbarTop, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    exact: true,\n    component: Dashboard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/dashboard-alt\",\n    exact: true,\n    component: DashboardAlt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(DashboardRoutes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  })), !isKanban && /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(SidePanelModal, {\n    path: location.pathname,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  })));\n};\n\nDashboardLayout.propTypes = {\n  location: PropTypes.object.isRequired\n};\nexport default DashboardLayout;","map":{"version":3,"sources":["/Users/greypro/Documents/Dev/letter/letter-support/src/layouts/DashboardLayout.js"],"names":["React","useContext","useEffect","PropTypes","Route","Switch","Dashboard","DashboardAlt","NavbarTop","NavbarVertical","Footer","loadable","AppContext","ProductProvider","SidePanelModal","getPageName","DashboardRoutes","DashboardLayout","location","isFluid","isVertical","navbarStyle","isKanban","preload","window","scrollTo","pathname","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,cAAP,MAA2B,qCAA3B;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAOC,eAAP,MAA4B,0CAA5B;AACA,OAAOC,cAAP,MAA2B,yCAA3B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,eAAe,GAAGL,QAAQ,CAAC,MAAM,OAAO,mBAAP,CAAP,CAAhC;;AAEA,MAAMM,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACxC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,UAAX;AAAuBC,IAAAA;AAAvB,MAAuCpB,UAAU,CAACW,UAAD,CAAvD;AAEA,QAAMU,QAAQ,GAAGP,WAAW,CAAC,QAAD,CAA5B;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,eAAe,CAACO,OAAhB;AACD,GAFQ,EAEN,EAFM,CAAT;AAIArB,EAAAA,SAAS,CAAC,MAAM;AACdsB,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACD,GAFQ,EAEN,CAACP,QAAQ,CAACQ,QAAV,CAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAEP,OAAO,IAAIG,QAAX,GAAsB,iBAAtB,GAA0C,WAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,UAAU,iBAAI,oBAAC,cAAD;AAAgB,IAAA,QAAQ,EAAEE,QAA1B;AAAoC,IAAA,WAAW,EAAED,WAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADjB,eAEE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAgB,IAAA,KAAK,MAArB;AAAsB,IAAA,SAAS,EAAEf,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,gBAAZ;AAA6B,IAAA,KAAK,MAAlC;AAAmC,IAAA,SAAS,EAAEC,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAFF,EAOG,CAACe,QAAD,iBAAa,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPhB,CADF,eAUE,oBAAC,cAAD;AAAgB,IAAA,IAAI,EAAEJ,QAAQ,CAACQ,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CAFF,CADF;AAiBD,CA9BD;;AAgCAT,eAAe,CAACU,SAAhB,GAA4B;AAAET,EAAAA,QAAQ,EAAEf,SAAS,CAACyB,MAAV,CAAiBC;AAA7B,CAA5B;AAEA,eAAeZ,eAAf","sourcesContent":["import React, { useContext, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Dashboard from '../components/dashboard/Dashboard';\r\nimport DashboardAlt from '../components/dashboard-alt/DashboardAlt';\r\nimport NavbarTop from '../components/navbar/NavbarTop';\r\nimport NavbarVertical from '../components/navbar/NavbarVertical';\r\nimport Footer from '../components/footer/Footer';\r\nimport loadable from '@loadable/component';\r\nimport AppContext from '../context/Context';\r\nimport ProductProvider from '../components/e-commerce/ProductProvider';\r\nimport SidePanelModal from '../components/side-panel/SidePanelModal';\r\nimport { getPageName } from '../helpers/utils';\r\n\r\nconst DashboardRoutes = loadable(() => import('./DashboardRoutes'));\r\n\r\nconst DashboardLayout = ({ location }) => {\r\n  const { isFluid, isVertical, navbarStyle } = useContext(AppContext);\r\n\r\n  const isKanban = getPageName('kanban');\r\n\r\n  useEffect(() => {\r\n    DashboardRoutes.preload();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [location.pathname]);\r\n\r\n  return (\r\n    <div className={isFluid || isKanban ? 'container-fluid' : 'container'}>\r\n      {isVertical && <NavbarVertical isKanban={isKanban} navbarStyle={navbarStyle} />}\r\n      <ProductProvider>\r\n        <div className=\"content\">\r\n          <NavbarTop />\r\n          <Switch>\r\n            <Route path=\"/\" exact component={Dashboard} />\r\n            <Route path=\"/dashboard-alt\" exact component={DashboardAlt} />\r\n            <DashboardRoutes />\r\n          </Switch>\r\n          {!isKanban && <Footer />}\r\n        </div>\r\n        <SidePanelModal path={location.pathname} />\r\n      </ProductProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nDashboardLayout.propTypes = { location: PropTypes.object.isRequired };\r\n\r\nexport default DashboardLayout;\r\n"]},"metadata":{},"sourceType":"module"}