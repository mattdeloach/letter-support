{"ast":null,"code":"var _jsxFileName = \"/Users/greypro/Documents/Dev/letter/letter-support/src/components/plugins/ProgressBarJs.js\";\nimport React, { Fragment } from 'react';\nimport PageHeader from '../common/PageHeader';\nimport { Button, Card, CardBody } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Circle } from 'react-es6-progressbar.js';\nimport { getGrays, themeColors } from '../../helpers/utils';\nimport FalconEditor from '../common/FalconEditor';\nimport AppContext from '../../context/Context';\nconst progressbarCode = `function ProgressbarExample() {\n  const { isDark } = useContext(AppContext);\n  const grays = getGrays(isDark);\n  const options = {\n    color: themeColors.primary,\n    progress: 93,\n    strokeWidth: 5,\n    trailWidth: 5,\n    trailColor: grays['200'],\n    easing: 'easeInOut',\n    duration: 3000,\n    svgStyle: {\n      'stroke-linecap': 'round',\n      display: 'block',\n      width: '100%'\n    },\n    text: { autoStyleContainer: false },\n    // Set default step function for all animate calls\n    step: (state, circle) => {\n      const percentage = Math.round(circle.value() * 100);\n      circle.setText(\"<span class='value'>\"+percentage+\"<b>%</b></span>\");\n    }\n  };\n  \n  return <Circle\n    progress={0.89}\n    options={options}\n    container_class=\"progress-circle progress-circle-dashboard\"\n    container_style={{ width: '150px', height: '150px' }}\n  />\n}`;\n\nconst Progressbar = () => /*#__PURE__*/React.createElement(Fragment, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(PageHeader, {\n  title: \"Progressbar\",\n  description: \"With ProgressBar.js, it's easy to create responsive and stylish progress bars for the web. Animations perform well even on mobile devices. It provides a few built\\u2011in shapes like Line, Circle and SemiCircle but you can also create custom shaped progress bars with any vector graphic editor.\",\n  className: \"mb-3\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Button, {\n  tag: \"a\",\n  href: \"https://github.com/ronaldroe/react-es6-progressbar.js\",\n  target: \"_blank\",\n  color: \"link\",\n  size: \"sm\",\n  className: \"pl-0\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 7\n  }\n}, \"Progressbar Documentation\", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n  icon: \"chevron-right\",\n  className: \"ml-1 fs--2\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }\n}))), /*#__PURE__*/React.createElement(Card, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(CardBody, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(FalconEditor, {\n  code: progressbarCode,\n  scope: {\n    Circle,\n    themeColors,\n    getGrays,\n    AppContext\n  },\n  language: \"jsx\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }\n}))));\n\nexport default Progressbar;","map":{"version":3,"sources":["/Users/greypro/Documents/Dev/letter/letter-support/src/components/plugins/ProgressBarJs.js"],"names":["React","Fragment","PageHeader","Button","Card","CardBody","FontAwesomeIcon","Circle","getGrays","themeColors","FalconEditor","AppContext","progressbarCode","Progressbar"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,QAAvB,QAAuC,YAAvC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,MAAT,QAAuB,0BAAvB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,qBAAtC;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AAEA,MAAMC,eAAe,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAzB;;AAgCA,MAAMC,WAAW,GAAG,mBAClB,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,UAAD;AACE,EAAA,KAAK,EAAC,aADR;AAEE,EAAA,WAAW,EAAC,wSAFd;AAKE,EAAA,SAAS,EAAC,MALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAOE,oBAAC,MAAD;AACE,EAAA,GAAG,EAAC,GADN;AAEE,EAAA,IAAI,EAAC,uDAFP;AAGE,EAAA,MAAM,EAAC,QAHT;AAIE,EAAA,KAAK,EAAC,MAJR;AAKE,EAAA,IAAI,EAAC,IALP;AAME,EAAA,SAAS,EAAC,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CASE,oBAAC,eAAD;AAAiB,EAAA,IAAI,EAAC,eAAtB;AAAsC,EAAA,SAAS,EAAC,YAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EATF,CAPF,CADF,eAoBE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,YAAD;AAAc,EAAA,IAAI,EAAED,eAApB;AAAqC,EAAA,KAAK,EAAE;AAAEL,IAAAA,MAAF;AAAUE,IAAAA,WAAV;AAAuBD,IAAAA,QAAvB;AAAiCG,IAAAA;AAAjC,GAA5C;AAA2F,EAAA,QAAQ,EAAC,KAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,CApBF,CADF;;AA6BA,eAAeE,WAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport PageHeader from '../common/PageHeader';\nimport { Button, Card, CardBody } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Circle } from 'react-es6-progressbar.js';\nimport { getGrays, themeColors } from '../../helpers/utils';\nimport FalconEditor from '../common/FalconEditor';\nimport AppContext from '../../context/Context';\n\nconst progressbarCode = `function ProgressbarExample() {\n  const { isDark } = useContext(AppContext);\n  const grays = getGrays(isDark);\n  const options = {\n    color: themeColors.primary,\n    progress: 93,\n    strokeWidth: 5,\n    trailWidth: 5,\n    trailColor: grays['200'],\n    easing: 'easeInOut',\n    duration: 3000,\n    svgStyle: {\n      'stroke-linecap': 'round',\n      display: 'block',\n      width: '100%'\n    },\n    text: { autoStyleContainer: false },\n    // Set default step function for all animate calls\n    step: (state, circle) => {\n      const percentage = Math.round(circle.value() * 100);\n      circle.setText(\"<span class='value'>\"+percentage+\"<b>%</b></span>\");\n    }\n  };\n  \n  return <Circle\n    progress={0.89}\n    options={options}\n    container_class=\"progress-circle progress-circle-dashboard\"\n    container_style={{ width: '150px', height: '150px' }}\n  />\n}`;\n\nconst Progressbar = () => (\n  <Fragment>\n    <PageHeader\n      title=\"Progressbar\"\n      description=\"With ProgressBar.js, it's easy to create responsive and stylish progress bars for the web. Animations perform\n        well even on mobile devices. It provides a few builtâ€‘in shapes like Line, Circle and SemiCircle but you can also\n        create custom shaped progress bars with any vector graphic editor.\"\n      className=\"mb-3\"\n    >\n      <Button\n        tag=\"a\"\n        href=\"https://github.com/ronaldroe/react-es6-progressbar.js\"\n        target=\"_blank\"\n        color=\"link\"\n        size=\"sm\"\n        className=\"pl-0\"\n      >\n        Progressbar Documentation\n        <FontAwesomeIcon icon=\"chevron-right\" className=\"ml-1 fs--2\" />\n      </Button>\n    </PageHeader>\n    <Card>\n      <CardBody>\n        <FalconEditor code={progressbarCode} scope={{ Circle, themeColors, getGrays, AppContext }} language=\"jsx\" />\n      </CardBody>\n    </Card>\n  </Fragment>\n);\n\nexport default Progressbar;\n"]},"metadata":{},"sourceType":"module"}