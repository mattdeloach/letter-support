{"ast":null,"code":"var _jsxFileName = \"/Users/greypro/Documents/Dev/letter/letter-support/src/components/pricing/PricingCard.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Badge, Button } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { isIterableArray } from '../../helpers/utils';\n\nconst PricingRow = ({\n  children\n}) => /*#__PURE__*/React.createElement(\"li\", {\n  className: \"py-1\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n  icon: \"check\",\n  transform: \"shrink-2\",\n  className: \"text-success\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }\n}), \" \", children);\n\nPricingRow.propTypes = {\n  children: PropTypes.node\n};\n\nconst PricingCard = ({\n  type,\n  description,\n  price,\n  featureTitle,\n  features,\n  button,\n  bottomButtonText,\n  isYearly,\n  backgroundColor\n}) => {\n  const plan = isYearly ? 'year' : 'month';\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"h-100\",\n    style: {\n      backgroundColor\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"font-weight-normal my-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, type), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, description), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"font-weight-medium my-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"sup\", {\n    className: \"font-weight-normal fs-2 mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, \"$\"), price[plan], /*#__PURE__*/React.createElement(\"small\", {\n    className: \"fs--1 text-700\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, \"/ \", plan)), /*#__PURE__*/React.createElement(Button, {\n    tag: Link,\n    color: button.color,\n    to: \"/pages/billing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, button.text)), /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"border-bottom-0 m-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames('text-left px-sm-4 py-4', {\n      'px-3': backgroundColor\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"font-weight-medium fs-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, featureTitle), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-unstyled mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, isIterableArray(features) && features.map((feature, index) => /*#__PURE__*/React.createElement(PricingRow, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }, feature.title, ' ', feature.badge && /*#__PURE__*/React.createElement(Badge, {\n    color: feature.badge.color,\n    pill: true,\n    className: \"ml-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 19\n    }\n  }, feature.badge.text)))), /*#__PURE__*/React.createElement(Button, {\n    tag: Link,\n    color: \"link\",\n    to: \"#!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, bottomButtonText)));\n};\n\nPricingCard.propTypes = {\n  type: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  price: PropTypes.object.isRequired,\n  featureTitle: PropTypes.string.isRequired,\n  features: PropTypes.array.isRequired,\n  button: PropTypes.object.isRequired,\n  bottomButtonText: PropTypes.string.isRequired,\n  isYearly: PropTypes.bool.isRequired,\n  backgroundColor: PropTypes.string\n};\nexport default PricingCard;","map":{"version":3,"sources":["/Users/greypro/Documents/Dev/letter/letter-support/src/components/pricing/PricingCard.js"],"names":["React","PropTypes","classNames","Link","Badge","Button","FontAwesomeIcon","isIterableArray","PricingRow","children","propTypes","node","PricingCard","type","description","price","featureTitle","features","button","bottomButtonText","isYearly","backgroundColor","plan","color","text","map","feature","index","title","badge","string","isRequired","object","array","bool"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Badge, Button } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { isIterableArray } from '../../helpers/utils';\n\nconst PricingRow = ({ children }) => (\n  <li className=\"py-1\">\n    <FontAwesomeIcon icon=\"check\" transform=\"shrink-2\" className=\"text-success\" /> {children}\n  </li>\n);\n\nPricingRow.propTypes = { children: PropTypes.node };\n\nconst PricingCard = ({\n  type,\n  description,\n  price,\n  featureTitle,\n  features,\n  button,\n  bottomButtonText,\n  isYearly,\n  backgroundColor\n}) => {\n  const plan = isYearly ? 'year' : 'month';\n\n  return (\n    <div className=\"h-100\" style={{ backgroundColor }}>\n      <div className=\"text-center p-4\">\n        <h3 className=\"font-weight-normal my-0\">{type}</h3>\n        <p className=\"mt-3\">{description}</p>\n        <h2 className=\"font-weight-medium my-4\">\n          <sup className=\"font-weight-normal fs-2 mr-1\">$</sup>\n          {price[plan]}\n          <small className=\"fs--1 text-700\">/ {plan}</small>\n        </h2>\n        <Button tag={Link} color={button.color} to=\"/pages/billing\">\n          {button.text}\n        </Button>\n      </div>\n      <hr className=\"border-bottom-0 m-0\" />\n      <div className={classNames('text-left px-sm-4 py-4', { 'px-3': backgroundColor })}>\n        <h5 className=\"font-weight-medium fs-0\">{featureTitle}</h5>\n        <ul className=\"list-unstyled mt-3\">\n          {isIterableArray(features) &&\n            features.map((feature, index) => (\n              <PricingRow key={index}>\n                {feature.title}{' '}\n                {feature.badge && (\n                  <Badge color={feature.badge.color} pill className=\"ml-1\">\n                    {feature.badge.text}\n                  </Badge>\n                )}\n              </PricingRow>\n            ))}\n        </ul>\n        <Button tag={Link} color=\"link\" to=\"#!\">\n          {bottomButtonText}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nPricingCard.propTypes = {\n  type: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  price: PropTypes.object.isRequired,\n  featureTitle: PropTypes.string.isRequired,\n  features: PropTypes.array.isRequired,\n  button: PropTypes.object.isRequired,\n  bottomButtonText: PropTypes.string.isRequired,\n  isYearly: PropTypes.bool.isRequired,\n  backgroundColor: PropTypes.string\n};\n\nexport default PricingCard;\n"]},"metadata":{},"sourceType":"module"}