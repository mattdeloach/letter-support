{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/Dev/letter/letter-support/src/components/e-commerce/Products.js\";\nimport React, { Fragment, useState, useContext, useEffect } from 'react';\nimport { Button, Card, CardBody, Col, CustomInput, Form, InputGroup, Row } from 'reactstrap';\nimport Loader from '../common/Loader';\nimport useFakeFetch from '../../hooks/useFakeFetch';\nimport { isIterableArray } from '../../helpers/utils';\nimport Product from './product/Product';\nimport Flex from '../common/Flex';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport classNames from 'classnames';\nimport InputGroupAddon from 'reactstrap/es/InputGroupAddon';\nimport ProductFooter from './product/ProductFooter';\nimport usePagination from '../../hooks/usePagination';\nimport { ProductContext } from '../../context/Context';\n\nconst Products = ({\n  match,\n  history\n}) => {\n  // Context\n  const {\n    products,\n    setProductsLayout,\n    handleSort,\n    sortBy,\n    isAsc\n  } = useContext(ProductContext); // State\n\n  const [productIds, setProductIds] = useState([]); // Hook\n\n  const {\n    loading\n  } = useFakeFetch(products);\n  const {\n    data: paginationData,\n    meta: paginationMeta,\n    handler: paginationHandler\n  } = usePagination(productIds, 4);\n  const {\n    total,\n    itemsPerPage,\n    from,\n    to\n  } = paginationMeta;\n  const {\n    perPage\n  } = paginationHandler;\n  const {\n    productLayout\n  } = match.params;\n  const isList = productLayout === 'list';\n  const isGrid = productLayout === 'grid';\n  useEffect(() => {\n    setProductIds(products.map(product => product.id));\n  }, [products, setProductIds]);\n  useEffect(() => {\n    setProductsLayout(productLayout);\n  }, [setProductsLayout, productLayout]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"justify-content-between align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"auto\",\n    className: \"mb-2 mb-sm-0\",\n    tag: Flex,\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CustomInput, {\n    id: \"itemsPerPage\",\n    type: \"select\",\n    bsSize: \"sm\",\n    value: itemsPerPage,\n    onChange: ({\n      target\n    }) => perPage(Number(target.value)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, \"2\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \"4\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, \"6\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: total,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, \"All\")), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"mb-0 text-nowrap ml-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }, \"Showing \", from, \"-\", to, \" of \", total, \" Products\")), /*#__PURE__*/React.createElement(Col, {\n    sm: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    className: \"d-inline-block mr-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup, {\n    size: \"sm\",\n    tag: Flex,\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    className: \"mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }\n  }, \"Sort by:\"), /*#__PURE__*/React.createElement(CustomInput, {\n    type: \"select\",\n    defaultValue: sortBy,\n    id: \"ProductSortBy\",\n    onChange: ({\n      target\n    }) => handleSort(target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, \"Price\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"rating\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, \"Rating\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"review\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, \"Review\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, \"Off\")), /*#__PURE__*/React.createElement(InputGroupAddon, {\n    addonType: \"append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => handleSort(sortBy),\n    className: \"cursor-pointer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: classNames({\n      'sort-amount-up': isAsc,\n      'sort-amount-down': !isAsc\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 23\n    }\n  }))))), /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    className: \"cursor-pointer\",\n    icon: classNames({\n      'list-ul': isGrid,\n      th: isList\n    }),\n    onClick: () => history.push(`/e-commerce/products/${isList ? 'grid' : 'list'}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    className: classNames({\n      'p-0  overflow-hidden': isList,\n      'pb-0': isGrid\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(Row, {\n    noGutters: isList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, isIterableArray(products) && products.filter(product => paginationData.includes(product.id)).map((product, index) => /*#__PURE__*/React.createElement(Product, Object.assign({}, product, {\n    key: product.id,\n    index: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 44\n    }\n  }))))), /*#__PURE__*/React.createElement(ProductFooter, {\n    meta: paginationMeta,\n    handler: paginationHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Products;","map":{"version":3,"sources":["/Users/matt/Documents/Dev/letter/letter-support/src/components/e-commerce/Products.js"],"names":["React","Fragment","useState","useContext","useEffect","Button","Card","CardBody","Col","CustomInput","Form","InputGroup","Row","Loader","useFakeFetch","isIterableArray","Product","Flex","FontAwesomeIcon","classNames","InputGroupAddon","ProductFooter","usePagination","ProductContext","Products","match","history","products","setProductsLayout","handleSort","sortBy","isAsc","productIds","setProductIds","loading","data","paginationData","meta","paginationMeta","handler","paginationHandler","total","itemsPerPage","from","to","perPage","productLayout","params","isList","isGrid","map","product","id","target","Number","value","th","push","filter","includes","index"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useContext, useEffect } from 'react';\nimport { Button, Card, CardBody, Col, CustomInput, Form, InputGroup, Row } from 'reactstrap';\nimport Loader from '../common/Loader';\nimport useFakeFetch from '../../hooks/useFakeFetch';\nimport { isIterableArray } from '../../helpers/utils';\nimport Product from './product/Product';\nimport Flex from '../common/Flex';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport classNames from 'classnames';\nimport InputGroupAddon from 'reactstrap/es/InputGroupAddon';\nimport ProductFooter from './product/ProductFooter';\nimport usePagination from '../../hooks/usePagination';\nimport { ProductContext } from '../../context/Context';\n\nconst Products = ({ match, history }) => {\n  // Context\n  const { products, setProductsLayout, handleSort, sortBy, isAsc } = useContext(ProductContext);\n\n  // State\n  const [productIds, setProductIds] = useState([]);\n\n  // Hook\n  const { loading } = useFakeFetch(products);\n  const { data: paginationData, meta: paginationMeta, handler: paginationHandler } = usePagination(productIds, 4);\n  const { total, itemsPerPage, from, to } = paginationMeta;\n  const { perPage } = paginationHandler;\n\n  const { productLayout } = match.params;\n  const isList = productLayout === 'list';\n  const isGrid = productLayout === 'grid';\n\n  useEffect(() => {\n    setProductIds(products.map(product => product.id));\n  }, [products, setProductIds]);\n\n  useEffect(() => {\n    setProductsLayout(productLayout);\n  }, [setProductsLayout, productLayout]);\n\n  return (\n    <Fragment>\n      <Card className=\"mb-3\">\n        <CardBody>\n          <Row className=\"justify-content-between align-items-center\">\n            <Col sm=\"auto\" className=\"mb-2 mb-sm-0\" tag={Flex} align=\"center\">\n              <CustomInput\n                id=\"itemsPerPage\"\n                type=\"select\"\n                bsSize=\"sm\"\n                value={itemsPerPage}\n                onChange={({ target }) => perPage(Number(target.value))}\n              >\n                <option value={2}>2</option>\n                <option value={4}>4</option>\n                <option value={6}>6</option>\n                <option value={total}>All</option>\n              </CustomInput>\n              <h6 className=\"mb-0 text-nowrap ml-2\">\n                Showing {from}-{to} of {total} Products\n              </h6>\n            </Col>\n            <Col sm=\"auto\">\n              <Form className=\"d-inline-block mr-3\">\n                <InputGroup size=\"sm\" tag={Flex} align=\"center\">\n                  <small className=\"mr-1\">Sort by:</small>\n                  <CustomInput\n                    type=\"select\"\n                    defaultValue={sortBy}\n                    id=\"ProductSortBy\"\n                    onChange={({ target }) => handleSort(target.value)}\n                  >\n                    <option value=\"price\">Price</option>\n                    <option value=\"rating\">Rating</option>\n                    <option value=\"review\">Review</option>\n                    <option value=\"off\">Off</option>\n                  </CustomInput>\n                  <InputGroupAddon addonType=\"append\">\n                    <Button onClick={() => handleSort(sortBy)} className=\"cursor-pointer\">\n                      <FontAwesomeIcon icon={classNames({ 'sort-amount-up': isAsc, 'sort-amount-down': !isAsc })} />\n                    </Button>\n                  </InputGroupAddon>\n                </InputGroup>\n              </Form>\n\n              <FontAwesomeIcon\n                className=\"cursor-pointer\"\n                icon={classNames({ 'list-ul': isGrid, th: isList })}\n                onClick={() => history.push(`/e-commerce/products/${isList ? 'grid' : 'list'}`)}\n              />\n            </Col>\n          </Row>\n        </CardBody>\n      </Card>\n\n      <Card>\n        <CardBody className={classNames({ 'p-0  overflow-hidden': isList, 'pb-0': isGrid })}>\n          {loading ? (\n            <Loader />\n          ) : (\n            <Row noGutters={isList}>\n              {isIterableArray(products) &&\n                products\n                  .filter(product => paginationData.includes(product.id))\n                  .map((product, index) => <Product {...product} key={product.id} index={index} />)}\n            </Row>\n          )}\n        </CardBody>\n        <ProductFooter meta={paginationMeta} handler={paginationHandler} />\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default Products;\n"]},"metadata":{},"sourceType":"module"}