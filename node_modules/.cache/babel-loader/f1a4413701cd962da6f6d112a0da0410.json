{"ast":null,"code":"var _jsxFileName = \"/Users/greypro/Documents/Dev/letter/letter-support/src/hoc/withRedirect.js\";\nimport React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nconst withRedirect = OriginalComponent => {\n  const UpdatedComponent = props => {\n    // State\n    const [redirect, setRedirect] = useState(false);\n    const [redirectUrl, setRedirectUrl] = useState('/');\n\n    if (redirect) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: redirectUrl,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(OriginalComponent, Object.assign({\n      setRedirect: setRedirect,\n      setRedirectUrl: setRedirectUrl\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 12\n      }\n    }));\n  };\n\n  return UpdatedComponent;\n};\n\nexport default withRedirect;","map":{"version":3,"sources":["/Users/greypro/Documents/Dev/letter/letter-support/src/hoc/withRedirect.js"],"names":["React","useState","Redirect","withRedirect","OriginalComponent","UpdatedComponent","props","redirect","setRedirect","redirectUrl","setRedirectUrl"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AAEA,MAAMC,YAAY,GAAGC,iBAAiB,IAAI;AACxC,QAAMC,gBAAgB,GAAGC,KAAK,IAAI;AAChC;AACA,UAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,KAAD,CAAxC;AACA,UAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,GAAD,CAA9C;;AAEA,QAAIM,QAAJ,EAAc;AACZ,0BAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAEE,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAED,wBAAO,oBAAC,iBAAD;AAAmB,MAAA,WAAW,EAAED,WAAhC;AAA6C,MAAA,cAAc,EAAEE;AAA7D,OAAiFJ,KAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GAVD;;AAYA,SAAOD,gBAAP;AACD,CAdD;;AAgBA,eAAeF,YAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nconst withRedirect = OriginalComponent => {\n  const UpdatedComponent = props => {\n    // State\n    const [redirect, setRedirect] = useState(false);\n    const [redirectUrl, setRedirectUrl] = useState('/');\n\n    if (redirect) {\n      return <Redirect to={redirectUrl} />;\n    }\n\n    return <OriginalComponent setRedirect={setRedirect} setRedirectUrl={setRedirectUrl} {...props} />;\n  };\n\n  return UpdatedComponent;\n};\n\nexport default withRedirect;\n"]},"metadata":{},"sourceType":"module"}