{"ast":null,"code":"var _jsxFileName = \"/Users/greypro/Documents/Dev/letter/letter-support/src/components/common/FormGroupSelect.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { CustomInput, FormGroup, Label } from 'reactstrap';\nimport Loader from './Loader';\nimport { isIterableArray } from '../../helpers/utils';\nimport createMarkup from '../../helpers/createMarkup';\n\nconst FormGroupSelect = ({\n  loading,\n  id,\n  label,\n  options,\n  value,\n  onChange,\n  ...rest\n}) => {\n  return /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, label), loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(CustomInput, Object.assign({\n    type: \"select\",\n    id: id,\n    value: value,\n    onChange: onChange\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }), isIterableArray(options) && options.map(({\n    value,\n    label\n  }, index) => /*#__PURE__*/React.createElement(\"option\", {\n    value: value,\n    key: index,\n    dangerouslySetInnerHTML: createMarkup(label),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 15\n    }\n  }))));\n};\n\nFormGroupSelect.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  label: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  options: PropTypes.array.isRequired,\n  id: PropTypes.string.isRequired\n};\nexport default FormGroupSelect;","map":{"version":3,"sources":["/Users/greypro/Documents/Dev/letter/letter-support/src/components/common/FormGroupSelect.js"],"names":["React","PropTypes","CustomInput","FormGroup","Label","Loader","isIterableArray","createMarkup","FormGroupSelect","loading","id","label","options","value","onChange","rest","map","index","propTypes","bool","isRequired","string","func","array"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,KAAjC,QAA8C,YAA9C;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA,OAAOC,YAAP,MAAyB,4BAAzB;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,EAAX;AAAeC,EAAAA,KAAf;AAAsBC,EAAAA,OAAtB;AAA+BC,EAAAA,KAA/B;AAAsCC,EAAAA,QAAtC;AAAgD,KAAGC;AAAnD,CAAD,KAA+D;AACrF,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAEL,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBC,KAAjB,CADF,EAEGF,OAAO,gBACN,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,gBAGN,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAC,QAAlB;AAA2B,IAAA,EAAE,EAAEC,EAA/B;AAAmC,IAAA,KAAK,EAAEG,KAA1C;AAAiD,IAAA,QAAQ,EAAEC;AAA3D,KAAyEC,IAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGT,eAAe,CAACM,OAAD,CAAf,IACCA,OAAO,CAACI,GAAR,CAAY,CAAC;AAAEH,IAAAA,KAAF;AAASF,IAAAA;AAAT,GAAD,EAAmBM,KAAnB,kBACV;AAAQ,IAAA,KAAK,EAAEJ,KAAf;AAAsB,IAAA,GAAG,EAAEI,KAA3B;AAAkC,IAAA,uBAAuB,EAAEV,YAAY,CAACI,KAAD,CAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFJ,CALJ,CADF;AAeD,CAhBD;;AAkBAH,eAAe,CAACU,SAAhB,GAA4B;AAC1BT,EAAAA,OAAO,EAAER,SAAS,CAACkB,IAAV,CAAeC,UADE;AAE1BT,EAAAA,KAAK,EAAEV,SAAS,CAACoB,MAAV,CAAiBD,UAFE;AAG1BP,EAAAA,KAAK,EAAEZ,SAAS,CAACoB,MAAV,CAAiBD,UAHE;AAI1BN,EAAAA,QAAQ,EAAEb,SAAS,CAACqB,IAAV,CAAeF,UAJC;AAK1BR,EAAAA,OAAO,EAAEX,SAAS,CAACsB,KAAV,CAAgBH,UALC;AAM1BV,EAAAA,EAAE,EAAET,SAAS,CAACoB,MAAV,CAAiBD;AANK,CAA5B;AASA,eAAeZ,eAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CustomInput, FormGroup, Label } from 'reactstrap';\nimport Loader from './Loader';\nimport { isIterableArray } from '../../helpers/utils';\nimport createMarkup from '../../helpers/createMarkup';\n\nconst FormGroupSelect = ({ loading, id, label, options, value, onChange, ...rest }) => {\n  return (\n    <FormGroup>\n      <Label for={id}>{label}</Label>\n      {loading ? (\n        <Loader />\n      ) : (\n        <CustomInput type=\"select\" id={id} value={value} onChange={onChange} {...rest}>\n          {isIterableArray(options) &&\n            options.map(({ value, label }, index) => (\n              <option value={value} key={index} dangerouslySetInnerHTML={createMarkup(label)} />\n            ))}\n        </CustomInput>\n      )}\n    </FormGroup>\n  );\n};\n\nFormGroupSelect.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  label: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  options: PropTypes.array.isRequired,\n  id: PropTypes.string.isRequired\n};\n\nexport default FormGroupSelect;\n"]},"metadata":{},"sourceType":"module"}