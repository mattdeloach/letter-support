{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/Dev/letter/letter-support/src/components/agent/Accounts/LeafletMap.js\";\nimport React, { useContext } from 'react';\nimport { Map } from 'react-leaflet';\nimport MarkerCluster from './MarkerCluster';\nimport { markers } from '../../../data/dashboard/activeUsers';\nimport 'leaflet.tilelayer.colorfilter';\nimport L from 'leaflet';\nimport { useRef } from 'react';\nimport AppContext from '../../../context/Context';\nimport { useEffect } from 'react';\n\nconst LeafletMap = () => {\n  const {\n    isDark\n  } = useContext(AppContext);\n  const filter = isDark ? ['invert:98%', 'grayscale:69%', 'bright:89%', 'contrast:111%', 'hue:205deg', 'saturate:1000%'] : ['bright:101%', 'contrast:101%', 'hue:23deg', 'saturate:225%'];\n  let mapRef = useRef();\n  useEffect(() => {\n    if (mapRef.current) {\n      L.tileLayer.colorFilter('https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png', {\n        attribution: null,\n        transparent: true,\n        filter: filter\n      }).addTo(mapRef.current.leafletElement);\n    }\n  }, [filter]);\n  return /*#__PURE__*/React.createElement(Map, {\n    center: [10.737, 0],\n    zoom: 1,\n    minZoom: 1,\n    maxZoom: 18,\n    zoomSnap: 0.5,\n    className: \"h-100 bg-white\",\n    style: {\n      width: '100%',\n      minHeight: 300\n    },\n    ref: mapRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MarkerCluster, {\n    markers: markers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default LeafletMap;","map":{"version":3,"sources":["/Users/matt/Documents/Dev/letter/letter-support/src/components/agent/Accounts/LeafletMap.js"],"names":["React","useContext","Map","MarkerCluster","markers","L","useRef","AppContext","useEffect","LeafletMap","isDark","filter","mapRef","current","tileLayer","colorFilter","attribution","transparent","addTo","leafletElement","width","minHeight"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,GAAT,QAAoB,eAApB;AAEA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,OAAT,QAAwB,qCAAxB;AACA,OAAO,+BAAP;AACA,OAAOC,CAAP,MAAc,SAAd;AACA,SAASC,MAAT,QAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,SAAT,QAA0B,OAA1B;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAM;AAAEC,IAAAA;AAAF,MAAaT,UAAU,CAACM,UAAD,CAA7B;AACA,QAAMI,MAAM,GAAGD,MAAM,GACjB,CAAC,YAAD,EAAe,eAAf,EAAgC,YAAhC,EAA8C,eAA9C,EAA+D,YAA/D,EAA6E,gBAA7E,CADiB,GAEjB,CAAC,aAAD,EAAgB,eAAhB,EAAiC,WAAjC,EAA8C,eAA9C,CAFJ;AAIA,MAAIE,MAAM,GAAGN,MAAM,EAAnB;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACd,QAAII,MAAM,CAACC,OAAX,EAAoB;AAClBR,MAAAA,CAAC,CAACS,SAAF,CACGC,WADH,CACe,gEADf,EACiF;AAC7EC,QAAAA,WAAW,EAAE,IADgE;AAE7EC,QAAAA,WAAW,EAAE,IAFgE;AAG7EN,QAAAA,MAAM,EAAEA;AAHqE,OADjF,EAMGO,KANH,CAMSN,MAAM,CAACC,OAAP,CAAeM,cANxB;AAOD;AACF,GAVQ,EAUN,CAACR,MAAD,CAVM,CAAT;AAYA,sBACE,oBAAC,GAAD;AACE,IAAA,MAAM,EAAE,CAAC,MAAD,EAAS,CAAT,CADV;AAEE,IAAA,IAAI,EAAE,CAFR;AAGE,IAAA,OAAO,EAAE,CAHX;AAIE,IAAA,OAAO,EAAE,EAJX;AAKE,IAAA,QAAQ,EAAE,GALZ;AAME,IAAA,SAAS,EAAC,gBANZ;AAOE,IAAA,KAAK,EAAE;AAAES,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,SAAS,EAAE;AAA5B,KAPT;AAQE,IAAA,GAAG,EAAET,MARP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAUE,oBAAC,aAAD;AAAe,IAAA,OAAO,EAAER,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF;AAcD,CAlCD;;AAoCA,eAAeK,UAAf","sourcesContent":["import React, { useContext } from 'react';\r\nimport { Map } from 'react-leaflet';\r\n\r\nimport MarkerCluster from './MarkerCluster';\r\nimport { markers } from '../../../data/dashboard/activeUsers';\r\nimport 'leaflet.tilelayer.colorfilter';\r\nimport L from 'leaflet';\r\nimport { useRef } from 'react';\r\nimport AppContext from '../../../context/Context';\r\nimport { useEffect } from 'react';\r\n\r\nconst LeafletMap = () => {\r\n  const { isDark } = useContext(AppContext);\r\n  const filter = isDark\r\n    ? ['invert:98%', 'grayscale:69%', 'bright:89%', 'contrast:111%', 'hue:205deg', 'saturate:1000%']\r\n    : ['bright:101%', 'contrast:101%', 'hue:23deg', 'saturate:225%'];\r\n\r\n  let mapRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (mapRef.current) {\r\n      L.tileLayer\r\n        .colorFilter('https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png', {\r\n          attribution: null,\r\n          transparent: true,\r\n          filter: filter\r\n        })\r\n        .addTo(mapRef.current.leafletElement);\r\n    }\r\n  }, [filter]);\r\n\r\n  return (\r\n    <Map\r\n      center={[10.737, 0]}\r\n      zoom={1}\r\n      minZoom={1}\r\n      maxZoom={18}\r\n      zoomSnap={0.5}\r\n      className=\"h-100 bg-white\"\r\n      style={{ width: '100%', minHeight: 300 }}\r\n      ref={mapRef}\r\n    >\r\n      <MarkerCluster markers={markers} />\r\n    </Map>\r\n  );\r\n};\r\n\r\nexport default LeafletMap;\r\n"]},"metadata":{},"sourceType":"module"}