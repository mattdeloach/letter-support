{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/Dev/letter/letter-support/src/components/documentation/GettingStarted.js\";\nimport React, { Fragment } from 'react';\nimport { Card, CardBody, CardHeader, NavLink } from 'reactstrap';\nimport CodeHighlight from '../common/CodeHighlight';\nimport FalconCardHeader from '../common/FalconCardHeader';\nimport PageHeader from '../common/PageHeader';\n\nconst GettingStarted = () => /*#__PURE__*/React.createElement(Fragment, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(PageHeader, {\n  title: \"Getting Started\",\n  className: \"mb-3\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"p\", {\n  className: \"mt-2 mb-0\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 7\n  }\n}, \"Welcome to the ReactJS version of the\", ' ', /*#__PURE__*/React.createElement(\"a\", {\n  href: \"https://themes.getbootstrap.com/product/falcon-admin-dashboard-webapp-template/\",\n  target: \"_blank\",\n  rel: \"noopener noreferrer\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }\n}, \"original Falcon theme\"), \". This doc will guide you to understand how \", /*#__PURE__*/React.createElement(\"strong\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 53\n  }\n}, \"Falcon-React\"), \" theme is organized, basics of how to customize, and how to compile from the source code if you want.\")), /*#__PURE__*/React.createElement(Card, {\n  className: \"mb-3\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(FalconCardHeader, {\n  title: \"Running in Local environment\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(CardBody, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }\n}, \"This project is scaffolded using\", ' ', /*#__PURE__*/React.createElement(\"a\", {\n  href: \"https://create-react-app.dev\",\n  target: \"_blank\",\n  rel: \"noopener noreferrer\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 11\n  }\n}, \"Create React App\"), \".\"), /*#__PURE__*/React.createElement(\"ol\", {\n  className: \"mb-0 pl-card\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"li\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 11\n  }\n}, \"Install\", ' ', /*#__PURE__*/React.createElement(\"a\", {\n  href: \"https://nodejs.org\",\n  target: \"_blank\",\n  rel: \"noopener noreferrer\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 13\n  }\n}, \"Node.js\"), ' ', \"if you do not already have it installed on your machine.\"), /*#__PURE__*/React.createElement(\"li\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 11\n  }\n}, \"Open the \\u201Cfalcon-react\\u201D directory with your cmd or terminal\"), /*#__PURE__*/React.createElement(\"li\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 11\n  }\n}, \"Run \", /*#__PURE__*/React.createElement(\"code\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 17\n  }\n}, \"npm i\"), /*#__PURE__*/React.createElement(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 13\n  }\n}), \"This command will download all the necessary dependencies for falcon in the \", /*#__PURE__*/React.createElement(\"code\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 89\n  }\n}, \"node_modules\"), ' ', \"directory.\"), /*#__PURE__*/React.createElement(\"li\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 11\n  }\n}, \"Run \", /*#__PURE__*/React.createElement(\"code\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 17\n  }\n}, \"npm start\"), /*#__PURE__*/React.createElement(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 13\n  }\n}), \"A local web server will start at \", /*#__PURE__*/React.createElement(\"code\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 52\n  }\n}, \"http://localhost:3000\"), \".\", /*#__PURE__*/React.createElement(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 87\n  }\n}), \"We are using webpack and webpack-serve to automatically detect file changes. So, if you edit and save a file, your browser will automatically refresh and preview the change.\")))), /*#__PURE__*/React.createElement(Card, {\n  className: \"mb-3\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(FalconCardHeader, {\n  title: \"Creating a Production Build\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(CardBody, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }\n}, \"After you done your customization, when you are ready to build, Run \", /*#__PURE__*/React.createElement(\"code\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 79\n  }\n}, \"npm run build\"), \" command in your project directory to make the Production build.\"), /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }\n}, \"This will create an optimized production build by compililing, merging and minifying all the source files as necessary and put them in the \", /*#__PURE__*/React.createElement(\"code\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 41\n  }\n}, \"build/\"), \" folder.\"), /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }\n}, \"You can run \", /*#__PURE__*/React.createElement(\"code\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 23\n  }\n}, \"node server.js\"), \" to run the production build locally at\", ' ', /*#__PURE__*/React.createElement(\"code\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 11\n  }\n}, \"http://localhost:5000\"), \".\"))), /*#__PURE__*/React.createElement(Card, {\n  className: \"mb-3\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(FalconCardHeader, {\n  title: \"Compiling SCSS\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(CardBody, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }\n}, \"Run \", /*#__PURE__*/React.createElement(\"code\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 15\n  }\n}, \"npm run scss\"), \" command in your project directory to compile scss. This will compile all the SCSS files from \", /*#__PURE__*/React.createElement(\"code\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 27\n  }\n}, \"src/assets/scss/\"), \" directory and generate \", /*#__PURE__*/React.createElement(\"code\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 80\n  }\n}, \"theme.css\"), \",\", ' ', /*#__PURE__*/React.createElement(\"code\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 11\n  }\n}, \"theme.css.map\"), \", \", /*#__PURE__*/React.createElement(\"code\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 39\n  }\n}, \"theme-rtl.css\"), \", \", /*#__PURE__*/React.createElement(\"code\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 67\n  }\n}, \"theme-rtl.css.map\"), \" files in\", ' ', /*#__PURE__*/React.createElement(\"code\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 11\n  }\n}, \"public/css/\"), \" directory. Reload your browser to see the changes.\"), /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"strong\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 11\n  }\n}, \"You can also use the SCSS watcher to automatically compile and reload your browser every time you save your SCSS files by running the command\"), ' ', /*#__PURE__*/React.createElement(\"code\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 11\n  }\n}, \"npm run scss\"), /*#__PURE__*/React.createElement(\"strong\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 11\n  }\n}, \" in a separate terminal window while running\"), \" \", /*#__PURE__*/React.createElement(\"code\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 73\n  }\n}, \"npm start\"), ' ', /*#__PURE__*/React.createElement(\"strong\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 11\n  }\n}, \" in another.\")), /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }\n}, \"You can add your own SCSS and override the theme style in the \", /*#__PURE__*/React.createElement(\"code\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 73\n  }\n}, \"_user.scss\"), \" file.\"), /*#__PURE__*/React.createElement(\"p\", {\n  className: \"mb-0\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }\n}, \"To make broader changes to the design of the theme, such as changing the color scheme or font sizes, use\", ' ', /*#__PURE__*/React.createElement(\"code\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 11\n  }\n}, \"src/assets/scss/_user-variables.scss\"), \". Any variable from\", ' ', /*#__PURE__*/React.createElement(\"code\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 11\n  }\n}, \"node_modules/bootstrap/scss/_variables.scss\"), \" or \", /*#__PURE__*/React.createElement(\"code\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 71\n  }\n}, \"src/assets/scss/theme/_variables.scss\"), ' ', \"can be overridden with your own value.\"))), /*#__PURE__*/React.createElement(Card, {\n  className: \"mb-3\",\n  id: \"setting-config\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(CardHeader, {\n  className: \"bg-light\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(NavLink, {\n  href: \"#setting-config\",\n  className: \"font-weight-semi-bold fs-1  p-0 text-900\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }\n}, \"Settings configuration\")), /*#__PURE__*/React.createElement(CardBody, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }\n}, \"Control side panel settings from one place. Go to \", /*#__PURE__*/React.createElement(\"code\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 61\n  }\n}, \"src/config.js\"), \" file and set your setting configuration.\"), /*#__PURE__*/React.createElement(CodeHighlight, {\n  code: `export const version = '2.8.0';\nexport const navbarBreakPoint = 'xl'; // Vertical navbar breakpoint\nexport const topNavbarBreakpoint = 'lg';\nexport const settings = {\n  isFluid: false,\n  isRTL: false,\n  isDark: true,\n  isTopNav: true,\n  isVertical: false,\n  get isCombo() {\n    return this.isVertical && this.isTopNav;\n  },\n  showBurgerMenu: false, // controls showing vertical nav on mobile\n  currency: '$',\n  isNavbarVerticalCollapsed: false, // toggle vertical navbar collapse\n  navbarStyle: 'transparent'\n};\nexport default { version, navbarBreakPoint, topNavbarBreakpoint, settings };`,\n  language: \"jsx\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }\n}))), /*#__PURE__*/React.createElement(Card, {\n  className: \"mb-3\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(FalconCardHeader, {\n  title: \"Contents\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(CardBody, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(\"p\", {\n  className: \"mb-0\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 9\n  }\n}, \"Inside the zip-file you'll find the following directories and files. Both compiled and minified distrubution files, as well as the source files are included in the package.\"), /*#__PURE__*/React.createElement(\"code\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"pre\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 11\n  }\n}, `\ntheme/\n  ├── .browserslistrc\n  ├── .env\n  ├── .eslintrc.json\n  ├── .gitignore\n  ├── .gitlab-ci.yml\n  ├── .prettierrc\n  ├── gulpfile.js\n  ├── package.json\n  ├── package-lock.json\n  ├── README.md\n  ├── build/\n  ├── public/\n  │   ├── css/\n  │   ├── favicon.ico\n  │   ├── index.html\n  │   └── manifest.json\n  └── src/\n      ├── assets/\n      │   ├── img/\n      │   ├── scss/\n      │   └── video/\n      ├── components/\n      ├── contex/\n      ├── data/\n      ├── helpers/\n      ├── hoc/\n      ├── hooks/\n      ├── layouts/\n      ├── App.js\n      ├── config.js\n      ├── index.js\n      ├── Main.js\n      └── routes.js\n`)))));\n\nexport default GettingStarted;","map":{"version":3,"sources":["/Users/matt/Documents/Dev/letter/letter-support/src/components/documentation/GettingStarted.js"],"names":["React","Fragment","Card","CardBody","CardHeader","NavLink","CodeHighlight","FalconCardHeader","PageHeader","GettingStarted"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport { Card, CardBody, CardHeader, NavLink } from 'reactstrap';\r\nimport CodeHighlight from '../common/CodeHighlight';\r\nimport FalconCardHeader from '../common/FalconCardHeader';\r\nimport PageHeader from '../common/PageHeader';\r\n\r\nconst GettingStarted = () => (\r\n  <Fragment>\r\n    <PageHeader title=\"Getting Started\" className=\"mb-3\">\r\n      <p className=\"mt-2 mb-0\">\r\n        Welcome to the ReactJS version of the{' '}\r\n        <a\r\n          href=\"https://themes.getbootstrap.com/product/falcon-admin-dashboard-webapp-template/\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          original Falcon theme\r\n        </a>\r\n        . This doc will guide you to understand how <strong>Falcon-React</strong> theme is organized, basics of how to\r\n        customize, and how to compile from the source code if you want.\r\n      </p>\r\n    </PageHeader>\r\n\r\n    <Card className=\"mb-3\">\r\n      <FalconCardHeader title=\"Running in Local environment\" />\r\n      <CardBody>\r\n        <p>\r\n          This project is scaffolded using{' '}\r\n          <a href=\"https://create-react-app.dev\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n            Create React App\r\n          </a>\r\n          .\r\n        </p>\r\n        <ol className=\"mb-0 pl-card\">\r\n          <li>\r\n            Install{' '}\r\n            <a href=\"https://nodejs.org\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              Node.js\r\n            </a>{' '}\r\n            if you do not already have it installed on your machine.\r\n          </li>\r\n          <li>Open the “falcon-react” directory with your cmd or terminal</li>\r\n          <li>\r\n            Run <code>npm i</code>\r\n            <br />\r\n            This command will download all the necessary dependencies for falcon in the <code>node_modules</code>{' '}\r\n            directory.\r\n          </li>\r\n          <li>\r\n            Run <code>npm start</code>\r\n            <br />A local web server will start at <code>http://localhost:3000</code>.<br />\r\n            We are using webpack and webpack-serve to automatically detect file changes. So, if you edit and save a\r\n            file, your browser will automatically refresh and preview the change.\r\n          </li>\r\n        </ol>\r\n      </CardBody>\r\n    </Card>\r\n    <Card className=\"mb-3\">\r\n      <FalconCardHeader title=\"Creating a Production Build\" />\r\n      <CardBody>\r\n        <p>\r\n          After you done your customization, when you are ready to build, Run <code>npm run build</code> command in your\r\n          project directory to make the Production build.\r\n        </p>\r\n        <p>\r\n          This will create an optimized production build by compililing, merging and minifying all the source files as\r\n          necessary and put them in the <code>build/</code> folder.\r\n        </p>\r\n        <p>\r\n          You can run <code>node server.js</code> to run the production build locally at{' '}\r\n          <code>http://localhost:5000</code>.\r\n        </p>\r\n      </CardBody>\r\n    </Card>\r\n\r\n    <Card className=\"mb-3\">\r\n      <FalconCardHeader title=\"Compiling SCSS\" />\r\n      <CardBody>\r\n        <p>\r\n          Run <code>npm run scss</code> command in your project directory to compile scss. This will compile all the\r\n          SCSS files from <code>src/assets/scss/</code> directory and generate <code>theme.css</code>,{' '}\r\n          <code>theme.css.map</code>, <code>theme-rtl.css</code>, <code>theme-rtl.css.map</code> files in{' '}\r\n          <code>public/css/</code> directory. Reload your browser to see the changes.\r\n        </p>\r\n        <p>\r\n          <strong>\r\n            You can also use the SCSS watcher to automatically compile and reload your browser every time you save your\r\n            SCSS files by running the command\r\n          </strong>{' '}\r\n          <code>npm run scss</code>\r\n          <strong> in a separate terminal window while running</strong> <code>npm start</code>{' '}\r\n          <strong> in another.</strong>\r\n        </p>\r\n        <p>\r\n          You can add your own SCSS and override the theme style in the <code>_user.scss</code> file.\r\n        </p>\r\n        <p className=\"mb-0\">\r\n          To make broader changes to the design of the theme, such as changing the color scheme or font sizes, use{' '}\r\n          <code>src/assets/scss/_user-variables.scss</code>. Any variable from{' '}\r\n          <code>node_modules/bootstrap/scss/_variables.scss</code> or <code>src/assets/scss/theme/_variables.scss</code>{' '}\r\n          can be overridden with your own value.\r\n        </p>\r\n      </CardBody>\r\n    </Card>\r\n    <Card className=\"mb-3\" id=\"setting-config\">\r\n      <CardHeader className=\"bg-light\">\r\n        <NavLink href=\"#setting-config\" className=\"font-weight-semi-bold fs-1  p-0 text-900\">\r\n          Settings configuration\r\n        </NavLink>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <p>\r\n          Control side panel settings from one place. Go to <code>src/config.js</code> file and set your setting\r\n          configuration.\r\n        </p>\r\n        <CodeHighlight\r\n          code={`export const version = '2.8.0';\r\nexport const navbarBreakPoint = 'xl'; // Vertical navbar breakpoint\r\nexport const topNavbarBreakpoint = 'lg';\r\nexport const settings = {\r\n  isFluid: false,\r\n  isRTL: false,\r\n  isDark: true,\r\n  isTopNav: true,\r\n  isVertical: false,\r\n  get isCombo() {\r\n    return this.isVertical && this.isTopNav;\r\n  },\r\n  showBurgerMenu: false, // controls showing vertical nav on mobile\r\n  currency: '$',\r\n  isNavbarVerticalCollapsed: false, // toggle vertical navbar collapse\r\n  navbarStyle: 'transparent'\r\n};\r\nexport default { version, navbarBreakPoint, topNavbarBreakpoint, settings };`}\r\n          language=\"jsx\"\r\n        />\r\n      </CardBody>\r\n    </Card>\r\n    <Card className=\"mb-3\">\r\n      <FalconCardHeader title=\"Contents\" />\r\n      <CardBody>\r\n        <p className=\"mb-0\">\r\n          Inside the zip-file you'll find the following directories and files. Both compiled and minified distrubution\r\n          files, as well as the source files are included in the package.\r\n        </p>\r\n        <code>\r\n          <pre>\r\n            {`\r\ntheme/\r\n  ├── .browserslistrc\r\n  ├── .env\r\n  ├── .eslintrc.json\r\n  ├── .gitignore\r\n  ├── .gitlab-ci.yml\r\n  ├── .prettierrc\r\n  ├── gulpfile.js\r\n  ├── package.json\r\n  ├── package-lock.json\r\n  ├── README.md\r\n  ├── build/\r\n  ├── public/\r\n  │   ├── css/\r\n  │   ├── favicon.ico\r\n  │   ├── index.html\r\n  │   └── manifest.json\r\n  └── src/\r\n      ├── assets/\r\n      │   ├── img/\r\n      │   ├── scss/\r\n      │   └── video/\r\n      ├── components/\r\n      ├── contex/\r\n      ├── data/\r\n      ├── helpers/\r\n      ├── hoc/\r\n      ├── hooks/\r\n      ├── layouts/\r\n      ├── App.js\r\n      ├── config.js\r\n      ├── index.js\r\n      ├── Main.js\r\n      └── routes.js\r\n`}\r\n          </pre>\r\n        </code>\r\n      </CardBody>\r\n    </Card>\r\n  </Fragment>\r\n);\r\n\r\nexport default GettingStarted;\r\n"]},"metadata":{},"sourceType":"module"}