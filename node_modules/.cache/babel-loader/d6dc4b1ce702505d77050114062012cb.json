{"ast":null,"code":"var _jsxFileName = \"/Users/greypro/Documents/Dev/letter/letter-support/src/components/dashboard-alt/WeeklySales.js\";\nimport React, { Fragment, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Badge, Card, CardBody, Col, Row, UncontrolledTooltip } from 'reactstrap';\nimport FalconCardHeader from '../common/FalconCardHeader';\nimport Flex from '../common/Flex';\nimport ReactEchartsCore from 'echarts-for-react/lib/core';\nimport echarts from 'echarts/lib/echarts';\nimport { themeColors, getPosition, numberFormatter, getGrays } from '../../helpers/utils';\nimport 'echarts/lib/chart/bar';\nimport 'echarts/lib/component/tooltip';\nimport AppContext from '../../context/Context';\n\nconst getOption = (data, dataBackground, isDark) => {\n  const grays = getGrays(isDark);\n  return {\n    tooltip: {\n      trigger: 'axis',\n      padding: [7, 10],\n      formatter: '{b1}: {c1}',\n      backgroundColor: grays.white,\n      borderColor: grays['300'],\n      borderWidth: 1,\n      textStyle: {\n        color: themeColors.dark\n      },\n      transitionDuration: 0,\n\n      position(pos, params, dom, rect, size) {\n        return getPosition(pos, params, dom, rect, size);\n      }\n\n    },\n    xAxis: {\n      type: 'category',\n      data: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n      boundaryGap: false,\n      axisLine: {\n        show: false\n      },\n      axisLabel: {\n        show: false\n      },\n      axisTick: {\n        show: false\n      },\n      axisPointer: {\n        type: 'none'\n      }\n    },\n    yAxis: {\n      type: 'value',\n      splitLine: {\n        show: false\n      },\n      axisLine: {\n        show: false\n      },\n      axisLabel: {\n        show: false\n      },\n      axisTick: {\n        show: false\n      },\n      axisPointer: {\n        type: 'none'\n      }\n    },\n    series: [{\n      type: 'bar',\n      barWidth: '5px',\n      barGap: '-100%',\n      itemStyle: {\n        color: grays['200'],\n        barBorderRadius: 10\n      },\n      data: dataBackground,\n      animation: false,\n      emphasis: {\n        itemStyle: {\n          color: grays['200']\n        }\n      }\n    }, {\n      type: 'bar',\n      barWidth: '5px',\n      itemStyle: {\n        color: themeColors.primary,\n        barBorderRadius: 10\n      },\n      data: data,\n      emphasis: {\n        itemStyle: {\n          color: themeColors.primary\n        }\n      },\n      z: 10\n    }],\n    grid: {\n      right: 5,\n      left: 10,\n      top: 0,\n      bottom: 0\n    }\n  };\n};\n\nconst WeeklySales = ({\n  data\n}) => {\n  const {\n    currency,\n    isDark\n  } = useContext(AppContext);\n  const total = data.reduce((total, currentValue) => total + currentValue, 0); // Max value of data\n\n  const yMax = Math.max(...data);\n  const dataBackground = data.map(() => yMax);\n  return /*#__PURE__*/React.createElement(Card, {\n    className: \"h-md-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FalconCardHeader, {\n    className: \"pb-0\",\n    title: /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, \"Weekly Sales\", ' ', /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: ['far', 'question-circle'],\n      transform: \"shrink-1\",\n      className: \"text-400\",\n      id: \"weeklySalesTooltip\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(UncontrolledTooltip, {\n      placement: \"bottom\",\n      target: \"weeklySalesTooltip\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, \"Calculated according to last week's sales\")),\n    light: false,\n    titleTag: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardBody, {\n    tag: Flex,\n    align: \"end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"flex-grow-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fs-4 font-weight-normal text-sans-serif text-700 line-height-1 mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, currency, numberFormatter(total, 0)), /*#__PURE__*/React.createElement(Badge, {\n    pill: true,\n    color: \"soft-success\",\n    className: \"fs--2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, \"+3.5%\")), /*#__PURE__*/React.createElement(Col, {\n    xs: \"auto\",\n    className: \"pl-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ReactEchartsCore, {\n    echarts: echarts,\n    option: getOption(data, dataBackground, isDark),\n    style: {\n      width: '8.5rem',\n      height: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  })))));\n};\n\nWeeklySales.propTypes = {\n  data: PropTypes.array.isRequired\n};\nexport default WeeklySales;","map":{"version":3,"sources":["/Users/greypro/Documents/Dev/letter/letter-support/src/components/dashboard-alt/WeeklySales.js"],"names":["React","Fragment","useContext","PropTypes","FontAwesomeIcon","Badge","Card","CardBody","Col","Row","UncontrolledTooltip","FalconCardHeader","Flex","ReactEchartsCore","echarts","themeColors","getPosition","numberFormatter","getGrays","AppContext","getOption","data","dataBackground","isDark","grays","tooltip","trigger","padding","formatter","backgroundColor","white","borderColor","borderWidth","textStyle","color","dark","transitionDuration","position","pos","params","dom","rect","size","xAxis","type","boundaryGap","axisLine","show","axisLabel","axisTick","axisPointer","yAxis","splitLine","series","barWidth","barGap","itemStyle","barBorderRadius","animation","emphasis","primary","z","grid","right","left","top","bottom","WeeklySales","currency","total","reduce","currentValue","yMax","Math","max","map","width","height","propTypes","array","isRequired"],"mappings":"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","sourcesContent":["import React, { Fragment, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Badge, Card, CardBody, Col, Row, UncontrolledTooltip } from 'reactstrap';\nimport FalconCardHeader from '../common/FalconCardHeader';\nimport Flex from '../common/Flex';\nimport ReactEchartsCore from 'echarts-for-react/lib/core';\nimport echarts from 'echarts/lib/echarts';\nimport { themeColors, getPosition, numberFormatter, getGrays } from '../../helpers/utils';\n\nimport 'echarts/lib/chart/bar';\nimport 'echarts/lib/component/tooltip';\nimport AppContext from '../../context/Context';\n\nconst getOption = (data, dataBackground, isDark) => {\n  const grays = getGrays(isDark);\n  return {\n    tooltip: {\n      trigger: 'axis',\n      padding: [7, 10],\n      formatter: '{b1}: {c1}',\n      backgroundColor: grays.white,\n      borderColor: grays['300'],\n      borderWidth: 1,\n      textStyle: { color: themeColors.dark },\n      transitionDuration: 0,\n      position(pos, params, dom, rect, size) {\n        return getPosition(pos, params, dom, rect, size);\n      }\n    },\n    xAxis: {\n      type: 'category',\n      data: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n      boundaryGap: false,\n      axisLine: { show: false },\n      axisLabel: { show: false },\n      axisTick: { show: false },\n      axisPointer: { type: 'none' }\n    },\n    yAxis: {\n      type: 'value',\n      splitLine: { show: false },\n      axisLine: { show: false },\n      axisLabel: { show: false },\n      axisTick: { show: false },\n      axisPointer: { type: 'none' }\n    },\n    series: [\n      {\n        type: 'bar',\n        barWidth: '5px',\n        barGap: '-100%',\n        itemStyle: {\n          color: grays['200'],\n          barBorderRadius: 10\n        },\n        data: dataBackground,\n        animation: false,\n        emphasis: { itemStyle: { color: grays['200'] } }\n      },\n      {\n        type: 'bar',\n        barWidth: '5px',\n        itemStyle: {\n          color: themeColors.primary,\n          barBorderRadius: 10\n        },\n        data: data,\n        emphasis: { itemStyle: { color: themeColors.primary } },\n        z: 10\n      }\n    ],\n    grid: { right: 5, left: 10, top: 0, bottom: 0 }\n  };\n};\n\nconst WeeklySales = ({ data }) => {\n  const { currency, isDark } = useContext(AppContext);\n  const total = data.reduce((total, currentValue) => total + currentValue, 0);\n  // Max value of data\n  const yMax = Math.max(...data);\n  const dataBackground = data.map(() => yMax);\n\n  return (\n    <Card className=\"h-md-100\">\n      <FalconCardHeader\n        className=\"pb-0\"\n        title={\n          <Fragment>\n            Weekly Sales{' '}\n            <FontAwesomeIcon\n              icon={['far', 'question-circle']}\n              transform=\"shrink-1\"\n              className=\"text-400\"\n              id=\"weeklySalesTooltip\"\n            />\n            <UncontrolledTooltip placement=\"bottom\" target=\"weeklySalesTooltip\">\n              Calculated according to last week's sales\n            </UncontrolledTooltip>\n          </Fragment>\n        }\n        light={false}\n        titleTag=\"h6\"\n      />\n      <CardBody tag={Flex} align=\"end\">\n        <Row className=\"flex-grow-1\">\n          <Col>\n            <div className=\"fs-4 font-weight-normal text-sans-serif text-700 line-height-1 mb-1\">\n              {currency}\n              {numberFormatter(total, 0)}\n            </div>\n            <Badge pill color=\"soft-success\" className=\"fs--2\">\n              +3.5%\n            </Badge>\n          </Col>\n          <Col xs=\"auto\" className=\"pl-0\">\n            <ReactEchartsCore\n              echarts={echarts}\n              option={getOption(data, dataBackground, isDark)}\n              style={{ width: '8.5rem', height: '100%' }}\n            />\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  );\n};\n\nWeeklySales.propTypes = { data: PropTypes.array.isRequired };\n\nexport default WeeklySales;\n"]},"metadata":{},"sourceType":"module"}