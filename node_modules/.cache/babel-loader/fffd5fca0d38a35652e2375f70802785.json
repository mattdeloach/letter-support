{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/Dev/letter/letter-support/src/components/bootstrap-components/Cards.js\";\nimport React, { Fragment } from 'react';\nimport { Button, Card, CardBody, Col, Row } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport PageHeader from '../common/PageHeader';\nimport FalconCardHeader from '../common/FalconCardHeader';\nimport FalconEditor from '../common/FalconEditor';\nimport classNames from 'classnames';\nimport Notification from '../notification/Notification';\nimport generic1 from '../../assets/img/generic/1.jpg';\nimport generic3 from '../../assets/img/generic/3.jpg';\nimport generic6 from '../../assets/img/generic/6.jpg';\nimport generic7 from '../../assets/img/generic/7.jpg';\nimport generic8 from '../../assets/img/generic/8.jpg';\nimport generic10 from '../../assets/img/generic/10.jpg';\nimport generic11 from '../../assets/img/generic/11.jpg';\nimport generic12 from '../../assets/img/generic/12.jpg';\nimport team1 from '../../assets/img/team/1.jpg';\nconst cardStyleCode = `<CardColumns>\n{\n  ['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark'].map((color, index) => (\n    <Card body inverse color={color} className={classNames({'bg-dark' : color === 'light'}) } key={index}>\n      <CardTitle>{color} card title</CardTitle>\n      <CardText>\n        Some quick example text to build on the card \n        title and make up the bulk of the card's content.\n      </CardText>\n    </Card>\n    ))\n }\n</CardColumns>`;\nconst basicExampleCode = `<Card style={{width: '20rem'}}>\n  <CardImg src={generic1} top />\n  <CardBody>\n    <CardTitle tag=\"h5\">\n      Card title\n    </CardTitle>\n    <CardText tag=\"p\">\n      Some quick example text to build on the card\n      title and make up the bulk of the card's\n      content.\n    </CardText>\n    <Button color=\"primary\" size=\"sm\">\n      Go somewhere\n    </Button>\n  </CardBody>\n</Card>`;\nconst cardWithListCode = `<ListGroup>\n  <ListGroupItem>\n    Cras justo odio\n  </ListGroupItem>\n  <ListGroupItem>\n    Dapibus ac facilisis in\n  </ListGroupItem>\n  <ListGroupItem>\n    Morbi leo risus\n  </ListGroupItem>\n  <ListGroupItem>\n    Porta ac consectetur ac\n  </ListGroupItem>\n  <ListGroupItem>\n    Vestibulum at eros\n  </ListGroupItem>\n  <ListGroupItem>\n    Odio at morbi\n  </ListGroupItem>\n</ListGroup>`;\nconst cardWithImageCode = `<Card style={{width: '20rem'}}>\n  <CardImg src={generic3} top />\n  <CardBody>\n    <CardTitle tag=\"h5\">Card title</CardTitle>\n    <CardText tag=\"p\">\n      Some quick example text to build on the card title and make up the bulk of the card's content.\n    </CardText>\n  </CardBody>\n  <ListGroup flush>\n    <ListGroupItem>Cras justo odio</ListGroupItem>\n    <ListGroupItem>Dapibus ac facilisis in</ListGroupItem>\n    <ListGroupItem>Vestibulum at eros</ListGroupItem>\n    <ListGroupItem>\n      <a className=\"card-link\" href=\"#!\">\n        Card link\n      </a>\n      <a className=\"card-link\" href=\"#!\">\n        Another link\n      </a>\n    </ListGroupItem>\n  </ListGroup>\n</Card>`;\nconst cardGroupsCode = `<CardGroup>\n  <Card>\n    <CardImg top width=\"100%\" src={generic10} alt=\"Card image cap\" />\n    <CardBody>\n      <CardTitle tag=\"h5\">First card title</CardTitle>\n      <CardText>\n        This is a wider card with supporting text below as a natural lead-in to additional content. This\n        content is a little bit longer.\n      </CardText>\n      <p className=\"text-muted\">\n        <small className=\"text-muted\"> Last updated 45 mins ago</small>\n      </p>\n    </CardBody>\n  </Card>\n  <Card>\n    <CardImg top width=\"100%\" src={generic11} alt=\"Card image cap\" />\n    <CardBody>\n      <CardTitle tag=\"h5\">Second card title</CardTitle>\n      <CardText>This card has supporting text below as a natural lead-in to additional content.</CardText>\n      <p className=\"text-muted\">\n        <small className=\"text-muted\">Last updated an hour ago</small>\n      </p>\n    </CardBody>\n  </Card>\n  <Card>\n    <CardImg top width=\"100%\" src={generic12} alt=\"Card image cap\" />\n    <CardBody>\n      <CardTitle tag=\"h5\">Yet another card title</CardTitle>\n      <CardText>\n        This is a wider card with supporting text below as a natural lead-in to additional content. This card\n        has even longer content than the first to show that equal height action.\n      </CardText>\n      <p className=\"text-muted\">\n        <small className=\"text-muted\"> Last updated yesterday</small>\n      </p>\n    </CardBody>\n  </Card>\n</CardGroup>`;\nconst cardDeckCode = `<CardDeck>\n  <Card>\n    <CardImg top width=\"100%\" src={generic6} alt=\"Card image cap\" />\n    <CardBody>\n      <CardTitle tag=\"h5\">Awesome card title</CardTitle>\n      <CardText>\n        This is a wider card with supporting text below as a natural lead-in to additional content. This\n        content is a little bit longer.\n      </CardText>\n      <p className=\"text-muted\">\n        <small className=\"text-muted\"> Last updated 45 mins ago</small>\n      </p>\n    </CardBody>\n  </Card>\n  <Card>\n    <CardImg top width=\"100%\" src={generic7} alt=\"Card image cap\" />\n    <CardBody>\n      <CardTitle tag=\"h5\">Beautiful card title</CardTitle>\n      <CardText>This card has supporting text below as a natural lead-in to additional content.</CardText>\n      <p className=\"text-muted\">\n        <small className=\"text-muted\">Last updated an hour ago</small>\n      </p>\n    </CardBody>\n  </Card>\n  <Card>\n    <CardImg top width=\"100%\" src={generic8} alt=\"Card image cap\" className=\"rounded-0\" />\n    <CardBody>\n      <CardTitle tag=\"h5\">Gorgeous card title</CardTitle>\n      <CardText>\n        This is a wider card with supporting text below as a natural lead-in to additional content. This card\n        has even longer content than the first to show that equal height action.\n      </CardText>\n      <p className=\"text-muted\">\n        <small className=\"text-muted\"> Last updated yesterday</small>\n      </p>\n    </CardBody>\n  </Card>\n</CardDeck>`;\nconst backgroundCode = `<Card className=\"bg-dark text-white\" inverse style={{maxWidth: '30rem'}}>\n  <CardImg src={generic3} alt=\"Card image cap\" />\n  <CardImgOverlay className=\"d-flex align-items-end\">\n    <div>\n      <CardTitle tag=\"h5\" className=\"text-white\">\n        Card Title\n      </CardTitle>\n      <CardText>\n        Some quick example text to build on the card title and make up the bulk of the card's content.\n      </CardText>\n    </div>\n  </CardImgOverlay>\n</Card>`;\nconst propertiesCard = `Card.propTypes = {\n  // Pass in a Component to override default element\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  className: PropTypes.string\n}\n`;\nconst propertiesCardBody = `CardBody.propTypes = {\n  // Pass in a Component to override default element\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  className: PropTypes.string\n};`;\nconst propertiesCardColumns = `CardColumns.propTypes = {\n  // Pass in a Component to override default element\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  className: PropTypes.string\n};`;\nconst propertiesCardDeck = `CardDeck.propTypes = {\n  // Pass in a Component to override default element\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  className: PropTypes.string\n};`;\nconst propertiesCardFooter = `CardFooter.propTypes = {\n  // Pass in a Component to override default element\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  className: PropTypes.string\n};`;\nconst propertiesCardGroup = `CardGroup.propTypes = {\n  // Pass in a Component to override default element\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  className: PropTypes.string\n};`;\nconst propertiesCardHeader = `CardHeader.propTypes = {\n  // Pass in a Component to override default element\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  className: PropTypes.string\n};\n`;\nconst propertiesCardImg = `CardImg.propTypes = {\n  // Pass in a Component to override default element\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  // Use top or bottom to position image via \"card-img-top\" or \"card-img-bottom\"\n  top: PropTypes.bool,\n  bottom: PropTypes.bool\n};`;\nconst propertiesCardImgOverlay = `CardImgOverlay.propTypes = {\n  // Pass in a Component to override default element\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  className: PropTypes.string\n};`;\nconst propertiesCardLink = `CardLink.propTypes = {\n  // Pass in a Component to override default element\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  // ref will only get you a reference to the CardLink component, use innerRef to get a reference to the DOM element (for things like focus management).\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string])\n};`;\nconst propertiesCardSubtitle = `CardSubtitle.propTypes = {\n  // Pass in a Component to override default element\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  className: PropTypes.string\n};`;\nconst propertiesCardText = `CardText.propTypes = {\n  // Pass in a Component to override default element\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  className: PropTypes.string\n};`;\nconst propertiesCardTitle = `CardTitle.propTypes = {\n  // Pass in a Component to override default element\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  className: PropTypes.string\n};`;\n\nconst Cards = () => /*#__PURE__*/React.createElement(Fragment, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 265,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(PageHeader, {\n  title: \"Cards\",\n  description: \"Falcon\\u2019s cards provide a flexible and extensible content container with multiple variants and options.\",\n  className: \"mb-3\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 266,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Button, {\n  tag: \"a\",\n  href: \"https://reactstrap.github.io/components/card\",\n  target: \"_blank\",\n  color: \"link\",\n  size: \"sm\",\n  className: \"pl-0\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 271,\n    columnNumber: 7\n  }\n}, \"Cards on reactstrap\", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n  icon: \"chevron-right\",\n  className: \"ml-1 fs--2\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 280,\n    columnNumber: 9\n  }\n}))), /*#__PURE__*/React.createElement(Row, {\n  noGutters: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 283,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Col, {\n  xl: 6,\n  className: \"pr-xl-2\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 284,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(Card, {\n  className: \"mb-3\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 285,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(FalconCardHeader, {\n  title: \"Basic Example\",\n  light: false,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 286,\n    columnNumber: 11\n  }\n}), /*#__PURE__*/React.createElement(CardBody, {\n  className: \"bg-light\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 287,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(FalconEditor, {\n  code: basicExampleCode,\n  scope: {\n    generic1\n  },\n  language: \"jsx\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 288,\n    columnNumber: 13\n  }\n})))), /*#__PURE__*/React.createElement(Col, {\n  xl: 6,\n  className: \"pl-xl-2\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 292,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(Card, {\n  className: \"mb-3\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 293,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(FalconCardHeader, {\n  title: \"Card with list\",\n  light: false,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 294,\n    columnNumber: 11\n  }\n}), /*#__PURE__*/React.createElement(CardBody, {\n  className: \"bg-light\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 295,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(FalconEditor, {\n  code: cardWithListCode,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 296,\n    columnNumber: 13\n  }\n}))))), /*#__PURE__*/React.createElement(Card, {\n  className: \"mb-3\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 301,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(FalconCardHeader, {\n  title: \"Properties\",\n  light: false,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 302,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(CardBody, {\n  className: \"bg-light\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 303,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(FalconEditor, {\n  code: propertiesCard,\n  hidePreview: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 304,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(FalconEditor, {\n  code: propertiesCardBody,\n  hidePreview: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 305,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(FalconEditor, {\n  code: propertiesCardColumns,\n  hidePreview: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 306,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(FalconEditor, {\n  code: propertiesCardDeck,\n  hidePreview: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 307,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(FalconEditor, {\n  code: propertiesCardFooter,\n  hidePreview: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 308,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(FalconEditor, {\n  code: propertiesCardGroup,\n  hidePreview: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 309,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(FalconEditor, {\n  code: propertiesCardHeader,\n  hidePreview: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 310,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(FalconEditor, {\n  code: propertiesCardImg,\n  hidePreview: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 311,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(FalconEditor, {\n  code: propertiesCardImgOverlay,\n  hidePreview: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 312,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(FalconEditor, {\n  code: propertiesCardLink,\n  hidePreview: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 313,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(FalconEditor, {\n  code: propertiesCardSubtitle,\n  hidePreview: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 314,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(FalconEditor, {\n  code: propertiesCardText,\n  hidePreview: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 315,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(FalconEditor, {\n  code: propertiesCardTitle,\n  hidePreview: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 316,\n    columnNumber: 9\n  }\n}))), /*#__PURE__*/React.createElement(Card, {\n  className: \"mb-3\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 319,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(FalconCardHeader, {\n  title: \"Card with image\",\n  light: false,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 320,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(CardBody, {\n  className: \"bg-light\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 321,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(FalconEditor, {\n  code: cardWithImageCode,\n  scope: {\n    generic3\n  },\n  language: \"jsx\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 322,\n    columnNumber: 9\n  }\n}))), /*#__PURE__*/React.createElement(Card, {\n  className: \"mb-3\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 325,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(FalconCardHeader, {\n  title: \"Notification\",\n  light: false,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 326,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(CardBody, {\n  className: \"bg-light\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 327,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(Notification, {\n  avatar: {\n    src: team1,\n    size: 'xl'\n  },\n  time: \"Just Now\",\n  emoji: \"\\uD83D\\uDCE2\",\n  to: \"#!\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 328,\n    columnNumber: 9\n  }\n}, \"Announcing the winners of the The only book awards decided by you, the readers. Check out the champions and runners-up in all 21 categories now!\"))), /*#__PURE__*/React.createElement(Card, {\n  className: \"mb-3\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 342,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(FalconCardHeader, {\n  title: \"Background\",\n  light: false,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 343,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(CardBody, {\n  className: \"bg-light\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 344,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(FalconEditor, {\n  code: backgroundCode,\n  scope: {\n    generic3\n  },\n  language: \"jsx\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 345,\n    columnNumber: 9\n  }\n}))), /*#__PURE__*/React.createElement(Card, {\n  className: \"mb-3\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 348,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(FalconCardHeader, {\n  title: \"Cards Groups\",\n  light: false,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 349,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(CardBody, {\n  className: \"bg-light\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 350,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(FalconEditor, {\n  code: cardGroupsCode,\n  scope: {\n    generic10,\n    generic11,\n    generic12\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 351,\n    columnNumber: 9\n  }\n}))), /*#__PURE__*/React.createElement(Card, {\n  className: \"mb-3\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 354,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(FalconCardHeader, {\n  title: \"Cards Deck\",\n  light: false,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 355,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(CardBody, {\n  className: \"bg-light\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 356,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(FalconEditor, {\n  code: cardDeckCode,\n  scope: {\n    generic6,\n    generic7,\n    generic8\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 357,\n    columnNumber: 9\n  }\n}))), /*#__PURE__*/React.createElement(Card, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 360,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(FalconCardHeader, {\n  title: \"Card styles\",\n  light: false,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 361,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(CardBody, {\n  className: \"bg-light\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 362,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(FalconEditor, {\n  code: cardStyleCode,\n  scope: {\n    classNames\n  },\n  language: \"jsx\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 363,\n    columnNumber: 9\n  }\n}))));\n\nexport default Cards;","map":{"version":3,"sources":["/Users/matt/Documents/Dev/letter/letter-support/src/components/bootstrap-components/Cards.js"],"names":["React","Fragment","Button","Card","CardBody","Col","Row","FontAwesomeIcon","PageHeader","FalconCardHeader","FalconEditor","classNames","Notification","generic1","generic3","generic6","generic7","generic8","generic10","generic11","generic12","team1","cardStyleCode","basicExampleCode","cardWithListCode","cardWithImageCode","cardGroupsCode","cardDeckCode","backgroundCode","propertiesCard","propertiesCardBody","propertiesCardColumns","propertiesCardDeck","propertiesCardFooter","propertiesCardGroup","propertiesCardHeader","propertiesCardImg","propertiesCardImgOverlay","propertiesCardLink","propertiesCardSubtitle","propertiesCardText","propertiesCardTitle","Cards","src","size"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport { Button, Card, CardBody, Col, Row } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport PageHeader from '../common/PageHeader';\r\nimport FalconCardHeader from '../common/FalconCardHeader';\r\nimport FalconEditor from '../common/FalconEditor';\r\nimport classNames from 'classnames';\r\nimport Notification from '../notification/Notification';\r\n\r\nimport generic1 from '../../assets/img/generic/1.jpg';\r\nimport generic3 from '../../assets/img/generic/3.jpg';\r\nimport generic6 from '../../assets/img/generic/6.jpg';\r\nimport generic7 from '../../assets/img/generic/7.jpg';\r\nimport generic8 from '../../assets/img/generic/8.jpg';\r\nimport generic10 from '../../assets/img/generic/10.jpg';\r\nimport generic11 from '../../assets/img/generic/11.jpg';\r\nimport generic12 from '../../assets/img/generic/12.jpg';\r\nimport team1 from '../../assets/img/team/1.jpg';\r\n\r\nconst cardStyleCode = `<CardColumns>\r\n{\r\n  ['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark'].map((color, index) => (\r\n    <Card body inverse color={color} className={classNames({'bg-dark' : color === 'light'}) } key={index}>\r\n      <CardTitle>{color} card title</CardTitle>\r\n      <CardText>\r\n        Some quick example text to build on the card \r\n        title and make up the bulk of the card's content.\r\n      </CardText>\r\n    </Card>\r\n    ))\r\n }\r\n</CardColumns>`;\r\n\r\nconst basicExampleCode = `<Card style={{width: '20rem'}}>\r\n  <CardImg src={generic1} top />\r\n  <CardBody>\r\n    <CardTitle tag=\"h5\">\r\n      Card title\r\n    </CardTitle>\r\n    <CardText tag=\"p\">\r\n      Some quick example text to build on the card\r\n      title and make up the bulk of the card's\r\n      content.\r\n    </CardText>\r\n    <Button color=\"primary\" size=\"sm\">\r\n      Go somewhere\r\n    </Button>\r\n  </CardBody>\r\n</Card>`;\r\n\r\nconst cardWithListCode = `<ListGroup>\r\n  <ListGroupItem>\r\n    Cras justo odio\r\n  </ListGroupItem>\r\n  <ListGroupItem>\r\n    Dapibus ac facilisis in\r\n  </ListGroupItem>\r\n  <ListGroupItem>\r\n    Morbi leo risus\r\n  </ListGroupItem>\r\n  <ListGroupItem>\r\n    Porta ac consectetur ac\r\n  </ListGroupItem>\r\n  <ListGroupItem>\r\n    Vestibulum at eros\r\n  </ListGroupItem>\r\n  <ListGroupItem>\r\n    Odio at morbi\r\n  </ListGroupItem>\r\n</ListGroup>`;\r\n\r\nconst cardWithImageCode = `<Card style={{width: '20rem'}}>\r\n  <CardImg src={generic3} top />\r\n  <CardBody>\r\n    <CardTitle tag=\"h5\">Card title</CardTitle>\r\n    <CardText tag=\"p\">\r\n      Some quick example text to build on the card title and make up the bulk of the card's content.\r\n    </CardText>\r\n  </CardBody>\r\n  <ListGroup flush>\r\n    <ListGroupItem>Cras justo odio</ListGroupItem>\r\n    <ListGroupItem>Dapibus ac facilisis in</ListGroupItem>\r\n    <ListGroupItem>Vestibulum at eros</ListGroupItem>\r\n    <ListGroupItem>\r\n      <a className=\"card-link\" href=\"#!\">\r\n        Card link\r\n      </a>\r\n      <a className=\"card-link\" href=\"#!\">\r\n        Another link\r\n      </a>\r\n    </ListGroupItem>\r\n  </ListGroup>\r\n</Card>`;\r\n\r\nconst cardGroupsCode = `<CardGroup>\r\n  <Card>\r\n    <CardImg top width=\"100%\" src={generic10} alt=\"Card image cap\" />\r\n    <CardBody>\r\n      <CardTitle tag=\"h5\">First card title</CardTitle>\r\n      <CardText>\r\n        This is a wider card with supporting text below as a natural lead-in to additional content. This\r\n        content is a little bit longer.\r\n      </CardText>\r\n      <p className=\"text-muted\">\r\n        <small className=\"text-muted\"> Last updated 45 mins ago</small>\r\n      </p>\r\n    </CardBody>\r\n  </Card>\r\n  <Card>\r\n    <CardImg top width=\"100%\" src={generic11} alt=\"Card image cap\" />\r\n    <CardBody>\r\n      <CardTitle tag=\"h5\">Second card title</CardTitle>\r\n      <CardText>This card has supporting text below as a natural lead-in to additional content.</CardText>\r\n      <p className=\"text-muted\">\r\n        <small className=\"text-muted\">Last updated an hour ago</small>\r\n      </p>\r\n    </CardBody>\r\n  </Card>\r\n  <Card>\r\n    <CardImg top width=\"100%\" src={generic12} alt=\"Card image cap\" />\r\n    <CardBody>\r\n      <CardTitle tag=\"h5\">Yet another card title</CardTitle>\r\n      <CardText>\r\n        This is a wider card with supporting text below as a natural lead-in to additional content. This card\r\n        has even longer content than the first to show that equal height action.\r\n      </CardText>\r\n      <p className=\"text-muted\">\r\n        <small className=\"text-muted\"> Last updated yesterday</small>\r\n      </p>\r\n    </CardBody>\r\n  </Card>\r\n</CardGroup>`;\r\n\r\nconst cardDeckCode = `<CardDeck>\r\n  <Card>\r\n    <CardImg top width=\"100%\" src={generic6} alt=\"Card image cap\" />\r\n    <CardBody>\r\n      <CardTitle tag=\"h5\">Awesome card title</CardTitle>\r\n      <CardText>\r\n        This is a wider card with supporting text below as a natural lead-in to additional content. This\r\n        content is a little bit longer.\r\n      </CardText>\r\n      <p className=\"text-muted\">\r\n        <small className=\"text-muted\"> Last updated 45 mins ago</small>\r\n      </p>\r\n    </CardBody>\r\n  </Card>\r\n  <Card>\r\n    <CardImg top width=\"100%\" src={generic7} alt=\"Card image cap\" />\r\n    <CardBody>\r\n      <CardTitle tag=\"h5\">Beautiful card title</CardTitle>\r\n      <CardText>This card has supporting text below as a natural lead-in to additional content.</CardText>\r\n      <p className=\"text-muted\">\r\n        <small className=\"text-muted\">Last updated an hour ago</small>\r\n      </p>\r\n    </CardBody>\r\n  </Card>\r\n  <Card>\r\n    <CardImg top width=\"100%\" src={generic8} alt=\"Card image cap\" className=\"rounded-0\" />\r\n    <CardBody>\r\n      <CardTitle tag=\"h5\">Gorgeous card title</CardTitle>\r\n      <CardText>\r\n        This is a wider card with supporting text below as a natural lead-in to additional content. This card\r\n        has even longer content than the first to show that equal height action.\r\n      </CardText>\r\n      <p className=\"text-muted\">\r\n        <small className=\"text-muted\"> Last updated yesterday</small>\r\n      </p>\r\n    </CardBody>\r\n  </Card>\r\n</CardDeck>`;\r\n\r\nconst backgroundCode = `<Card className=\"bg-dark text-white\" inverse style={{maxWidth: '30rem'}}>\r\n  <CardImg src={generic3} alt=\"Card image cap\" />\r\n  <CardImgOverlay className=\"d-flex align-items-end\">\r\n    <div>\r\n      <CardTitle tag=\"h5\" className=\"text-white\">\r\n        Card Title\r\n      </CardTitle>\r\n      <CardText>\r\n        Some quick example text to build on the card title and make up the bulk of the card's content.\r\n      </CardText>\r\n    </div>\r\n  </CardImgOverlay>\r\n</Card>`;\r\n\r\nconst propertiesCard = `Card.propTypes = {\r\n  // Pass in a Component to override default element\r\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n  inverse: PropTypes.bool,\r\n  color: PropTypes.string,\r\n  body: PropTypes.bool,\r\n  className: PropTypes.string\r\n}\r\n`;\r\nconst propertiesCardBody = `CardBody.propTypes = {\r\n  // Pass in a Component to override default element\r\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n  className: PropTypes.string\r\n};`;\r\nconst propertiesCardColumns = `CardColumns.propTypes = {\r\n  // Pass in a Component to override default element\r\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n  className: PropTypes.string\r\n};`;\r\nconst propertiesCardDeck = `CardDeck.propTypes = {\r\n  // Pass in a Component to override default element\r\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n  className: PropTypes.string\r\n};`;\r\n\r\nconst propertiesCardFooter = `CardFooter.propTypes = {\r\n  // Pass in a Component to override default element\r\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n  className: PropTypes.string\r\n};`;\r\nconst propertiesCardGroup = `CardGroup.propTypes = {\r\n  // Pass in a Component to override default element\r\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n  className: PropTypes.string\r\n};`;\r\nconst propertiesCardHeader = `CardHeader.propTypes = {\r\n  // Pass in a Component to override default element\r\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n  className: PropTypes.string\r\n};\r\n`;\r\nconst propertiesCardImg = `CardImg.propTypes = {\r\n  // Pass in a Component to override default element\r\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n  className: PropTypes.string,\r\n  // Use top or bottom to position image via \"card-img-top\" or \"card-img-bottom\"\r\n  top: PropTypes.bool,\r\n  bottom: PropTypes.bool\r\n};`;\r\nconst propertiesCardImgOverlay = `CardImgOverlay.propTypes = {\r\n  // Pass in a Component to override default element\r\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n  className: PropTypes.string\r\n};`;\r\nconst propertiesCardLink = `CardLink.propTypes = {\r\n  // Pass in a Component to override default element\r\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n  className: PropTypes.string,\r\n  // ref will only get you a reference to the CardLink component, use innerRef to get a reference to the DOM element (for things like focus management).\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string])\r\n};`;\r\nconst propertiesCardSubtitle = `CardSubtitle.propTypes = {\r\n  // Pass in a Component to override default element\r\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n  className: PropTypes.string\r\n};`;\r\nconst propertiesCardText = `CardText.propTypes = {\r\n  // Pass in a Component to override default element\r\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n  className: PropTypes.string\r\n};`;\r\nconst propertiesCardTitle = `CardTitle.propTypes = {\r\n  // Pass in a Component to override default element\r\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n  className: PropTypes.string\r\n};`;\r\n\r\nconst Cards = () => (\r\n  <Fragment>\r\n    <PageHeader\r\n      title=\"Cards\"\r\n      description=\"Falcon’s cards provide a flexible and extensible content container with multiple variants and options.\"\r\n      className=\"mb-3\"\r\n    >\r\n      <Button\r\n        tag=\"a\"\r\n        href=\"https://reactstrap.github.io/components/card\"\r\n        target=\"_blank\"\r\n        color=\"link\"\r\n        size=\"sm\"\r\n        className=\"pl-0\"\r\n      >\r\n        Cards on reactstrap\r\n        <FontAwesomeIcon icon=\"chevron-right\" className=\"ml-1 fs--2\" />\r\n      </Button>\r\n    </PageHeader>\r\n    <Row noGutters>\r\n      <Col xl={6} className=\"pr-xl-2\">\r\n        <Card className=\"mb-3\">\r\n          <FalconCardHeader title=\"Basic Example\" light={false} />\r\n          <CardBody className=\"bg-light\">\r\n            <FalconEditor code={basicExampleCode} scope={{ generic1 }} language=\"jsx\" />\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n      <Col xl={6} className=\"pl-xl-2\">\r\n        <Card className=\"mb-3\">\r\n          <FalconCardHeader title=\"Card with list\" light={false} />\r\n          <CardBody className=\"bg-light\">\r\n            <FalconEditor code={cardWithListCode} />\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n    <Card className=\"mb-3\">\r\n      <FalconCardHeader title=\"Properties\" light={false} />\r\n      <CardBody className=\"bg-light\">\r\n        <FalconEditor code={propertiesCard} hidePreview />\r\n        <FalconEditor code={propertiesCardBody} hidePreview />\r\n        <FalconEditor code={propertiesCardColumns} hidePreview />\r\n        <FalconEditor code={propertiesCardDeck} hidePreview />\r\n        <FalconEditor code={propertiesCardFooter} hidePreview />\r\n        <FalconEditor code={propertiesCardGroup} hidePreview />\r\n        <FalconEditor code={propertiesCardHeader} hidePreview />\r\n        <FalconEditor code={propertiesCardImg} hidePreview />\r\n        <FalconEditor code={propertiesCardImgOverlay} hidePreview />\r\n        <FalconEditor code={propertiesCardLink} hidePreview />\r\n        <FalconEditor code={propertiesCardSubtitle} hidePreview />\r\n        <FalconEditor code={propertiesCardText} hidePreview />\r\n        <FalconEditor code={propertiesCardTitle} hidePreview />\r\n      </CardBody>\r\n    </Card>\r\n    <Card className=\"mb-3\">\r\n      <FalconCardHeader title=\"Card with image\" light={false} />\r\n      <CardBody className=\"bg-light\">\r\n        <FalconEditor code={cardWithImageCode} scope={{ generic3 }} language=\"jsx\" />\r\n      </CardBody>\r\n    </Card>\r\n    <Card className=\"mb-3\">\r\n      <FalconCardHeader title=\"Notification\" light={false} />\r\n      <CardBody className=\"bg-light\">\r\n        <Notification\r\n          avatar={{\r\n            src: team1,\r\n            size: 'xl'\r\n          }}\r\n          time=\"Just Now\"\r\n          emoji=\"📢\"\r\n          to=\"#!\"\r\n        >\r\n          Announcing the winners of the The only book awards decided by you, the readers. Check out the champions and\r\n          runners-up in all 21 categories now!\r\n        </Notification>\r\n      </CardBody>\r\n    </Card>\r\n    <Card className=\"mb-3\">\r\n      <FalconCardHeader title=\"Background\" light={false} />\r\n      <CardBody className=\"bg-light\">\r\n        <FalconEditor code={backgroundCode} scope={{ generic3 }} language=\"jsx\" />\r\n      </CardBody>\r\n    </Card>\r\n    <Card className=\"mb-3\">\r\n      <FalconCardHeader title=\"Cards Groups\" light={false} />\r\n      <CardBody className=\"bg-light\">\r\n        <FalconEditor code={cardGroupsCode} scope={{ generic10, generic11, generic12 }} />\r\n      </CardBody>\r\n    </Card>\r\n    <Card className=\"mb-3\">\r\n      <FalconCardHeader title=\"Cards Deck\" light={false} />\r\n      <CardBody className=\"bg-light\">\r\n        <FalconEditor code={cardDeckCode} scope={{ generic6, generic7, generic8 }} />\r\n      </CardBody>\r\n    </Card>\r\n    <Card>\r\n      <FalconCardHeader title=\"Card styles\" light={false} />\r\n      <CardBody className=\"bg-light\">\r\n        <FalconEditor code={cardStyleCode} scope={{ classNames }} language=\"jsx\" />\r\n      </CardBody>\r\n    </Card>\r\n  </Fragment>\r\n);\r\n\r\nexport default Cards;\r\n"]},"metadata":{},"sourceType":"module"}