{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/Dev/letter/letter-support/src/components/Settings/SettingsAccount.js\";\nimport React, { useState } from 'react';\nimport { Card, CardBody, CustomInput, UncontrolledTooltip } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport FalconCardHeader from '../common/FalconCardHeader';\n\nconst SettingsAccount = () => {\n  // State\n  const [viewProfile, setViewProfile] = useState('view-everyone');\n  const [tagSetting, setTagSetting] = useState('tag-off');\n  const [showFollowers, setShowFollowers] = useState(true);\n  const [showEmail, setShowEmail] = useState(true);\n  const [showExperiences, setShowExperiences] = useState(false);\n  const [showPhoneNumber, setShowPhoneNumber] = useState(true);\n  const [allowFollow, setAllowFollow] = useState(false);\n  return /*#__PURE__*/React.createElement(Card, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FalconCardHeader, {\n    title: \"Account Settings\",\n    light: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardBody, {\n    className: \"bg-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"font-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, \"Who can see your profile ?\", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: \"question-circle\",\n    className: \"fs--2 ml-1 text-primary\",\n    id: \"view-setting-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(UncontrolledTooltip, {\n    placement: \"top\",\n    target: \"view-setting-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, \"Only the group of selected people can see your profile\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pl-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CustomInput, {\n    name: \"view-setting\",\n    id: \"view-everyone\",\n    label: \"Everyone\",\n    value: \"view-everyone\",\n    onChange: ({\n      target\n    }) => setViewProfile(target.value),\n    checked: viewProfile === 'view-everyone',\n    type: \"radio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CustomInput, {\n    name: \"view-setting\",\n    id: \"view-my-followers\",\n    label: \"My Followers\",\n    value: \"view-my-followers\",\n    onChange: ({\n      target\n    }) => setViewProfile(target.value),\n    checked: viewProfile === 'view-my-followers',\n    type: \"radio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CustomInput, {\n    name: \"view-setting\",\n    id: \"view-only-me\",\n    label: \"Only Me\",\n    value: \"view-only-me\",\n    onChange: ({\n      target\n    }) => setViewProfile(target.value),\n    checked: viewProfile === 'view-only-me',\n    type: \"radio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"mt-2 font-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"Who can tag you ?\", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: \"question-circle\",\n    className: \"fs--2 ml-1 text-primary\",\n    id: \"tag-setting-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(UncontrolledTooltip, {\n    placement: \"top\",\n    target: \"tag-setting-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, \"Only the group of selected people can tag you\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pl-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CustomInput, {\n    name: \"tag-setting\",\n    id: \"tag-everyone\",\n    label: \"Everyone\",\n    value: \"everyone\",\n    onChange: ({\n      target\n    }) => setTagSetting(target.value),\n    checked: tagSetting === 'everyone',\n    type: \"radio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CustomInput, {\n    name: \"tag-setting\",\n    id: \"tag-group-members\",\n    label: \"Group Members\",\n    value: \"tag-group-members\",\n    onChange: ({\n      target\n    }) => setTagSetting(target.value),\n    checked: tagSetting === 'tag-group-members',\n    type: \"radio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CustomInput, {\n    name: \"tag-setting\",\n    id: \"tag-off\",\n    label: \"Off\",\n    value: \"tag-off\",\n    onChange: ({\n      target\n    }) => setTagSetting(target.value),\n    checked: tagSetting === 'tag-off',\n    type: \"radio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"border-dashed border-bottom-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CustomInput, {\n    id: \"show-followers\",\n    label: \"Allow users to show your followers\",\n    onChange: () => setShowFollowers(!showFollowers),\n    checked: showFollowers,\n    type: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CustomInput, {\n    id: \"show-email\",\n    label: \"Allow users to show your email\",\n    onChange: () => setShowEmail(!showEmail),\n    checked: showEmail,\n    type: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CustomInput, {\n    id: \"show-experiences\",\n    label: \"Allow users to show your experiences\",\n    onChange: () => setShowExperiences(!showExperiences),\n    checked: showExperiences,\n    type: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"border-dashed border-bottom-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CustomInput, {\n    id: \"show-phone-number\",\n    label: \"Make your phone number visible\",\n    onChange: () => setShowPhoneNumber(!showPhoneNumber),\n    checked: showPhoneNumber,\n    type: \"switch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CustomInput, {\n    id: \"allow-follow\",\n    label: \"Allow user to follow you\",\n    onChange: () => setAllowFollow(!allowFollow),\n    checked: allowFollow,\n    type: \"switch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default SettingsAccount;","map":{"version":3,"sources":["/Users/matt/Documents/Dev/letter/letter-support/src/components/Settings/SettingsAccount.js"],"names":["React","useState","Card","CardBody","CustomInput","UncontrolledTooltip","FontAwesomeIcon","FalconCardHeader","SettingsAccount","viewProfile","setViewProfile","tagSetting","setTagSetting","showFollowers","setShowFollowers","showEmail","setShowEmail","showExperiences","setShowExperiences","showPhoneNumber","setShowPhoneNumber","allowFollow","setAllowFollow","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Card, CardBody, CustomInput, UncontrolledTooltip } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport FalconCardHeader from '../common/FalconCardHeader';\n\nconst SettingsAccount = () => {\n  // State\n  const [viewProfile, setViewProfile] = useState('view-everyone');\n  const [tagSetting, setTagSetting] = useState('tag-off');\n  const [showFollowers, setShowFollowers] = useState(true);\n  const [showEmail, setShowEmail] = useState(true);\n  const [showExperiences, setShowExperiences] = useState(false);\n  const [showPhoneNumber, setShowPhoneNumber] = useState(true);\n  const [allowFollow, setAllowFollow] = useState(false);\n\n  return (\n    <Card className=\"mb-3\">\n      <FalconCardHeader title=\"Account Settings\" light={false} />\n      <CardBody className=\"bg-light\">\n        <h6 className=\"font-weight-bold\">\n          Who can see your profile ?\n          <FontAwesomeIcon icon=\"question-circle\" className=\"fs--2 ml-1 text-primary\" id=\"view-setting-tooltip\" />\n          <UncontrolledTooltip placement=\"top\" target=\"view-setting-tooltip\">\n            Only the group of selected people can see your profile\n          </UncontrolledTooltip>\n        </h6>\n        <div className=\"pl-2\">\n          <CustomInput\n            name=\"view-setting\"\n            id=\"view-everyone\"\n            label=\"Everyone\"\n            value=\"view-everyone\"\n            onChange={({ target }) => setViewProfile(target.value)}\n            checked={viewProfile === 'view-everyone'}\n            type=\"radio\"\n          />\n          <CustomInput\n            name=\"view-setting\"\n            id=\"view-my-followers\"\n            label=\"My Followers\"\n            value=\"view-my-followers\"\n            onChange={({ target }) => setViewProfile(target.value)}\n            checked={viewProfile === 'view-my-followers'}\n            type=\"radio\"\n          />\n          <CustomInput\n            name=\"view-setting\"\n            id=\"view-only-me\"\n            label=\"Only Me\"\n            value=\"view-only-me\"\n            onChange={({ target }) => setViewProfile(target.value)}\n            checked={viewProfile === 'view-only-me'}\n            type=\"radio\"\n          />\n        </div>\n        <h6 className=\"mt-2 font-weight-bold\">\n          Who can tag you ?\n          <FontAwesomeIcon icon=\"question-circle\" className=\"fs--2 ml-1 text-primary\" id=\"tag-setting-tooltip\" />\n          <UncontrolledTooltip placement=\"top\" target=\"tag-setting-tooltip\">\n            Only the group of selected people can tag you\n          </UncontrolledTooltip>\n        </h6>\n        <div className=\"pl-2\">\n          <CustomInput\n            name=\"tag-setting\"\n            id=\"tag-everyone\"\n            label=\"Everyone\"\n            value=\"everyone\"\n            onChange={({ target }) => setTagSetting(target.value)}\n            checked={tagSetting === 'everyone'}\n            type=\"radio\"\n          />\n          <CustomInput\n            name=\"tag-setting\"\n            id=\"tag-group-members\"\n            label=\"Group Members\"\n            value=\"tag-group-members\"\n            onChange={({ target }) => setTagSetting(target.value)}\n            checked={tagSetting === 'tag-group-members'}\n            type=\"radio\"\n          />\n          <CustomInput\n            name=\"tag-setting\"\n            id=\"tag-off\"\n            label=\"Off\"\n            value=\"tag-off\"\n            onChange={({ target }) => setTagSetting(target.value)}\n            checked={tagSetting === 'tag-off'}\n            type=\"radio\"\n          />\n        </div>\n        <hr className=\"border-dashed border-bottom-0\" />\n        <CustomInput\n          id=\"show-followers\"\n          label=\"Allow users to show your followers\"\n          onChange={() => setShowFollowers(!showFollowers)}\n          checked={showFollowers}\n          type=\"checkbox\"\n        />\n        <CustomInput\n          id=\"show-email\"\n          label=\"Allow users to show your email\"\n          onChange={() => setShowEmail(!showEmail)}\n          checked={showEmail}\n          type=\"checkbox\"\n        />\n        <CustomInput\n          id=\"show-experiences\"\n          label=\"Allow users to show your experiences\"\n          onChange={() => setShowExperiences(!showExperiences)}\n          checked={showExperiences}\n          type=\"checkbox\"\n        />\n        <hr className=\"border-dashed border-bottom-0\" />\n        <CustomInput\n          id=\"show-phone-number\"\n          label=\"Make your phone number visible\"\n          onChange={() => setShowPhoneNumber(!showPhoneNumber)}\n          checked={showPhoneNumber}\n          type=\"switch\"\n        />\n        <CustomInput\n          id=\"allow-follow\"\n          label=\"Allow user to follow you\"\n          onChange={() => setAllowFollow(!allowFollow)}\n          checked={allowFollow}\n          type=\"switch\"\n        />\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default SettingsAccount;\n"]},"metadata":{},"sourceType":"module"}