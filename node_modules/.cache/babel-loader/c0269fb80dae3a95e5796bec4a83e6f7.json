{"ast":null,"code":"var _jsxFileName = \"/Users/greypro/Documents/Dev/letter/letter-support/src/components/changelog/Logs.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardBody, CardHeader } from 'reactstrap';\nimport { isIterableArray } from '../../helpers/utils';\nimport changeLogs from './changeLogs';\nimport createMarkup from '../../helpers/createMarkup';\n\nconst Logs = ({\n  title,\n  publish,\n  logs,\n  children,\n  index: currentIndex\n}) => /*#__PURE__*/React.createElement(Card, {\n  className: \"mb-3\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(CardHeader, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"h5\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 7\n  }\n}, title), /*#__PURE__*/React.createElement(\"p\", {\n  className: \"mb-0\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 7\n  }\n}, publish)), /*#__PURE__*/React.createElement(CardBody, {\n  className: \"bg-light\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }\n}, children, isIterableArray(Object.keys(logs)) && Object.keys(logs).map((value, index) => {\n  return value === 'Migration' ? /*#__PURE__*/React.createElement(Fragment, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"fs-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 15\n    }\n  }, value, \":\", ' ', /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 19\n    }\n  }, \"v\", changeLogs[currentIndex + 1].title.split(' - ')[0])), ' ', \"to\", ' ', /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 19\n    }\n  }, \"v\", title.split(' - ')[0]))), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"pl-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 15\n    }\n  }, Object.entries(logs[value]).map((entry, i) => /*#__PURE__*/React.createElement(\"li\", {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }, entry[0]), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }, isIterableArray(entry[1]) && entry[1].map((mv, mi) => /*#__PURE__*/React.createElement(\"li\", {\n    dangerouslySetInnerHTML: {\n      __html: mv\n    },\n    key: entry[0] + i + mi,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 27\n    }\n  }))))))) : /*#__PURE__*/React.createElement(Fragment, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"fs-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }, value), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"pl-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, logs[value].map((v, i) => /*#__PURE__*/React.createElement(\"li\", {\n    key: i,\n    dangerouslySetInnerHTML: createMarkup(v),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 19\n    }\n  }))));\n})));\n\nLogs.propTypes = {\n  title: PropTypes.string.isRequired,\n  publish: PropTypes.string.isRequired,\n  logs: PropTypes.object.isRequired,\n  children: PropTypes.node\n};\nLogs.defaultProps = {\n  logs: {}\n};\nexport default Logs;","map":{"version":3,"sources":["/Users/greypro/Documents/Dev/letter/letter-support/src/components/changelog/Logs.js"],"names":["React","Fragment","PropTypes","Card","CardBody","CardHeader","isIterableArray","changeLogs","createMarkup","Logs","title","publish","logs","children","index","currentIndex","Object","keys","map","value","split","entries","entry","i","mv","mi","__html","v","propTypes","string","isRequired","object","node","defaultProps"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Card, CardBody, CardHeader } from 'reactstrap';\r\nimport { isIterableArray } from '../../helpers/utils';\r\nimport changeLogs from './changeLogs';\r\nimport createMarkup from '../../helpers/createMarkup';\r\n\r\nconst Logs = ({ title, publish, logs, children, index: currentIndex }) => (\r\n  <Card className=\"mb-3\">\r\n    <CardHeader>\r\n      <h5>{title}</h5>\r\n      <p className=\"mb-0\">{publish}</p>\r\n    </CardHeader>\r\n    <CardBody className=\"bg-light\">\r\n      {children}\r\n      {isIterableArray(Object.keys(logs)) &&\r\n        Object.keys(logs).map((value, index) => {\r\n          return value === 'Migration' ? (\r\n            <Fragment key={index}>\r\n              <h5 className=\"fs-0\">\r\n                {value}:{' '}\r\n                <strong>\r\n                  <code>v{changeLogs[currentIndex + 1].title.split(' - ')[0]}</code>\r\n                </strong>{' '}\r\n                to{' '}\r\n                <strong>\r\n                  <code>v{title.split(' - ')[0]}</code>\r\n                </strong>\r\n              </h5>\r\n              <ul className=\"pl-3\">\r\n                {Object.entries(logs[value]).map((entry, i) => (\r\n                  <li key={i}>\r\n                    <h6>{entry[0]}</h6>\r\n                    <ul>\r\n                      {isIterableArray(entry[1]) &&\r\n                        entry[1].map((mv, mi) => (\r\n                          <li dangerouslySetInnerHTML={{ __html: mv }} key={entry[0] + i + mi} />\r\n                        ))}\r\n                    </ul>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </Fragment>\r\n          ) : (\r\n            <Fragment key={index}>\r\n              <h5 className=\"fs-0\">{value}</h5>\r\n              <ul className=\"pl-3\">\r\n                {logs[value].map((v, i) => (\r\n                  <li key={i} dangerouslySetInnerHTML={createMarkup(v)} />\r\n                ))}\r\n              </ul>\r\n            </Fragment>\r\n          );\r\n        })}\r\n    </CardBody>\r\n  </Card>\r\n);\r\n\r\nLogs.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  publish: PropTypes.string.isRequired,\r\n  logs: PropTypes.object.isRequired,\r\n  children: PropTypes.node\r\n};\r\n\r\nLogs.defaultProps = { logs: {} };\r\n\r\nexport default Logs;\r\n"]},"metadata":{},"sourceType":"module"}