{"ast":null,"code":"var _jsxFileName = \"/Users/greypro/Documents/Dev/letter/letter-support/src/components/common/CodeHighlight.js\";\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport lightTheme from 'prism-react-renderer/themes/duotoneLight';\nimport darkTheme from 'prism-react-renderer/themes/dracula'; // eslint-disable-next-line import/no-extraneous-dependencies\n\nimport prettier from 'prettier/standalone'; // eslint-disable-next-line import/no-extraneous-dependencies\n\nimport parserHtml from 'prettier/parser-html';\nimport AppContext from '../../context/Context';\n\nconst getFormattedCode = (code, language) => prettier.format(code, {\n  parser: language,\n  plugins: [parserHtml]\n});\n\nconst CodeHighlight = ({\n  code,\n  language\n}) => {\n  const {\n    isDark\n  } = useContext(AppContext);\n  return /*#__PURE__*/React.createElement(Highlight, Object.assign({}, defaultProps, {\n    code: language === 'html' ? getFormattedCode(code, language) : code,\n    language: language,\n    theme: isDark ? darkTheme : lightTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }), ({\n    className,\n    style,\n    tokens,\n    getLineProps,\n    getTokenProps\n  }) => /*#__PURE__*/React.createElement(\"pre\", {\n    className: `${className}`,\n    style: { ...style,\n      padding: '10px',\n      borderRadius: '4px',\n      border: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, tokens.map((line, i) => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    key: i\n  }, getLineProps({\n    line,\n    key: i\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), line.map((token, key) => /*#__PURE__*/React.createElement(\"span\", Object.assign({\n    key: key\n  }, getTokenProps({\n    token,\n    key\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  })))))));\n};\n\nCodeHighlight.propTypes = {\n  code: PropTypes.string.isRequired,\n  language: PropTypes.string\n};\nCodeHighlight.defaultProps = {\n  language: 'html'\n};\nexport default CodeHighlight;","map":{"version":3,"sources":["/Users/greypro/Documents/Dev/letter/letter-support/src/components/common/CodeHighlight.js"],"names":["React","useContext","PropTypes","Highlight","defaultProps","lightTheme","darkTheme","prettier","parserHtml","AppContext","getFormattedCode","code","language","format","parser","plugins","CodeHighlight","isDark","className","style","tokens","getLineProps","getTokenProps","padding","borderRadius","border","map","line","i","key","token","propTypes","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,IAAoBC,YAApB,QAAwC,sBAAxC;AACA,OAAOC,UAAP,MAAuB,0CAAvB;AACA,OAAOC,SAAP,MAAsB,qCAAtB,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,qBAArB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AAEA,OAAOC,UAAP,MAAuB,uBAAvB;;AAEA,MAAMC,gBAAgB,GAAG,CAACC,IAAD,EAAOC,QAAP,KACvBL,QAAQ,CAACM,MAAT,CAAgBF,IAAhB,EAAsB;AACpBG,EAAAA,MAAM,EAAEF,QADY;AAEpBG,EAAAA,OAAO,EAAE,CAACP,UAAD;AAFW,CAAtB,CADF;;AAMA,MAAMQ,aAAa,GAAG,CAAC;AAAEL,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAwB;AAC5C,QAAM;AAAEK,IAAAA;AAAF,MAAahB,UAAU,CAACQ,UAAD,CAA7B;AACA,sBACE,oBAAC,SAAD,oBACML,YADN;AAEE,IAAA,IAAI,EAAEQ,QAAQ,KAAK,MAAb,GAAsBF,gBAAgB,CAACC,IAAD,EAAOC,QAAP,CAAtC,GAAyDD,IAFjE;AAGE,IAAA,QAAQ,EAAEC,QAHZ;AAIE,IAAA,KAAK,EAAEK,MAAM,GAAGX,SAAH,GAAeD,UAJ9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMG,CAAC;AAAEa,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA,MAApB;AAA4BC,IAAAA,YAA5B;AAA0CC,IAAAA;AAA1C,GAAD,kBACC;AACE,IAAA,SAAS,EAAG,GAAEJ,SAAU,EAD1B;AAEE,IAAA,KAAK,EAAE,EACL,GAAGC,KADE;AAELI,MAAAA,OAAO,EAAE,MAFJ;AAGLC,MAAAA,YAAY,EAAE,KAHT;AAILC,MAAAA,MAAM,EAAE;AAJH,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASGL,MAAM,CAACM,GAAP,CAAW,CAACC,IAAD,EAAOC,CAAP,kBACV;AAAK,IAAA,GAAG,EAAEA;AAAV,KAAiBP,YAAY,CAAC;AAAEM,IAAAA,IAAF;AAAQE,IAAAA,GAAG,EAAED;AAAb,GAAD,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGD,IAAI,CAACD,GAAL,CAAS,CAACI,KAAD,EAAQD,GAAR,kBACR;AAAM,IAAA,GAAG,EAAEA;AAAX,KAAoBP,aAAa,CAAC;AAAEQ,IAAAA,KAAF;AAASD,IAAAA;AAAT,GAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADD,CADH,CADD,CATH,CAPJ,CADF;AA4BD,CA9BD;;AA+BAb,aAAa,CAACe,SAAd,GAA0B;AACxBpB,EAAAA,IAAI,EAAET,SAAS,CAAC8B,MAAV,CAAiBC,UADC;AAExBrB,EAAAA,QAAQ,EAAEV,SAAS,CAAC8B;AAFI,CAA1B;AAKAhB,aAAa,CAACZ,YAAd,GAA6B;AAAEQ,EAAAA,QAAQ,EAAE;AAAZ,CAA7B;AAEA,eAAeI,aAAf","sourcesContent":["import React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Highlight, { defaultProps } from 'prism-react-renderer';\r\nimport lightTheme from 'prism-react-renderer/themes/duotoneLight';\r\nimport darkTheme from 'prism-react-renderer/themes/dracula';\r\n\r\n// eslint-disable-next-line import/no-extraneous-dependencies\r\nimport prettier from 'prettier/standalone';\r\n// eslint-disable-next-line import/no-extraneous-dependencies\r\nimport parserHtml from 'prettier/parser-html';\r\n\r\nimport AppContext from '../../context/Context';\r\n\r\nconst getFormattedCode = (code, language) =>\r\n  prettier.format(code, {\r\n    parser: language,\r\n    plugins: [parserHtml]\r\n  });\r\n\r\nconst CodeHighlight = ({ code, language }) => {\r\n  const { isDark } = useContext(AppContext);\r\n  return (\r\n    <Highlight\r\n      {...defaultProps}\r\n      code={language === 'html' ? getFormattedCode(code, language) : code}\r\n      language={language}\r\n      theme={isDark ? darkTheme : lightTheme}\r\n    >\r\n      {({ className, style, tokens, getLineProps, getTokenProps }) => (\r\n        <pre\r\n          className={`${className}`}\r\n          style={{\r\n            ...style,\r\n            padding: '10px',\r\n            borderRadius: '4px',\r\n            border: 0\r\n          }}\r\n        >\r\n          {tokens.map((line, i) => (\r\n            <div key={i} {...getLineProps({ line, key: i })}>\r\n              {line.map((token, key) => (\r\n                <span key={key} {...getTokenProps({ token, key })} />\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </pre>\r\n      )}\r\n    </Highlight>\r\n  );\r\n};\r\nCodeHighlight.propTypes = {\r\n  code: PropTypes.string.isRequired,\r\n  language: PropTypes.string\r\n};\r\n\r\nCodeHighlight.defaultProps = { language: 'html' };\r\n\r\nexport default CodeHighlight;\r\n"]},"metadata":{},"sourceType":"module"}