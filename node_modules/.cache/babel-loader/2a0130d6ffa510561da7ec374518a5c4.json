{"ast":null,"code":"var _jsxFileName = \"/Users/greypro/Documents/Dev/letter/letter-support/src/layouts/navbar/NotificationDropdown.js\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, Dropdown, DropdownMenu, DropdownToggle } from 'reactstrap';\nimport ListGroup from 'reactstrap/es/ListGroup';\nimport ListGroupItem from 'reactstrap/es/ListGroupItem';\nimport { rawEarlierNotifications, rawNewNotifications } from '../../data/notification/notification';\nimport { isIterableArray } from '../../helpers/utils';\nimport useFakeFetch from '../../hooks/useFakeFetch';\nimport FalconCardHeader from '../../components/common/FalconCardHeader';\nimport Notification from '../../components/notification/Notification';\n\nconst NotificationDropdown = () => {\n  // State\n  const {\n    data: newNotifications,\n    setData: setNewNotifications\n  } = useFakeFetch(rawNewNotifications);\n  const {\n    data: earlierNotifications,\n    setData: setEarlierNotifications\n  } = useFakeFetch(rawEarlierNotifications);\n  const [isOpen, setIsOpen] = useState(false);\n  const [isAllRead, setIsAllRead] = useState(false); // Handler\n\n  const handleToggle = e => {\n    e.preventDefault();\n    setIsOpen(!isOpen);\n  };\n\n  const markAsRead = e => {\n    e.preventDefault();\n    const updatedNewNotifications = newNotifications.map(notification => {\n      if (notification.hasOwnProperty('unread')) {\n        return { ...notification,\n          unread: false\n        };\n      }\n\n      return notification;\n    });\n    const updatedEarlierNotifications = earlierNotifications.map(notification => {\n      if (notification.hasOwnProperty('unread')) {\n        return { ...notification,\n          unread: false\n        };\n      }\n\n      setIsAllRead(true);\n      return notification;\n    });\n    setNewNotifications(updatedNewNotifications);\n    setEarlierNotifications(updatedEarlierNotifications);\n  };\n\n  return /*#__PURE__*/React.createElement(Dropdown, {\n    nav: true,\n    inNavbar: true,\n    isOpen: isOpen,\n    toggle: handleToggle,\n    onMouseOver: () => {\n      let windowWidth = window.innerWidth;\n      windowWidth > 992 && setIsOpen(true);\n    },\n    onMouseLeave: () => {\n      let windowWidth = window.innerWidth;\n      windowWidth > 992 && setIsOpen(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DropdownToggle, {\n    nav: true,\n    className: classNames('px-0', {\n      'notification-indicator notification-indicator-primary': !isAllRead\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: \"bell\",\n    transform: \"shrink-6\",\n    className: \"fs-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(DropdownMenu, {\n    right: true,\n    className: \"dropdown-menu-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"card-notification shadow-none\",\n    style: {\n      maxWidth: '20rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FalconCardHeader, {\n    className: \"card-header\",\n    title: \"Notifications\",\n    titleTag: \"h6\",\n    light: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: \"card-link font-weight-normal\",\n    to: \"#!\",\n    onClick: markAsRead,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, \"Mark all as read\")), /*#__PURE__*/React.createElement(ListGroup, {\n    flush: true,\n    className: \"font-weight-normal fs--1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-group-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, \"NEW\"), isIterableArray(newNotifications) && newNotifications.map((notification, index) => /*#__PURE__*/React.createElement(ListGroupItem, {\n    key: index,\n    onClick: handleToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Notification, Object.assign({}, notification, {\n    flush: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-group-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, \"EARLIER\"), isIterableArray(earlierNotifications) && earlierNotifications.map((notification, index) => /*#__PURE__*/React.createElement(ListGroupItem, {\n    key: index,\n    onClick: handleToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Notification, Object.assign({}, notification, {\n    flush: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 19\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-footer text-center border-top\",\n    onClick: handleToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: \"card-link d-block\",\n    to: \"/pages/notifications\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, \"View all\")))));\n};\n\nexport default NotificationDropdown;","map":{"version":3,"sources":["/Users/greypro/Documents/Dev/letter/letter-support/src/layouts/navbar/NotificationDropdown.js"],"names":["FontAwesomeIcon","classNames","React","useState","Link","Card","Dropdown","DropdownMenu","DropdownToggle","ListGroup","ListGroupItem","rawEarlierNotifications","rawNewNotifications","isIterableArray","useFakeFetch","FalconCardHeader","Notification","NotificationDropdown","data","newNotifications","setData","setNewNotifications","earlierNotifications","setEarlierNotifications","isOpen","setIsOpen","isAllRead","setIsAllRead","handleToggle","e","preventDefault","markAsRead","updatedNewNotifications","map","notification","hasOwnProperty","unread","updatedEarlierNotifications","windowWidth","window","innerWidth","maxWidth","index"],"mappings":"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","sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport classNames from 'classnames';\r\nimport React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Dropdown, DropdownMenu, DropdownToggle } from 'reactstrap';\r\nimport ListGroup from 'reactstrap/es/ListGroup';\r\nimport ListGroupItem from 'reactstrap/es/ListGroupItem';\r\nimport { rawEarlierNotifications, rawNewNotifications } from '../../data/notification/notification';\r\nimport { isIterableArray } from '../../helpers/utils';\r\nimport useFakeFetch from '../../hooks/useFakeFetch';\r\nimport FalconCardHeader from '../../components/common/FalconCardHeader';\r\nimport Notification from '../../components/notification/Notification';\r\n\r\nconst NotificationDropdown = () => {\r\n  // State\r\n  const { data: newNotifications, setData: setNewNotifications } = useFakeFetch(rawNewNotifications);\r\n  const { data: earlierNotifications, setData: setEarlierNotifications } = useFakeFetch(rawEarlierNotifications);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isAllRead, setIsAllRead] = useState(false);\r\n\r\n  // Handler\r\n  const handleToggle = e => {\r\n    e.preventDefault();\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const markAsRead = e => {\r\n    e.preventDefault();\r\n    const updatedNewNotifications = newNotifications.map(notification => {\r\n      if (notification.hasOwnProperty('unread')) {\r\n        return {\r\n          ...notification,\r\n          unread: false\r\n        };\r\n      }\r\n      return notification;\r\n    });\r\n    const updatedEarlierNotifications = earlierNotifications.map(notification => {\r\n      if (notification.hasOwnProperty('unread')) {\r\n        return {\r\n          ...notification,\r\n          unread: false\r\n        };\r\n      }\r\n      setIsAllRead(true);\r\n      return notification;\r\n    });\r\n\r\n    setNewNotifications(updatedNewNotifications);\r\n    setEarlierNotifications(updatedEarlierNotifications);\r\n  };\r\n\r\n  return (\r\n    <Dropdown\r\n      nav\r\n      inNavbar\r\n      isOpen={isOpen}\r\n      toggle={handleToggle}\r\n      onMouseOver={() => {\r\n        let windowWidth = window.innerWidth;\r\n        windowWidth > 992 && setIsOpen(true);\r\n      }}\r\n      onMouseLeave={() => {\r\n        let windowWidth = window.innerWidth;\r\n        windowWidth > 992 && setIsOpen(false);\r\n      }}\r\n    >\r\n      <DropdownToggle\r\n        nav\r\n        className={classNames('px-0', {\r\n          'notification-indicator notification-indicator-primary': !isAllRead\r\n        })}\r\n      >\r\n        <FontAwesomeIcon icon=\"bell\" transform=\"shrink-6\" className=\"fs-4\" />\r\n      </DropdownToggle>\r\n      <DropdownMenu right className=\"dropdown-menu-card\">\r\n        <Card className=\"card-notification shadow-none\" style={{ maxWidth: '20rem' }}>\r\n          <FalconCardHeader className=\"card-header\" title=\"Notifications\" titleTag=\"h6\" light={false}>\r\n            <Link className=\"card-link font-weight-normal\" to=\"#!\" onClick={markAsRead}>\r\n              Mark all as read\r\n            </Link>\r\n          </FalconCardHeader>\r\n          <ListGroup flush className=\"font-weight-normal fs--1\">\r\n            <div className=\"list-group-title\">NEW</div>\r\n            {isIterableArray(newNotifications) &&\r\n              newNotifications.map((notification, index) => (\r\n                <ListGroupItem key={index} onClick={handleToggle}>\r\n                  <Notification {...notification} flush />\r\n                </ListGroupItem>\r\n              ))}\r\n            <div className=\"list-group-title\">EARLIER</div>\r\n            {isIterableArray(earlierNotifications) &&\r\n              earlierNotifications.map((notification, index) => (\r\n                <ListGroupItem key={index} onClick={handleToggle}>\r\n                  <Notification {...notification} flush />\r\n                </ListGroupItem>\r\n              ))}\r\n          </ListGroup>\r\n          <div className=\"card-footer text-center border-top\" onClick={handleToggle}>\r\n            <Link className=\"card-link d-block\" to=\"/pages/notifications\">\r\n              View all\r\n            </Link>\r\n          </div>\r\n        </Card>\r\n      </DropdownMenu>\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nexport default NotificationDropdown;\r\n"]},"metadata":{},"sourceType":"module"}