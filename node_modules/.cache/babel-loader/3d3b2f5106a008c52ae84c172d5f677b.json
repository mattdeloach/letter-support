{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/Dev/letter/letter-support/src/components/auth/wizard/AdvanceUserForm.js\";\nimport React, { Fragment, useState, useContext } from 'react';\nimport WizardInput from './WizardInput';\nimport { CustomInput, Media } from 'reactstrap';\nimport FalconDropzone from '../../common/FalconDropzone';\nimport avatarImg from '../../../assets/img/team/avatar.png';\nimport { isIterableArray } from '../../../helpers/utils';\nimport Avatar from '../../common/Avatar';\nimport cloudUpload from \"../../../assets/img/icons/cloud-upload.svg\";\nimport { AuthWizardContext } from '../../../context/Context';\n\nconst AdvanceUserForm = ({\n  register,\n  errors\n}) => {\n  var _avatar$, _avatar$2;\n\n  const {\n    user\n  } = useContext(AuthWizardContext);\n  const [avatar, setAvatar] = useState([...(user.avater ? user.avater : []), {\n    src: avatarImg\n  }]);\n  const {\n    handleInputChange\n  } = useContext(AuthWizardContext);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    className: \"flex-center pb-3 d-block d-md-flex text-center mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    size: \"4xl\",\n    className: \"mb-2\",\n    src: isIterableArray(avatar) ? ((_avatar$ = avatar[0]) === null || _avatar$ === void 0 ? void 0 : _avatar$.base64) || ((_avatar$2 = avatar[0]) === null || _avatar$2 === void 0 ? void 0 : _avatar$2.src) : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Media, {\n    body: true,\n    className: \"ml-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FalconDropzone, {\n    files: avatar,\n    onChange: files => {\n      setAvatar(files);\n      handleInputChange({\n        name: 'avater',\n        value: files\n      });\n    },\n    multiple: false,\n    accept: \"image/*\",\n    placeholder: /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Media, {\n      className: \" fs-0 mx-auto d-inline-flex align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: cloudUpload,\n      alt: \"\",\n      width: 25,\n      className: \"mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Media, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"fs-0 mb-0 text-700\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }\n    }, \"Upload your profile picture\"))), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mb-0 w-75 mx-auto text-500\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, \"Upload a 300x300 jpg image with a maximum size of 400KB\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(WizardInput, {\n    type: \"select\",\n    label: \"Gender\",\n    placeholder: \"Select your gender\",\n    tag: CustomInput,\n    name: \"selectGender\",\n    id: \"selectGender\",\n    onChange: ({\n      target\n    }) => {\n      handleInputChange(target);\n    },\n    innerRef: register({\n      required: false\n    }),\n    errors: errors,\n    options: ['Male', 'Female', 'Other'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(WizardInput, {\n    type: \"number\",\n    label: \"Phone\",\n    placeholder: \"Phone\",\n    name: \"phoneNumber\",\n    onChange: ({\n      target\n    }) => {\n      handleInputChange(target);\n    },\n    id: \"name\",\n    className: \"input-spin-none\",\n    innerRef: register({\n      required: false\n    }),\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(WizardInput, {\n    label: \"Date of Birth\",\n    id: \"date\",\n    customType: \"datetime\",\n    name: \"birthDate\",\n    placeholder: \"DD/MM/YYYY\",\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(WizardInput, {\n    type: \"textarea\",\n    label: \"Address\",\n    name: \"address\",\n    rows: \"4\",\n    id: \"address\",\n    innerRef: register({\n      required: false\n    }),\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default AdvanceUserForm;","map":{"version":3,"sources":["/Users/matt/Documents/Dev/letter/letter-support/src/components/auth/wizard/AdvanceUserForm.js"],"names":["React","Fragment","useState","useContext","WizardInput","CustomInput","Media","FalconDropzone","avatarImg","isIterableArray","Avatar","AuthWizardContext","AdvanceUserForm","register","errors","user","avatar","setAvatar","avater","src","handleInputChange","base64","files","name","value","cloudUpload","target","required"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useContext } from 'react';\n\nimport WizardInput from './WizardInput';\nimport { CustomInput, Media } from 'reactstrap';\nimport FalconDropzone from '../../common/FalconDropzone';\nimport avatarImg from '../../../assets/img/team/avatar.png';\nimport { isIterableArray } from '../../../helpers/utils';\nimport Avatar from '../../common/Avatar';\n\nimport cloudUpload from '../../../assets/img/icons/cloud-upload.svg';\nimport { AuthWizardContext } from '../../../context/Context';\n\nconst AdvanceUserForm = ({ register, errors }) => {\n  const { user } = useContext(AuthWizardContext);\n  const [avatar, setAvatar] = useState([...(user.avater ? user.avater : []), { src: avatarImg }]);\n  const { handleInputChange } = useContext(AuthWizardContext);\n\n  return (\n    <Fragment>\n      <Media className=\"flex-center pb-3 d-block d-md-flex text-center mb-2\">\n        <Avatar size=\"4xl\" className=\"mb-2\" src={isIterableArray(avatar) ? avatar[0]?.base64 || avatar[0]?.src : ''} />\n        <Media body className=\"ml-md-4\">\n          <FalconDropzone\n            files={avatar}\n            onChange={files => {\n              setAvatar(files);\n              handleInputChange({ name: 'avater', value: files });\n            }}\n            multiple={false}\n            accept=\"image/*\"\n            placeholder={\n              <Fragment>\n                <Media className=\" fs-0 mx-auto d-inline-flex align-items-center\">\n                  <img src={cloudUpload} alt=\"\" width={25} className=\"mr-2\" />\n                  <Media>\n                    <p className=\"fs-0 mb-0 text-700\">Upload your profile picture</p>\n                  </Media>\n                </Media>\n                <p className=\"mb-0 w-75 mx-auto text-500\">Upload a 300x300 jpg image with a maximum size of 400KB</p>\n              </Fragment>\n            }\n          />\n        </Media>\n      </Media>\n      <WizardInput\n        type=\"select\"\n        label=\"Gender\"\n        placeholder=\"Select your gender\"\n        tag={CustomInput}\n        name=\"selectGender\"\n        id=\"selectGender\"\n        onChange={({ target }) => {\n          handleInputChange(target);\n        }}\n        innerRef={register({\n          required: false\n        })}\n        errors={errors}\n        options={['Male', 'Female', 'Other']}\n      />\n      <WizardInput\n        type=\"number\"\n        label=\"Phone\"\n        placeholder=\"Phone\"\n        name=\"phoneNumber\"\n        onChange={({ target }) => {\n          handleInputChange(target);\n        }}\n        id=\"name\"\n        className=\"input-spin-none\"\n        innerRef={register({\n          required: false\n        })}\n        errors={errors}\n      />\n      <WizardInput\n        label=\"Date of Birth\"\n        id=\"date\"\n        customType=\"datetime\"\n        name=\"birthDate\"\n        placeholder=\"DD/MM/YYYY\"\n        errors={errors}\n      />\n\n      <WizardInput\n        type=\"textarea\"\n        label=\"Address\"\n        name=\"address\"\n        rows=\"4\"\n        id=\"address\"\n        innerRef={register({\n          required: false\n        })}\n        errors={errors}\n      />\n    </Fragment>\n  );\n};\n\nexport default AdvanceUserForm;\n"]},"metadata":{},"sourceType":"module"}