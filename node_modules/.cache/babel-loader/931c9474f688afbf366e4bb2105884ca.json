{"ast":null,"code":"var _jsxFileName = \"/Users/greypro/Documents/Dev/letter/letter-support/src/components/email/inbox/InboxRow.js\";\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Badge, Col, CustomInput, Media, Row } from 'reactstrap';\nimport classNames from 'classnames';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Flex from '../../common/Flex';\nimport Avatar from '../../common/Avatar';\nimport { Link } from 'react-router-dom';\nimport { EmailContext } from '../../../context/Context';\nimport EmailAttachment from './EmailAttachment';\nimport InboxRowHoverActions from './InboxRowHoverActions';\nimport { isIterableArray } from '../../../helpers/utils';\n\nconst Star = ({\n  id,\n  star,\n  className\n}) => {\n  const {\n    handleAction\n  } = useContext(EmailContext);\n  return /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    onClick: () => handleAction('star', [id]),\n    icon: star ? 'star' : ['far', 'star'],\n    transform: \"down-7\",\n    className: classNames(className, {\n      'text-warning': star,\n      'text-300': !star\n    }, 'cursor-pointer'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  });\n};\n\nStar.propTypes = {\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  star: PropTypes.bool.isRequired,\n  className: PropTypes.string\n};\n\nconst InboxRow = ({\n  id,\n  user,\n  img,\n  badge,\n  title,\n  description,\n  attachments,\n  time,\n  star,\n  read,\n  snooze,\n  isSelectedItem,\n  toggleSelectedItem\n}) => {\n  return /*#__PURE__*/React.createElement(Row, {\n    className: classNames('border-bottom border-200 hover-actions-trigger hover-shadow py-2 px-1 mx-0', {\n      'bg-light': read\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(InboxRowHoverActions, {\n    id: id,\n    read: read,\n    snooze: snooze,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Col, {\n    xs: \"auto\",\n    className: \"d-none d-sm-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Flex, {\n    className: classNames({\n      'bg-light': read\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CustomInput, {\n    id: `checkbox-${id}`,\n    type: \"checkbox\",\n    checked: isSelectedItem(id),\n    onChange: () => toggleSelectedItem(id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Star, {\n    id: id,\n    star: star,\n    className: \"ml-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    xs: true,\n    md: 9,\n    className: \"col-xxl-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 4,\n    xl: 3,\n    className: \"col-xxl-2 pl-md-0 mb-1 mb-md-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    className: \"position-relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    size: \"s\",\n    src: img,\n    rounded: \"soft\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"media-body ml-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: classNames('stretched-link inbox-link', {\n      'font-weight-bold': !read\n    }),\n    to: \"./email-detail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, user), !!badge && /*#__PURE__*/React.createElement(Badge, {\n    color: \"soft-success\",\n    pill: true,\n    className: \"ml-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 19\n    }\n  }, badge)))), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: \"d-block inbox-link\",\n    to: \"./email-detail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames({\n      'font-weight-bold': !read\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, title), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"mx-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, \"\\u2013\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, description)), isIterableArray(attachments) && attachments.map(attachment => /*#__PURE__*/React.createElement(EmailAttachment, Object.assign({}, attachment, {\n    key: attachment.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 45\n    }\n  })))))), /*#__PURE__*/React.createElement(Col, {\n    xs: \"auto\",\n    tag: Flex,\n    justify: \"between\",\n    column: true,\n    className: \"ml-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames({\n      'font-weight-bold': !read\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, time), /*#__PURE__*/React.createElement(Star, {\n    id: id,\n    star: star,\n    className: \"ml-auto mb-2 d-sm-none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  })));\n};\n\nInboxRow.propTypes = {\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  user: PropTypes.string.isRequired,\n  img: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  time: PropTypes.string.isRequired,\n  star: PropTypes.bool.isRequired,\n  read: PropTypes.bool.isRequired,\n  snooze: PropTypes.bool.isRequired,\n  isSelectedItem: PropTypes.func.isRequired,\n  toggleSelectedItem: PropTypes.func.isRequired,\n  badge: PropTypes.string,\n  attachments: PropTypes.array\n};\nInboxRow.defaultProps = {\n  isSelected: false\n};\nexport default InboxRow;","map":{"version":3,"sources":["/Users/greypro/Documents/Dev/letter/letter-support/src/components/email/inbox/InboxRow.js"],"names":["React","useContext","PropTypes","Badge","Col","CustomInput","Media","Row","classNames","FontAwesomeIcon","Flex","Avatar","Link","EmailContext","EmailAttachment","InboxRowHoverActions","isIterableArray","Star","id","star","className","handleAction","propTypes","oneOfType","number","string","isRequired","bool","InboxRow","user","img","badge","title","description","attachments","time","read","snooze","isSelectedItem","toggleSelectedItem","map","attachment","func","array","defaultProps","isSelected"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,EAAgBC,GAAhB,EAAqBC,WAArB,EAAkCC,KAAlC,EAAyCC,GAAzC,QAAoD,YAApD;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,SAASC,eAAT,QAAgC,wBAAhC;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,IAAN;AAAYC,EAAAA;AAAZ,CAAD,KAA6B;AACxC,QAAM;AAAEC,IAAAA;AAAF,MAAmBpB,UAAU,CAACY,YAAD,CAAnC;AAEA,sBACE,oBAAC,eAAD;AACE,IAAA,OAAO,EAAE,MAAMQ,YAAY,CAAC,MAAD,EAAS,CAACH,EAAD,CAAT,CAD7B;AAEE,IAAA,IAAI,EAAEC,IAAI,GAAG,MAAH,GAAY,CAAC,KAAD,EAAQ,MAAR,CAFxB;AAGE,IAAA,SAAS,EAAC,QAHZ;AAIE,IAAA,SAAS,EAAEX,UAAU,CAACY,SAAD,EAAY;AAAE,sBAAgBD,IAAlB;AAAwB,kBAAY,CAACA;AAArC,KAAZ,EAAyD,gBAAzD,CAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAQD,CAXD;;AAaAF,IAAI,CAACK,SAAL,GAAiB;AACfJ,EAAAA,EAAE,EAAEhB,SAAS,CAACqB,SAAV,CAAoB,CAACrB,SAAS,CAACsB,MAAX,EAAmBtB,SAAS,CAACuB,MAA7B,CAApB,EAA0DC,UAD/C;AAEfP,EAAAA,IAAI,EAAEjB,SAAS,CAACyB,IAAV,CAAeD,UAFN;AAGfN,EAAAA,SAAS,EAAElB,SAAS,CAACuB;AAHN,CAAjB;;AAMA,MAAMG,QAAQ,GAAG,CAAC;AAChBV,EAAAA,EADgB;AAEhBW,EAAAA,IAFgB;AAGhBC,EAAAA,GAHgB;AAIhBC,EAAAA,KAJgB;AAKhBC,EAAAA,KALgB;AAMhBC,EAAAA,WANgB;AAOhBC,EAAAA,WAPgB;AAQhBC,EAAAA,IARgB;AAShBhB,EAAAA,IATgB;AAUhBiB,EAAAA,IAVgB;AAWhBC,EAAAA,MAXgB;AAYhBC,EAAAA,cAZgB;AAahBC,EAAAA;AAbgB,CAAD,KAcX;AACJ,sBACE,oBAAC,GAAD;AACE,IAAA,SAAS,EAAE/B,UAAU,CAAC,4EAAD,EAA+E;AAClG,kBAAY4B;AADsF,KAA/E,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,oBAAD;AAAsB,IAAA,EAAE,EAAElB,EAA1B;AAA8B,IAAA,IAAI,EAAEkB,IAApC;AAA0C,IAAA,MAAM,EAAEC,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAME,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,MAAR;AAAe,IAAA,SAAS,EAAC,mBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAE7B,UAAU,CAAC;AAAE,kBAAY4B;AAAd,KAAD,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AACE,IAAA,EAAE,EAAG,YAAWlB,EAAG,EADrB;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,OAAO,EAAEoB,cAAc,CAACpB,EAAD,CAHzB;AAIE,IAAA,QAAQ,EAAE,MAAMqB,kBAAkB,CAACrB,EAAD,CAJpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAEA,EAAV;AAAc,IAAA,IAAI,EAAEC,IAApB;AAA0B,IAAA,SAAS,EAAC,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,CANF,eAiBE,oBAAC,GAAD;AAAK,IAAA,EAAE,MAAP;AAAQ,IAAA,EAAE,EAAE,CAAZ;AAAe,IAAA,SAAS,EAAC,YAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAY,IAAA,EAAE,EAAE,CAAhB;AAAmB,IAAA,SAAS,EAAC,gCAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,GAAb;AAAiB,IAAA,GAAG,EAAEW,GAAtB;AAA2B,IAAA,OAAO,EAAC,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AACE,IAAA,SAAS,EAAEtB,UAAU,CAAC,2BAAD,EAA8B;AAAE,0BAAoB,CAAC4B;AAAvB,KAA9B,CADvB;AAEE,IAAA,EAAE,EAAC,gBAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGP,IAJH,CADF,EAOG,CAAC,CAACE,KAAF,iBACC,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAC,cAAb;AAA4B,IAAA,IAAI,MAAhC;AAAiC,IAAA,SAAS,EAAC,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KADH,CARJ,CAFF,CADF,CADF,eAmBE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,oBAAhB;AAAqC,IAAA,EAAE,EAAC,gBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAEvB,UAAU,CAAC;AAAE,0BAAoB,CAAC4B;AAAvB,KAAD,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6DJ,KAA7D,CADF,eAEE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOC,WAAP,CAHF,CADF,EAMGjB,eAAe,CAACkB,WAAD,CAAf,IACCA,WAAW,CAACM,GAAZ,CAAgBC,UAAU,iBAAI,oBAAC,eAAD,oBAAqBA,UAArB;AAAiC,IAAA,GAAG,EAAEA,UAAU,CAACvB,EAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA9B,CAPJ,CAnBF,CADF,CAjBF,eAgDE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,MAAR;AAAe,IAAA,GAAG,EAAER,IAApB;AAA0B,IAAA,OAAO,EAAC,SAAlC;AAA4C,IAAA,MAAM,MAAlD;AAAmD,IAAA,SAAS,EAAC,SAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAEF,UAAU,CAAC;AAAE,0BAAoB,CAAC4B;AAAvB,KAAD,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6DD,IAA7D,CADF,eAEE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAEjB,EAAV;AAAc,IAAA,IAAI,EAAEC,IAApB;AAA0B,IAAA,SAAS,EAAC,wBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAhDF,CADF;AAuDD,CAtED;;AAwEAS,QAAQ,CAACN,SAAT,GAAqB;AACnBJ,EAAAA,EAAE,EAAEhB,SAAS,CAACqB,SAAV,CAAoB,CAACrB,SAAS,CAACsB,MAAX,EAAmBtB,SAAS,CAACuB,MAA7B,CAApB,EAA0DC,UAD3C;AAEnBG,EAAAA,IAAI,EAAE3B,SAAS,CAACuB,MAAV,CAAiBC,UAFJ;AAGnBI,EAAAA,GAAG,EAAE5B,SAAS,CAACuB,MAAV,CAAiBC,UAHH;AAInBM,EAAAA,KAAK,EAAE9B,SAAS,CAACuB,MAAV,CAAiBC,UAJL;AAKnBO,EAAAA,WAAW,EAAE/B,SAAS,CAACuB,MAAV,CAAiBC,UALX;AAMnBS,EAAAA,IAAI,EAAEjC,SAAS,CAACuB,MAAV,CAAiBC,UANJ;AAOnBP,EAAAA,IAAI,EAAEjB,SAAS,CAACyB,IAAV,CAAeD,UAPF;AAQnBU,EAAAA,IAAI,EAAElC,SAAS,CAACyB,IAAV,CAAeD,UARF;AASnBW,EAAAA,MAAM,EAAEnC,SAAS,CAACyB,IAAV,CAAeD,UATJ;AAUnBY,EAAAA,cAAc,EAAEpC,SAAS,CAACwC,IAAV,CAAehB,UAVZ;AAWnBa,EAAAA,kBAAkB,EAAErC,SAAS,CAACwC,IAAV,CAAehB,UAXhB;AAYnBK,EAAAA,KAAK,EAAE7B,SAAS,CAACuB,MAZE;AAanBS,EAAAA,WAAW,EAAEhC,SAAS,CAACyC;AAbJ,CAArB;AAgBAf,QAAQ,CAACgB,YAAT,GAAwB;AAAEC,EAAAA,UAAU,EAAE;AAAd,CAAxB;AAEA,eAAejB,QAAf","sourcesContent":["import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Badge, Col, CustomInput, Media, Row } from 'reactstrap';\nimport classNames from 'classnames';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Flex from '../../common/Flex';\nimport Avatar from '../../common/Avatar';\nimport { Link } from 'react-router-dom';\nimport { EmailContext } from '../../../context/Context';\nimport EmailAttachment from './EmailAttachment';\nimport InboxRowHoverActions from './InboxRowHoverActions';\nimport { isIterableArray } from '../../../helpers/utils';\n\nconst Star = ({ id, star, className }) => {\n  const { handleAction } = useContext(EmailContext);\n\n  return (\n    <FontAwesomeIcon\n      onClick={() => handleAction('star', [id])}\n      icon={star ? 'star' : ['far', 'star']}\n      transform=\"down-7\"\n      className={classNames(className, { 'text-warning': star, 'text-300': !star }, 'cursor-pointer')}\n    />\n  );\n};\n\nStar.propTypes = {\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  star: PropTypes.bool.isRequired,\n  className: PropTypes.string\n};\n\nconst InboxRow = ({\n  id,\n  user,\n  img,\n  badge,\n  title,\n  description,\n  attachments,\n  time,\n  star,\n  read,\n  snooze,\n  isSelectedItem,\n  toggleSelectedItem\n}) => {\n  return (\n    <Row\n      className={classNames('border-bottom border-200 hover-actions-trigger hover-shadow py-2 px-1 mx-0', {\n        'bg-light': read\n      })}\n    >\n      <InboxRowHoverActions id={id} read={read} snooze={snooze} />\n      <Col xs=\"auto\" className=\"d-none d-sm-block\">\n        <Flex className={classNames({ 'bg-light': read })}>\n          <CustomInput\n            id={`checkbox-${id}`}\n            type=\"checkbox\"\n            checked={isSelectedItem(id)}\n            onChange={() => toggleSelectedItem(id)}\n          />\n          <Star id={id} star={star} className=\"ml-1\" />\n        </Flex>\n      </Col>\n      <Col xs md={9} className=\"col-xxl-10\">\n        <Row>\n          <Col md={4} xl={3} className=\"col-xxl-2 pl-md-0 mb-1 mb-md-0\">\n            <Media className=\"position-relative\">\n              <Avatar size=\"s\" src={img} rounded=\"soft\" />\n              <div className=\"media-body ml-2\">\n                <Link\n                  className={classNames('stretched-link inbox-link', { 'font-weight-bold': !read })}\n                  to=\"./email-detail\"\n                >\n                  {user}\n                </Link>\n                {!!badge && (\n                  <Badge color=\"soft-success\" pill className=\"ml-2\">\n                    {badge}\n                  </Badge>\n                )}\n              </div>\n            </Media>\n          </Col>\n          <Col>\n            <Link className=\"d-block inbox-link\" to=\"./email-detail\">\n              <span className={classNames({ 'font-weight-bold': !read })}>{title}</span>\n              <span className=\"mx-1\">–</span>\n              <span>{description}</span>\n            </Link>\n            {isIterableArray(attachments) &&\n              attachments.map(attachment => <EmailAttachment {...attachment} key={attachment.id} />)}\n          </Col>\n        </Row>\n      </Col>\n      <Col xs=\"auto\" tag={Flex} justify=\"between\" column className=\"ml-auto\">\n        <span className={classNames({ 'font-weight-bold': !read })}>{time}</span>\n        <Star id={id} star={star} className=\"ml-auto mb-2 d-sm-none\" />\n      </Col>\n    </Row>\n  );\n};\n\nInboxRow.propTypes = {\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  user: PropTypes.string.isRequired,\n  img: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  time: PropTypes.string.isRequired,\n  star: PropTypes.bool.isRequired,\n  read: PropTypes.bool.isRequired,\n  snooze: PropTypes.bool.isRequired,\n  isSelectedItem: PropTypes.func.isRequired,\n  toggleSelectedItem: PropTypes.func.isRequired,\n  badge: PropTypes.string,\n  attachments: PropTypes.array\n};\n\nInboxRow.defaultProps = { isSelected: false };\n\nexport default InboxRow;\n"]},"metadata":{},"sourceType":"module"}