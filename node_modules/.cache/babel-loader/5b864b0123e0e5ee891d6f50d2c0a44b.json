{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/Dev/letter/letter-support/src/components/utilities/StretchedLink.js\";\nimport React, { Fragment } from 'react';\nimport { Card, CardHeader, CardBody } from 'reactstrap';\nimport PageHeader from '../common/PageHeader';\nimport FalconEditor from '../common/FalconEditor';\nimport generic1 from '../../assets/img/generic/1.jpg';\nconst stretchedLinkCode = `<Fragment>\n  <Card style={{width: '18rem'}}>\n    <CardImg src={generic1} top />\n    <CardBody>\n      <CardTitle tag=\"h5\" tag=\"h5\">\n        Card title\n      </CardTitle>\n      <CardText tag=\"p\">\n        Some quick example text to build on the card\n        title and make up the bulk of the card's\n        content.\n      </CardText>\n      <Button color=\"primary\" size=\"sm\" className=\"stretched-link\">\n        Go somewhere\n      </Button>\n    </CardBody>\n  </Card>\n</Fragment>`;\n\nconst StretchedLink = () => /*#__PURE__*/React.createElement(Fragment, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(PageHeader, {\n  title: \"Stretched Link\",\n  description: \"Make any HTML element or reactstrap component clickable by \\u201Cstretching\\u201D a nested link via CSS.\",\n  className: \"mb-3\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(Card, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(CardHeader, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(\"h5\", {\n  className: \"mb-2\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }\n}, \"Example\"), /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }\n}, \"Add \", /*#__PURE__*/React.createElement(\"code\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 15\n  }\n}, \".stretched-link \"), \"to a link to make its containing block clickable via a \", /*#__PURE__*/React.createElement(\"code\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 99\n  }\n}, \"::after\"), ' ', \"pseudo element. In most cases, this means that an element with \", /*#__PURE__*/React.createElement(\"code\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 74\n  }\n}, \"position: relative; \"), \"that contains a link with the \", /*#__PURE__*/React.createElement(\"code\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 27\n  }\n}, \".stretched-link \"), \"class is clickable.\"), /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }\n}, \"Cards have \", /*#__PURE__*/React.createElement(\"code\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 22\n  }\n}, \"position: relative \"), \"by default in reactstrap, so in this case you can safely add the\", /*#__PURE__*/React.createElement(\"code\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 11\n  }\n}, \".stretched-link \"), \"class to a link in the card without any other HTML changes.\"), /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }\n}, \"Multiple links and tap targets are not recommended with stretched links. However, some\", /*#__PURE__*/React.createElement(\"code\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 11\n  }\n}, \" position \"), \"and \", /*#__PURE__*/React.createElement(\"code\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 38\n  }\n}, \"z-index \"), \"styles can help should this be required.\")), /*#__PURE__*/React.createElement(CardBody, {\n  className: \"bg-light\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(FalconEditor, {\n  code: stretchedLinkCode,\n  language: \"jsx\",\n  scope: {\n    generic1\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }\n}))));\n\nexport default StretchedLink;","map":{"version":3,"sources":["/Users/matt/Documents/Dev/letter/letter-support/src/components/utilities/StretchedLink.js"],"names":["React","Fragment","Card","CardHeader","CardBody","PageHeader","FalconEditor","generic1","stretchedLinkCode","StretchedLink"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,QAA3B,QAA2C,YAA3C;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AAEA,MAAMC,iBAAiB,GAAI;;;;;;;;;;;;;;;;;YAA3B;;AAmBA,MAAMC,aAAa,GAAG,mBACpB,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,UAAD;AACE,EAAA,KAAK,EAAC,gBADR;AAEE,EAAA,WAAW,EAAC,0GAFd;AAGE,EAAA,SAAS,EAAC,MAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,eAME,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAI,EAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADN,0EAC0F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAD1F,EAC+G,GAD/G,kFAEiE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFjE,iDAGkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHlB,wBAFF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADb,mFAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,gEAPF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0GAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,uBAE6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAF7B,6CAXF,CADF,eAiBE,oBAAC,QAAD;AAAU,EAAA,SAAS,EAAC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,YAAD;AAAc,EAAA,IAAI,EAAED,iBAApB;AAAuC,EAAA,QAAQ,EAAC,KAAhD;AAAsD,EAAA,KAAK,EAAE;AAAED,IAAAA;AAAF,GAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CAjBF,CANF,CADF;;AA+BA,eAAeE,aAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport { Card, CardHeader, CardBody } from 'reactstrap';\nimport PageHeader from '../common/PageHeader';\nimport FalconEditor from '../common/FalconEditor';\nimport generic1 from '../../assets/img/generic/1.jpg';\n\nconst stretchedLinkCode = `<Fragment>\n  <Card style={{width: '18rem'}}>\n    <CardImg src={generic1} top />\n    <CardBody>\n      <CardTitle tag=\"h5\" tag=\"h5\">\n        Card title\n      </CardTitle>\n      <CardText tag=\"p\">\n        Some quick example text to build on the card\n        title and make up the bulk of the card's\n        content.\n      </CardText>\n      <Button color=\"primary\" size=\"sm\" className=\"stretched-link\">\n        Go somewhere\n      </Button>\n    </CardBody>\n  </Card>\n</Fragment>`;\n\nconst StretchedLink = () => (\n  <Fragment>\n    <PageHeader\n      title=\"Stretched Link\"\n      description=\"Make any HTML element or reactstrap component clickable by “stretching” a nested link via CSS.\"\n      className=\"mb-3\"\n    />\n    <Card>\n      <CardHeader>\n        <h5 className=\"mb-2\">Example</h5>\n        <p>\n          Add <code>.stretched-link </code>to a link to make its containing block clickable via a <code>::after</code>{' '}\n          pseudo element. In most cases, this means that an element with <code>position: relative; </code>that contains\n          a link with the <code>.stretched-link </code>class is clickable.\n        </p>\n        <p>\n          Cards have <code>position: relative </code>by default in reactstrap, so in this case you can safely add the\n          <code>.stretched-link </code>class to a link in the card without any other HTML changes.\n        </p>\n        <p>\n          Multiple links and tap targets are not recommended with stretched links. However, some\n          <code> position </code>and <code>z-index </code>styles can help should this be required.\n        </p>\n      </CardHeader>\n      <CardBody className=\"bg-light\">\n        <FalconEditor code={stretchedLinkCode} language=\"jsx\" scope={{ generic1 }} />\n      </CardBody>\n    </Card>\n  </Fragment>\n);\n\nexport default StretchedLink;\n"]},"metadata":{},"sourceType":"module"}