{"ast":null,"code":"var _jsxFileName = \"/Users/greypro/Documents/Dev/letter/letter-support/src/components/kanban/KanbanContainer.js\";\nimport React, { useContext, useRef, useEffect } from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport is from 'is_js';\nimport { KanbanContext } from '../../context/Context';\nimport { isIterableArray } from '../../helpers/utils';\nimport KanbanColumn from './KanbanColumn';\nimport AddAnotherList from './AddAnotherList';\nimport KanbanModal from './KanbanModal';\n\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n  return result;\n};\n\nconst move = (source, destination, droppableSource, droppableDestination) => {\n  const sourceClone = Array.from(source);\n  const destClone = Array.from(destination);\n  const [removed] = sourceClone.splice(droppableSource.index, 1);\n  destClone.splice(droppableDestination.index, 0, removed);\n  const result = {};\n  result[droppableSource.droppableId] = sourceClone;\n  result[droppableDestination.droppableId] = destClone;\n  return result;\n};\n\nconst KanbanContainer = () => {\n  const {\n    kanbanColumns,\n    UpdateColumnData,\n    modalContent,\n    modal,\n    setModal\n  } = useContext(KanbanContext);\n  const containerRef = useRef(null); // Detect device\n\n  useEffect(() => {\n    if (is.ipad()) {\n      containerRef.current.classList.add('ipad');\n    }\n\n    if (is.mobile()) {\n      containerRef.current.classList.add('mobile');\n\n      if (is.safari()) {\n        containerRef.current.classList.add('safari');\n      }\n\n      if (is.chrome()) {\n        containerRef.current.classList.add('chrome');\n      }\n    }\n  }, []);\n\n  const getList = id => {\n    const targetColumn = kanbanColumns.find(item => item.id === id);\n    return targetColumn.items;\n  };\n\n  const onDragEnd = result => {\n    const {\n      source,\n      destination\n    } = result; // dropped outside the list\n\n    if (!destination) {\n      return;\n    }\n\n    if (source.droppableId === destination.droppableId) {\n      const items = reorder(getList(source.droppableId), source.index, destination.index);\n      const column = kanbanColumns.find(item => item.id === source.droppableId); // update individual column\n\n      UpdateColumnData(column, items);\n    } else {\n      const result = move(getList(source.droppableId), getList(destination.droppableId), source, destination);\n      const sourceColumn = kanbanColumns.find(item => item.id === source.droppableId);\n      const destinationColumn = kanbanColumns.find(item => item.id === destination.droppableId); // update source\n\n      UpdateColumnData(sourceColumn, result[source.droppableId]); //destination update\n\n      UpdateColumnData(destinationColumn, result[destination.droppableId]);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(DragDropContext, {\n    onDragEnd: onDragEnd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kanban-container scrollbar\",\n    ref: containerRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, isIterableArray(kanbanColumns) && kanbanColumns.map((kanbanColumnItem, index) => {\n    return /*#__PURE__*/React.createElement(KanbanColumn, {\n      kanbanColumnItem: kanbanColumnItem,\n      key: index,\n      index: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 20\n      }\n    });\n  }), /*#__PURE__*/React.createElement(AddAnotherList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(KanbanModal, {\n    modal: modal,\n    setModal: setModal,\n    modalContent: modalContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default KanbanContainer;","map":{"version":3,"sources":["/Users/greypro/Documents/Dev/letter/letter-support/src/components/kanban/KanbanContainer.js"],"names":["React","useContext","useRef","useEffect","DragDropContext","is","KanbanContext","isIterableArray","KanbanColumn","AddAnotherList","KanbanModal","reorder","list","startIndex","endIndex","result","Array","from","removed","splice","move","source","destination","droppableSource","droppableDestination","sourceClone","destClone","index","droppableId","KanbanContainer","kanbanColumns","UpdateColumnData","modalContent","modal","setModal","containerRef","ipad","current","classList","add","mobile","safari","chrome","getList","id","targetColumn","find","item","items","onDragEnd","column","sourceColumn","destinationColumn","map","kanbanColumnItem"],"mappings":"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","sourcesContent":["import React, { useContext, useRef, useEffect } from 'react';\r\nimport { DragDropContext } from 'react-beautiful-dnd';\r\nimport is from 'is_js';\r\n\r\nimport { KanbanContext } from '../../context/Context';\r\nimport { isIterableArray } from '../../helpers/utils';\r\nimport KanbanColumn from './KanbanColumn';\r\nimport AddAnotherList from './AddAnotherList';\r\nimport KanbanModal from './KanbanModal';\r\n\r\nconst reorder = (list, startIndex, endIndex) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\n\r\nconst move = (source, destination, droppableSource, droppableDestination) => {\r\n  const sourceClone = Array.from(source);\r\n  const destClone = Array.from(destination);\r\n  const [removed] = sourceClone.splice(droppableSource.index, 1);\r\n\r\n  destClone.splice(droppableDestination.index, 0, removed);\r\n\r\n  const result = {};\r\n  result[droppableSource.droppableId] = sourceClone;\r\n  result[droppableDestination.droppableId] = destClone;\r\n\r\n  return result;\r\n};\r\n\r\nconst KanbanContainer = () => {\r\n  const { kanbanColumns, UpdateColumnData, modalContent, modal, setModal } = useContext(KanbanContext);\r\n  const containerRef = useRef(null);\r\n\r\n  // Detect device\r\n  useEffect(() => {\r\n    if (is.ipad()) {\r\n      containerRef.current.classList.add('ipad');\r\n    }\r\n    if (is.mobile()) {\r\n      containerRef.current.classList.add('mobile');\r\n      if (is.safari()) {\r\n        containerRef.current.classList.add('safari');\r\n      }\r\n      if (is.chrome()) {\r\n        containerRef.current.classList.add('chrome');\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const getList = id => {\r\n    const targetColumn = kanbanColumns.find(item => item.id === id);\r\n    return targetColumn.items;\r\n  };\r\n\r\n  const onDragEnd = result => {\r\n    const { source, destination } = result;\r\n\r\n    // dropped outside the list\r\n    if (!destination) {\r\n      return;\r\n    }\r\n\r\n    if (source.droppableId === destination.droppableId) {\r\n      const items = reorder(getList(source.droppableId), source.index, destination.index);\r\n      const column = kanbanColumns.find(item => item.id === source.droppableId);\r\n      // update individual column\r\n      UpdateColumnData(column, items);\r\n    } else {\r\n      const result = move(getList(source.droppableId), getList(destination.droppableId), source, destination);\r\n\r\n      const sourceColumn = kanbanColumns.find(item => item.id === source.droppableId);\r\n      const destinationColumn = kanbanColumns.find(item => item.id === destination.droppableId);\r\n      // update source\r\n      UpdateColumnData(sourceColumn, result[source.droppableId]);\r\n\r\n      //destination update\r\n      UpdateColumnData(destinationColumn, result[destination.droppableId]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <DragDropContext onDragEnd={onDragEnd}>\r\n      <div className=\"kanban-container scrollbar\" ref={containerRef}>\r\n        {isIterableArray(kanbanColumns) &&\r\n          kanbanColumns.map((kanbanColumnItem, index) => {\r\n            return <KanbanColumn kanbanColumnItem={kanbanColumnItem} key={index} index={index} />;\r\n          })}\r\n        <AddAnotherList />\r\n        <KanbanModal modal={modal} setModal={setModal} modalContent={modalContent} />\r\n      </div>\r\n    </DragDropContext>\r\n  );\r\n};\r\n\r\nexport default KanbanContainer;\r\n"]},"metadata":{},"sourceType":"module"}