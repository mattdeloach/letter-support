{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/Dev/letter/letter-support/src/components/auth/RegistrationForm.js\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Button, CustomInput, Form, FormGroup, Input, Label } from 'reactstrap';\nimport Divider from '../common/Divider';\nimport SocialAuthButtons from './SocialAuthButtons';\nimport withRedirect from '../../hoc/withRedirect';\n\nconst RegistrationForm = ({\n  setRedirect,\n  setRedirectUrl,\n  layout,\n  hasLabel\n}) => {\n  // State\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [isAccepted, setIsAccepted] = useState(false);\n  const [isDisabled, setIsDisabled] = useState(true); // Handler\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    toast.success(`Successfully registered as ${name}`);\n    setRedirect(true);\n  };\n\n  useEffect(() => {\n    setRedirectUrl(`/authentication/${layout}/login`);\n  }, [setRedirectUrl, layout]);\n  useEffect(() => {\n    setIsDisabled(!name || !email || !password || !confirmPassword || !isAccepted || password !== confirmPassword);\n  }, [name, email, password, confirmPassword, isAccepted]);\n  return /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, hasLabel && /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 22\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(Input, {\n    placeholder: !hasLabel ? 'Name' : '',\n    value: name,\n    onChange: ({\n      target\n    }) => setName(target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, hasLabel && /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 22\n    }\n  }, \"Email address\"), /*#__PURE__*/React.createElement(Input, {\n    placeholder: !hasLabel ? 'Email address' : '',\n    value: email,\n    onChange: ({\n      target\n    }) => setEmail(target.value),\n    type: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, hasLabel && /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 24\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Input, {\n    placeholder: !hasLabel ? 'Password' : '',\n    value: password,\n    onChange: ({\n      target\n    }) => setPassword(target.value),\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, hasLabel && /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 24\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(Input, {\n    placeholder: !hasLabel ? 'Confirm Password' : '',\n    value: confirmPassword,\n    onChange: ({\n      target\n    }) => setConfirmPassword(target.value),\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(CustomInput, {\n    id: \"customCheckTerms\",\n    label: /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, \"I accept the \", /*#__PURE__*/React.createElement(Link, {\n      to: \"#!\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 26\n      }\n    }, \"terms\"), \" and \", /*#__PURE__*/React.createElement(Link, {\n      to: \"#!\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 57\n      }\n    }, \"privacy policy\")),\n    checked: isAccepted,\n    onChange: ({\n      target\n    }) => setIsAccepted(target.checked),\n    type: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    block: true,\n    className: \"mt-3\",\n    disabled: isDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, \"Register\")), /*#__PURE__*/React.createElement(Divider, {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, \"or register with\"), /*#__PURE__*/React.createElement(SocialAuthButtons, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }));\n};\n\nRegistrationForm.propTypes = {\n  setRedirect: PropTypes.func.isRequired,\n  setRedirectUrl: PropTypes.func.isRequired,\n  layout: PropTypes.string,\n  hasLabel: PropTypes.bool\n};\nRegistrationForm.defaultProps = {\n  layout: 'basic',\n  hasLabel: false\n};\nexport default withRedirect(RegistrationForm);","map":{"version":3,"sources":["/Users/matt/Documents/Dev/letter/letter-support/src/components/auth/RegistrationForm.js"],"names":["React","Fragment","useState","useEffect","PropTypes","Link","toast","Button","CustomInput","Form","FormGroup","Input","Label","Divider","SocialAuthButtons","withRedirect","RegistrationForm","setRedirect","setRedirectUrl","layout","hasLabel","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","isAccepted","setIsAccepted","isDisabled","setIsDisabled","handleSubmit","e","preventDefault","success","target","value","checked","propTypes","func","isRequired","string","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Button, CustomInput, Form, FormGroup, Input, Label } from 'reactstrap';\nimport Divider from '../common/Divider';\nimport SocialAuthButtons from './SocialAuthButtons';\nimport withRedirect from '../../hoc/withRedirect';\n\nconst RegistrationForm = ({ setRedirect, setRedirectUrl, layout, hasLabel }) => {\n  // State\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [isAccepted, setIsAccepted] = useState(false);\n  const [isDisabled, setIsDisabled] = useState(true);\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    toast.success(`Successfully registered as ${name}`);\n    setRedirect(true);\n  };\n\n  useEffect(() => {\n    setRedirectUrl(`/authentication/${layout}/login`);\n  }, [setRedirectUrl, layout]);\n\n  useEffect(() => {\n    setIsDisabled(!name || !email || !password || !confirmPassword || !isAccepted || password !== confirmPassword);\n  }, [name, email, password, confirmPassword, isAccepted]);\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <FormGroup>\n        {hasLabel && <Label>Name</Label>}\n        <Input placeholder={!hasLabel ? 'Name' : ''} value={name} onChange={({ target }) => setName(target.value)} />\n      </FormGroup>\n      <FormGroup>\n        {hasLabel && <Label>Email address</Label>}\n        <Input\n          placeholder={!hasLabel ? 'Email address' : ''}\n          value={email}\n          onChange={({ target }) => setEmail(target.value)}\n          type=\"email\"\n        />\n      </FormGroup>\n      <div className=\"form-row\">\n        <FormGroup className=\"col-6\">\n          {hasLabel && <Label>Password</Label>}\n          <Input\n            placeholder={!hasLabel ? 'Password' : ''}\n            value={password}\n            onChange={({ target }) => setPassword(target.value)}\n            type=\"password\"\n          />\n        </FormGroup>\n        <FormGroup className=\"col-6\">\n          {hasLabel && <Label>Confirm Password</Label>}\n          <Input\n            placeholder={!hasLabel ? 'Confirm Password' : ''}\n            value={confirmPassword}\n            onChange={({ target }) => setConfirmPassword(target.value)}\n            type=\"password\"\n          />\n        </FormGroup>\n      </div>\n\n      <CustomInput\n        id=\"customCheckTerms\"\n        label={\n          <Fragment>\n            I accept the <Link to=\"#!\">terms</Link> and <Link to=\"#!\">privacy policy</Link>\n          </Fragment>\n        }\n        checked={isAccepted}\n        onChange={({ target }) => setIsAccepted(target.checked)}\n        type=\"checkbox\"\n      />\n      <FormGroup>\n        <Button color=\"primary\" block className=\"mt-3\" disabled={isDisabled}>\n          Register\n        </Button>\n      </FormGroup>\n      <Divider className=\"mt-4\">or register with</Divider>\n      <SocialAuthButtons />\n    </Form>\n  );\n};\n\nRegistrationForm.propTypes = {\n  setRedirect: PropTypes.func.isRequired,\n  setRedirectUrl: PropTypes.func.isRequired,\n  layout: PropTypes.string,\n  hasLabel: PropTypes.bool\n};\n\nRegistrationForm.defaultProps = {\n  layout: 'basic',\n  hasLabel: false\n};\n\nexport default withRedirect(RegistrationForm);\n"]},"metadata":{},"sourceType":"module"}