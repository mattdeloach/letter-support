{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/Dev/letter/letter-support/src/components/e-commerce/product-details/ProductDetailsMedia.js\";\nimport React, { Fragment, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { isIterableArray } from '../../../helpers/utils';\nimport Slider from 'react-slick/lib';\nimport { Badge } from 'reactstrap';\nimport LightBoxGallery from '../../common/LightBoxGallery';\nconst sliderSettings = {\n  infinite: true,\n  speed: 500,\n  slidesToShow: 1,\n  slidesToScroll: 1\n};\n\nconst ProductDetailsMedia = ({\n  files,\n  isNew\n}) => {\n  // For Slider\n  let slider1;\n  let slider2;\n  const [nav1, setNav1] = useState(null);\n  const [nav2, setNav2] = useState(null);\n  useEffect(() => {\n    setNav1(slider1);\n    setNav2(slider2);\n  }, [slider1, slider2]);\n  return /*#__PURE__*/React.createElement(LightBoxGallery, {\n    images: files.map(file => file['src'] || file['base64']),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, openImgIndex => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"position-relative h-sm-100 overflow-hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, isIterableArray(files) && files.length === 1 && /*#__PURE__*/React.createElement(\"img\", {\n    className: \"img-fluid fit-cover w-sm-100 h-sm-100 rounded cursor-pointer\",\n    src: files[0]['src'] || files[0]['base64'],\n    onClick: () => {\n      openImgIndex(0);\n    },\n    alt: files[0].path,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }), isIterableArray(files) && files.length > 1 && /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Slider, Object.assign({}, sliderSettings, {\n    asNavFor: nav2,\n    ref: slider => slider1 = slider,\n    className: \"slick-slider-arrow-inner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }), files.map((file, index) => /*#__PURE__*/React.createElement(\"img\", {\n    className: \"img-fluid fit-cover w-sm-100 h-sm-100 rounded rounded cursor-pointer\",\n    src: file['src'] || file['base64'],\n    alt: file.path,\n    key: file.id,\n    onClick: () => {\n      openImgIndex(index);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(Slider, {\n    asNavFor: nav1,\n    ref: slider => slider2 = slider,\n    slidesToShow: files.length > 5 ? 5 : files.length,\n    swipeToSlide: true,\n    focusOnSelect: true,\n    className: \"slick-slider-arrow-inner mt-1 mr-n1 mb-n2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, files.map(file => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cursor-pointer pr-1 outline-none\",\n    key: file.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"img-fluid fit-cover w-sm-100 h-sm-100 rounded\",\n    src: file['src'] || file['base64'],\n    alt: file.path,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }))))), isNew && /*#__PURE__*/React.createElement(Badge, {\n    color: \"success\",\n    pill: true,\n    className: \"position-absolute t-0 r-0 mr-2 mt-2 fs--2 z-index-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, \"New\")));\n};\n\nProductDetailsMedia.propTypes = {\n  value: PropTypes.any\n};\nProductDetailsMedia.defaultProps = {\n  value: `ProductDetailsMedia`\n};\nexport default ProductDetailsMedia;","map":{"version":3,"sources":["/Users/matt/Documents/Dev/letter/letter-support/src/components/e-commerce/product-details/ProductDetailsMedia.js"],"names":["React","Fragment","useEffect","useState","PropTypes","isIterableArray","Slider","Badge","LightBoxGallery","sliderSettings","infinite","speed","slidesToShow","slidesToScroll","ProductDetailsMedia","files","isNew","slider1","slider2","nav1","setNav1","nav2","setNav2","map","file","openImgIndex","length","path","slider","index","id","propTypes","value","any","defaultProps"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { isIterableArray } from '../../../helpers/utils';\nimport Slider from 'react-slick/lib';\nimport { Badge } from 'reactstrap';\nimport LightBoxGallery from '../../common/LightBoxGallery';\n\nconst sliderSettings = {\n  infinite: true,\n  speed: 500,\n  slidesToShow: 1,\n  slidesToScroll: 1\n};\n\nconst ProductDetailsMedia = ({ files, isNew }) => {\n  // For Slider\n  let slider1;\n  let slider2;\n  const [nav1, setNav1] = useState(null);\n  const [nav2, setNav2] = useState(null);\n  useEffect(() => {\n    setNav1(slider1);\n    setNav2(slider2);\n  }, [slider1, slider2]);\n\n  return (\n    <LightBoxGallery images={files.map(file => file['src'] || file['base64'])}>\n      {openImgIndex => (\n        <div className=\"position-relative h-sm-100 overflow-hidden\">\n          {isIterableArray(files) && files.length === 1 && (\n            <img\n              className=\"img-fluid fit-cover w-sm-100 h-sm-100 rounded cursor-pointer\"\n              src={files[0]['src'] || files[0]['base64']}\n              onClick={() => {\n                openImgIndex(0);\n              }}\n              alt={files[0].path}\n            />\n          )}\n          {isIterableArray(files) && files.length > 1 && (\n            <Fragment>\n              <Slider\n                {...sliderSettings}\n                asNavFor={nav2}\n                ref={slider => (slider1 = slider)}\n                className=\"slick-slider-arrow-inner\"\n              >\n                {files.map((file, index) => (\n                  <img\n                    className=\"img-fluid fit-cover w-sm-100 h-sm-100 rounded rounded cursor-pointer\"\n                    src={file['src'] || file['base64']}\n                    alt={file.path}\n                    key={file.id}\n                    onClick={() => {\n                      openImgIndex(index);\n                    }}\n                  />\n                ))}\n              </Slider>\n              <Slider\n                asNavFor={nav1}\n                ref={slider => (slider2 = slider)}\n                slidesToShow={files.length > 5 ? 5 : files.length}\n                swipeToSlide={true}\n                focusOnSelect={true}\n                className=\"slick-slider-arrow-inner mt-1 mr-n1 mb-n2\"\n              >\n                {files.map(file => (\n                  <div className=\"cursor-pointer pr-1 outline-none\" key={file.id}>\n                    <img\n                      className=\"img-fluid fit-cover w-sm-100 h-sm-100 rounded\"\n                      src={file['src'] || file['base64']}\n                      alt={file.path}\n                    />\n                  </div>\n                ))}\n              </Slider>\n            </Fragment>\n          )}\n          {isNew && (\n            <Badge color=\"success\" pill className=\"position-absolute t-0 r-0 mr-2 mt-2 fs--2 z-index-2\">\n              New\n            </Badge>\n          )}\n        </div>\n      )}\n    </LightBoxGallery>\n  );\n};\n\nProductDetailsMedia.propTypes = { value: PropTypes.any };\n\nProductDetailsMedia.defaultProps = { value: `ProductDetailsMedia` };\n\nexport default ProductDetailsMedia;\n"]},"metadata":{},"sourceType":"module"}