{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/Dev/letter/letter-support/src/components/utilities/VerticalAlign.js\";\nimport React, { Fragment } from 'react';\nimport { Card, CardHeader, CardBody } from 'reactstrap';\nimport PageHeader from '../common/PageHeader';\nimport FalconEditor from '../common/FalconEditor';\nconst baselineCode = `<Fragment>\n  <span className=\"align-baseline\">baseline</span>\n  <span className=\"align-top\">top</span>\n  <span className=\"align-middle\">middle</span>\n  <span className=\"align-bottom\">bottom</span>\n  <span className=\"align-text-top\">text-top</span>\n  <span className=\"align-text-bottom\">text-bottom</span>\n</Fragment>`;\nconst tableCellsCode = `<Fragment>\n  <table style={{height: '100px'}}>\n    <tbody>\n      <tr>\n        <td className=\"align-baseline\">baseline</td>\n        <td className=\"align-top\">top</td>\n        <td className=\"align-middle\">middle</td>\n        <td className=\"align-bottom\">bottom</td>\n        <td className=\"align-text-top\">text-top</td>\n        <td className=\"align-text-bottom\">text-bottom</td>\n      </tr>\n    </tbody>\n  </table>\n</Fragment>`;\n\nconst VerticalAlign = () => {\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PageHeader, {\n    title: \"Vertical Align\",\n    description: \"Easily change the vertical alignment of inline, inline-block, inline-table, and table cell elements.\",\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, \"Example\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, \"Change the alignment of elements with the vertical-alignment utilities. Please note that vertical-align only affects inline, inline-block, inline-table, and table cell elements.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, \"Choose from \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }\n  }, \".align-baseline, \"), /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \".align-top, \"), /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \".align-middle, \"), /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \".align-bottom, \"), /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \".align-text-bottom, \"), \"and \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 50\n    }\n  }, \".align-text-top as needed.\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, \"Multiple links and tap targets are not recommended with stretched links. However, some\", ' ', /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"position \"), \"and \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 39\n    }\n  }, \"z-index \"), \"styles can help should this be required.\")), /*#__PURE__*/React.createElement(CardBody, {\n    className: \"bg-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FalconEditor, {\n    code: baselineCode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, \"With table cells:\"), /*#__PURE__*/React.createElement(FalconEditor, {\n    code: tableCellsCode,\n    language: \"jsx\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default VerticalAlign;","map":{"version":3,"sources":["/Users/matt/Documents/Dev/letter/letter-support/src/components/utilities/VerticalAlign.js"],"names":["React","Fragment","Card","CardHeader","CardBody","PageHeader","FalconEditor","baselineCode","tableCellsCode","VerticalAlign"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,QAA3B,QAA2C,YAA3C;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AAEA,MAAMC,YAAY,GAAI;;;;;;;YAAtB;AASA,MAAMC,cAAc,GAAI;;;;;;;;;;;;;YAAxB;;AAeA,MAAMC,aAAa,GAAG,MAAM;AAC1B,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AACE,IAAA,KAAK,EAAC,gBADR;AAEE,IAAA,WAAW,EAAC,sGAFd;AAGE,IAAA,SAAS,EAAC,MAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAME,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yLAFF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCACc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADd,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BALF,uBAKuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCALvC,CANF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+FACyF,GADzF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,uBAE4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAF5B,6CAbF,CADF,eAmBE,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAEF,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFF,eAGE,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAEC,cAApB;AAAoC,IAAA,QAAQ,EAAC,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAnBF,CANF,CADF;AAkCD,CAnCD;;AAqCA,eAAeC,aAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport { Card, CardHeader, CardBody } from 'reactstrap';\nimport PageHeader from '../common/PageHeader';\nimport FalconEditor from '../common/FalconEditor';\n\nconst baselineCode = `<Fragment>\n  <span className=\"align-baseline\">baseline</span>\n  <span className=\"align-top\">top</span>\n  <span className=\"align-middle\">middle</span>\n  <span className=\"align-bottom\">bottom</span>\n  <span className=\"align-text-top\">text-top</span>\n  <span className=\"align-text-bottom\">text-bottom</span>\n</Fragment>`;\n\nconst tableCellsCode = `<Fragment>\n  <table style={{height: '100px'}}>\n    <tbody>\n      <tr>\n        <td className=\"align-baseline\">baseline</td>\n        <td className=\"align-top\">top</td>\n        <td className=\"align-middle\">middle</td>\n        <td className=\"align-bottom\">bottom</td>\n        <td className=\"align-text-top\">text-top</td>\n        <td className=\"align-text-bottom\">text-bottom</td>\n      </tr>\n    </tbody>\n  </table>\n</Fragment>`;\n\nconst VerticalAlign = () => {\n  return (\n    <Fragment>\n      <PageHeader\n        title=\"Vertical Align\"\n        description=\"Easily change the vertical alignment of inline, inline-block, inline-table, and table cell elements.\"\n        className=\"mb-3\"\n      />\n      <Card>\n        <CardHeader>\n          <h5 className=\"mb-2\">Example</h5>\n          <p>\n            Change the alignment of elements with the vertical-alignment utilities. Please note that vertical-align only\n            affects inline, inline-block, inline-table, and table cell elements.\n          </p>\n          <p>\n            Choose from <code>.align-baseline, </code>\n            <code>.align-top, </code>\n            <code>.align-middle, </code>\n            <code>.align-bottom, </code>\n            <code>.align-text-bottom, </code>and <code>.align-text-top as needed.</code>\n          </p>\n          <p>\n            Multiple links and tap targets are not recommended with stretched links. However, some{' '}\n            <code>position </code>and <code>z-index </code>styles can help should this be required.\n          </p>\n        </CardHeader>\n        <CardBody className=\"bg-light\">\n          <FalconEditor code={baselineCode} />\n          <p className=\"mt-4\">With table cells:</p>\n          <FalconEditor code={tableCellsCode} language=\"jsx\" />\n        </CardBody>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default VerticalAlign;\n"]},"metadata":{},"sourceType":"module"}