{"ast":null,"code":"var _jsxFileName = \"/Users/greypro/Documents/Dev/letter/letter-support/src/components/page/People.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Alert, Card, CardBody, Col, CustomInput, Form, Input, Row } from 'reactstrap';\nimport Member from './Member';\nimport Loader from '../common/Loader';\nimport FalconCardHeader from '../common/FalconCardHeader';\nimport { isIterableArray } from '../../helpers/utils';\nimport useFakeFetch from '../../hooks/useFakeFetch';\nimport rawPeople from '../../data/people/people';\nimport peopleCategories from '../../data/people/peopleCategories';\n\nconst People = ({\n  peoples = rawPeople.length,\n  className\n}) => {\n  const {\n    loading,\n    data: people,\n    setData: setPeople\n  } = useFakeFetch(rawPeople);\n\n  const searchPeople = ({\n    target\n  }) => {\n    const keyword = target.value.toLowerCase();\n    const filteredResult = rawPeople.filter(person => person.name.toLowerCase().includes(keyword) || person.institution.toLowerCase().includes(keyword));\n    setPeople(keyword.length ? filteredResult : rawPeople);\n  };\n\n  const tempPeople = () => people.slice(0, peoples);\n\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FalconCardHeader, {\n    title: `Followers (${tempPeople().length})`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, isIterableArray(peopleCategories) && /*#__PURE__*/React.createElement(Form, {\n    inline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    bsSize: \"sm\",\n    placeholder: \"Search...\",\n    onChange: searchPeople,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CustomInput, {\n    type: \"select\",\n    id: \"exampleCustomSelect\",\n    name: \"customSelect\",\n    bsSize: \"sm\",\n    className: \"d-md-block d-none ml-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, peopleCategories.map((option, index) => /*#__PURE__*/React.createElement(\"option\", {\n    value: index,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, option))))), /*#__PURE__*/React.createElement(CardBody, {\n    className: \"bg-light p-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }) : isIterableArray(people) ? /*#__PURE__*/React.createElement(Row, {\n    noGutters: true,\n    className: \"text-center fs--1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, tempPeople().map((follower, index) => /*#__PURE__*/React.createElement(Col, {\n    className: className,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Member, Object.assign({}, follower, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }))))) : /*#__PURE__*/React.createElement(Row, {\n    className: \"p-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    color: \"info\",\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, \"No Followers!\")))));\n};\n\nPeople.propTypes = {\n  peoples: PropTypes.number,\n  className: PropTypes.string\n};\nPeople.defaultProps = {\n  className: 'col-6 col-md-4 col-lg-3 col-xxl-2'\n};\nexport default People;","map":{"version":3,"sources":["/Users/greypro/Documents/Dev/letter/letter-support/src/components/page/People.js"],"names":["React","PropTypes","Alert","Card","CardBody","Col","CustomInput","Form","Input","Row","Member","Loader","FalconCardHeader","isIterableArray","useFakeFetch","rawPeople","peopleCategories","People","peoples","length","className","loading","data","people","setData","setPeople","searchPeople","target","keyword","value","toLowerCase","filteredResult","filter","person","name","includes","institution","tempPeople","slice","map","option","index","follower","propTypes","number","string","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Alert, Card, CardBody, Col, CustomInput, Form, Input, Row } from 'reactstrap';\r\nimport Member from './Member';\r\nimport Loader from '../common/Loader';\r\nimport FalconCardHeader from '../common/FalconCardHeader';\r\nimport { isIterableArray } from '../../helpers/utils';\r\nimport useFakeFetch from '../../hooks/useFakeFetch';\r\nimport rawPeople from '../../data/people/people';\r\nimport peopleCategories from '../../data/people/peopleCategories';\r\n\r\nconst People = ({ peoples = rawPeople.length, className }) => {\r\n  const { loading, data: people, setData: setPeople } = useFakeFetch(rawPeople);\r\n\r\n  const searchPeople = ({ target }) => {\r\n    const keyword = target.value.toLowerCase();\r\n    const filteredResult = rawPeople.filter(\r\n      person => person.name.toLowerCase().includes(keyword) || person.institution.toLowerCase().includes(keyword)\r\n    );\r\n\r\n    setPeople(keyword.length ? filteredResult : rawPeople);\r\n  };\r\n\r\n  const tempPeople = () => people.slice(0, peoples);\r\n\r\n  return (\r\n    <Card>\r\n      <FalconCardHeader title={`Followers (${tempPeople().length})`}>\r\n        {isIterableArray(peopleCategories) && (\r\n          <Form inline>\r\n            <Input bsSize=\"sm\" placeholder=\"Search...\" onChange={searchPeople} />\r\n            <CustomInput\r\n              type=\"select\"\r\n              id=\"exampleCustomSelect\"\r\n              name=\"customSelect\"\r\n              bsSize=\"sm\"\r\n              className=\"d-md-block d-none ml-2\"\r\n            >\r\n              {peopleCategories.map((option, index) => (\r\n                <option value={index} key={index}>\r\n                  {option}\r\n                </option>\r\n              ))}\r\n            </CustomInput>\r\n          </Form>\r\n        )}\r\n      </FalconCardHeader>\r\n      <CardBody className=\"bg-light p-0\">\r\n        {loading ? (\r\n          <Loader />\r\n        ) : isIterableArray(people) ? (\r\n          <Row noGutters className=\"text-center fs--1\">\r\n            {tempPeople().map((follower, index) => (\r\n              <Col className={className} key={index}>\r\n                <Member {...follower} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        ) : (\r\n          <Row className=\"p-card\">\r\n            <Col>\r\n              <Alert color=\"info\" className=\"mb-0\">\r\n                No Followers!\r\n              </Alert>\r\n            </Col>\r\n          </Row>\r\n        )}\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nPeople.propTypes = {\r\n  peoples: PropTypes.number,\r\n  className: PropTypes.string\r\n};\r\n\r\nPeople.defaultProps = {\r\n  className: 'col-6 col-md-4 col-lg-3 col-xxl-2'\r\n};\r\n\r\nexport default People;\r\n"]},"metadata":{},"sourceType":"module"}