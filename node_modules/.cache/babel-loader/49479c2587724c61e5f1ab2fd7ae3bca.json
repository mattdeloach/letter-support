{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/Dev/letter/letter-support/src/components/page/Notifications.js\";\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Alert, Button, Card, CardBody, Col, CustomInput, Form, Input, Label, ListGroup, ListGroupItem, Modal, ModalBody, ModalFooter, ModalHeader, Row } from 'reactstrap';\nimport Notification from '../notification/Notification';\nimport FalconCardHeader from '../common/FalconCardHeader';\nimport Loader from '../common/Loader';\nimport { isIterableArray } from '../../helpers/utils';\nimport { notifications as rawNotifications } from '../../data/notification/notification';\nimport useFakeFetch from '../../hooks/useFakeFetch';\n\nconst NotificationSettings = () => {\n  const [check1, setCheck1] = useState(true);\n  const [check2, setCheck2] = useState(true);\n  const [check3, setCheck3] = useState(true);\n  const listGroupItemClasses = 'd-flex justify-content-between align-items-center py-2 px-0 border-200';\n  return /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CustomInput, {\n    type: \"radio\",\n    id: \"exampleCustomRadio\",\n    name: \"customRadio\",\n    label: \"Get a notification each time there is activity on your page or an important update.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CustomInput, {\n    type: \"radio\",\n    id: \"exampleCustomRadio2\",\n    name: \"customRadio\",\n    label: \"Get one notification every 12-24 hours on all activity and updates.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CustomInput, {\n    type: \"radio\",\n    id: \"exampleCustomRadio3\",\n    name: \"customRadio\",\n    label: \"Off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"fs-0 mb-3 mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"Edit your notification settings for: \"), /*#__PURE__*/React.createElement(ListGroup, {\n    flush: true,\n    className: \"mb-4 fs--1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ListGroupItem, {\n    className: listGroupItemClasses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, \"New Mention of Page \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    check: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"checkbox\",\n    checked: check1,\n    onChange: () => setCheck1(!check1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(ListGroupItem, {\n    className: listGroupItemClasses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \"New Comments on page post\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    check: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"checkbox\",\n    checked: check2,\n    onChange: () => setCheck2(!check2),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(ListGroupItem, {\n    className: listGroupItemClasses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, \"Edits to Comments you have written\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    check: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"checkbox\",\n    checked: check3,\n    onChange: () => setCheck3(!check3),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(CustomInput, {\n    type: \"checkbox\",\n    id: \"customCheckboxActivity\",\n    label: \"Allow notifications from your followers activity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CustomInput, {\n    type: \"checkbox\",\n    id: \"customCheckboxAssociationsGroups\",\n    label: \"Groups\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CustomInput, {\n    type: \"checkbox\",\n    id: \"customCheckboxAssociations\",\n    label: \"Associations\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst Notifications = ({\n  items = rawNotifications.length,\n  children\n}) => {\n  const {\n    loading,\n    data: notifications,\n    setData: setNotifications\n  } = useFakeFetch(rawNotifications);\n  const [settingsIsOpen, setSettingsIsOpen] = useState(false);\n\n  const toggleSettingsModal = () => setSettingsIsOpen(!settingsIsOpen);\n\n  const markAsRead = e => {\n    e.preventDefault();\n    const updatedNotifications = notifications.map(notification => {\n      if (!notification.hasOwnProperty('unread')) return notification;\n      return { ...notification,\n        unread: false\n      };\n    });\n    setNotifications(updatedNotifications);\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    className: \"h-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FalconCardHeader, {\n    title: \"Your Notifications\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fs--1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: \"text-sans-serif\",\n    to: \"#!\",\n    onClick: markAsRead,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, \"Mark all as read\"), /*#__PURE__*/React.createElement(Link, {\n    className: \"text-sans-serif ml-2 ml-sm-3\",\n    to: \"#!\",\n    onClick: toggleSettingsModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, \"Notification settings\")), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: settingsIsOpen,\n    toggle: toggleSettingsModal,\n    centered: true,\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, \"Notification Settings\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(NotificationSettings, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    size: \"sm\",\n    onClick: toggleSettingsModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    size: \"sm\",\n    onClick: toggleSettingsModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, \"Update\")))), /*#__PURE__*/React.createElement(CardBody, {\n    className: \"p-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }) : isIterableArray(notifications) ? notifications.slice(0, items).map((notification, index) => /*#__PURE__*/React.createElement(Notification, Object.assign({}, notification, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 70\n    }\n  }))) : /*#__PURE__*/React.createElement(Row, {\n    className: \"p-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    color: \"info\",\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  }, \"No notifications found!\")))), children);\n};\n\nNotifications.propTypes = {\n  items: PropTypes.number,\n  children: PropTypes.node\n};\nexport default Notifications;","map":{"version":3,"sources":["/Users/matt/Documents/Dev/letter/letter-support/src/components/page/Notifications.js"],"names":["React","useState","Link","PropTypes","Alert","Button","Card","CardBody","Col","CustomInput","Form","Input","Label","ListGroup","ListGroupItem","Modal","ModalBody","ModalFooter","ModalHeader","Row","Notification","FalconCardHeader","Loader","isIterableArray","notifications","rawNotifications","useFakeFetch","NotificationSettings","check1","setCheck1","check2","setCheck2","check3","setCheck3","listGroupItemClasses","Notifications","items","length","children","loading","data","setData","setNotifications","settingsIsOpen","setSettingsIsOpen","toggleSettingsModal","markAsRead","e","preventDefault","updatedNotifications","map","notification","hasOwnProperty","unread","slice","index","propTypes","number","node"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Alert,\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  CustomInput,\r\n  Form,\r\n  Input,\r\n  Label,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Row\r\n} from 'reactstrap';\r\nimport Notification from '../notification/Notification';\r\nimport FalconCardHeader from '../common/FalconCardHeader';\r\nimport Loader from '../common/Loader';\r\nimport { isIterableArray } from '../../helpers/utils';\r\nimport { notifications as rawNotifications } from '../../data/notification/notification';\r\nimport useFakeFetch from '../../hooks/useFakeFetch';\r\n\r\nconst NotificationSettings = () => {\r\n  const [check1, setCheck1] = useState(true);\r\n  const [check2, setCheck2] = useState(true);\r\n  const [check3, setCheck3] = useState(true);\r\n\r\n  const listGroupItemClasses = 'd-flex justify-content-between align-items-center py-2 px-0 border-200';\r\n\r\n  return (\r\n    <Form>\r\n      <CustomInput\r\n        type=\"radio\"\r\n        id=\"exampleCustomRadio\"\r\n        name=\"customRadio\"\r\n        label=\"Get a notification each time there is activity on your page or an important update.\"\r\n      />\r\n      <CustomInput\r\n        type=\"radio\"\r\n        id=\"exampleCustomRadio2\"\r\n        name=\"customRadio\"\r\n        label=\"Get one notification every 12-24 hours on all activity and updates.\"\r\n      />\r\n      <CustomInput type=\"radio\" id=\"exampleCustomRadio3\" name=\"customRadio\" label=\"Off\" />\r\n\r\n      <h5 className=\"fs-0 mb-3 mt-4\">Edit your notification settings for: </h5>\r\n\r\n      <ListGroup flush className=\"mb-4 fs--1\">\r\n        <ListGroupItem className={listGroupItemClasses}>\r\n          <span>New Mention of Page </span>\r\n          <span>\r\n            <Label check />\r\n            <Input type=\"checkbox\" checked={check1} onChange={() => setCheck1(!check1)} />\r\n          </span>\r\n        </ListGroupItem>\r\n        <ListGroupItem className={listGroupItemClasses}>\r\n          <span>New Comments on page post</span>\r\n          <span>\r\n            <Label check />\r\n            <Input type=\"checkbox\" checked={check2} onChange={() => setCheck2(!check2)} />\r\n          </span>\r\n        </ListGroupItem>\r\n        <ListGroupItem className={listGroupItemClasses}>\r\n          <span>Edits to Comments you have written</span>\r\n          <span>\r\n            <Label check />\r\n            <Input type=\"checkbox\" checked={check3} onChange={() => setCheck3(!check3)} />\r\n          </span>\r\n        </ListGroupItem>\r\n      </ListGroup>\r\n\r\n      <CustomInput\r\n        type=\"checkbox\"\r\n        id=\"customCheckboxActivity\"\r\n        label=\"Allow notifications from your followers activity\"\r\n      />\r\n      <CustomInput type=\"checkbox\" id=\"customCheckboxAssociationsGroups\" label=\"Groups\" />\r\n      <CustomInput type=\"checkbox\" id=\"customCheckboxAssociations\" label=\"Associations\" />\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst Notifications = ({ items = rawNotifications.length, children }) => {\r\n  const { loading, data: notifications, setData: setNotifications } = useFakeFetch(rawNotifications);\r\n  const [settingsIsOpen, setSettingsIsOpen] = useState(false);\r\n\r\n  const toggleSettingsModal = () => setSettingsIsOpen(!settingsIsOpen);\r\n\r\n  const markAsRead = e => {\r\n    e.preventDefault();\r\n    const updatedNotifications = notifications.map(notification => {\r\n      if (!notification.hasOwnProperty('unread')) return notification;\r\n\r\n      return {\r\n        ...notification,\r\n        unread: false\r\n      };\r\n    });\r\n\r\n    setNotifications(updatedNotifications);\r\n  };\r\n\r\n  return (\r\n    <Card className=\"h-100\">\r\n      <FalconCardHeader title=\"Your Notifications\">\r\n        <div className=\"fs--1\">\r\n          <Link className=\"text-sans-serif\" to=\"#!\" onClick={markAsRead}>\r\n            Mark all as read\r\n          </Link>\r\n          <Link className=\"text-sans-serif ml-2 ml-sm-3\" to=\"#!\" onClick={toggleSettingsModal}>\r\n            Notification settings\r\n          </Link>\r\n        </div>\r\n\r\n        <Modal isOpen={settingsIsOpen} toggle={toggleSettingsModal} centered size=\"lg\">\r\n          <ModalHeader>Notification Settings</ModalHeader>\r\n          <ModalBody>\r\n            <NotificationSettings />\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"secondary\" size=\"sm\" onClick={toggleSettingsModal}>\r\n              Cancel\r\n            </Button>\r\n            <Button color=\"primary\" size=\"sm\" onClick={toggleSettingsModal}>\r\n              Update\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </FalconCardHeader>\r\n      <CardBody className=\"p-0\">\r\n        {loading ? (\r\n          <Loader />\r\n        ) : isIterableArray(notifications) ? (\r\n          notifications.slice(0, items).map((notification, index) => <Notification {...notification} key={index} />)\r\n        ) : (\r\n          <Row className=\"p-card\">\r\n            <Col>\r\n              <Alert color=\"info\" className=\"mb-0\">\r\n                No notifications found!\r\n              </Alert>\r\n            </Col>\r\n          </Row>\r\n        )}\r\n      </CardBody>\r\n      {children}\r\n    </Card>\r\n  );\r\n};\r\n\r\nNotifications.propTypes = {\r\n  items: PropTypes.number,\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default Notifications;\r\n"]},"metadata":{},"sourceType":"module"}