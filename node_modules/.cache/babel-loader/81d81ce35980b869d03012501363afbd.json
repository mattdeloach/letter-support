{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/Dev/letter/letter-support/src/components/kanban/TaskCard.js\";\nimport React, { useContext } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { Card, CardBody, Badge, CardImg, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, UncontrolledTooltip } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport Avatar from '../common/Avatar';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { KanbanContext } from '../../context/Context';\n\nconst TaskCard = ({\n  taskCardItemId,\n  taskCard,\n  taskCardImage,\n  members,\n  taskCardIndex\n}) => {\n  const {\n    getItemStyle,\n    setModalContent,\n    setModal\n  } = useContext(KanbanContext);\n  return /*#__PURE__*/React.createElement(Draggable, {\n    draggableId: `draggableId${taskCardItemId}`,\n    index: taskCardIndex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, (provided, snapshot) => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: \"kanban-item\",\n    ref: provided.innerRef\n  }, provided.draggableProps, provided.dragHandleProps, {\n    style: provided.draggableProps.style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    className: \"kanban-item-card hover-actions-trigger \",\n    style: getItemStyle(snapshot.isDragging),\n    onClick: () => {\n      setModalContent({\n        taskCard,\n        taskCardImage\n      });\n      setModal(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, taskCardImage && /*#__PURE__*/React.createElement(CardImg, {\n    top: true,\n    width: \"100%\",\n    src: taskCardImage.url,\n    className: \"overflow-hidden position-relative\",\n    alt: \"Card image cap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, taskCard.labels && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, taskCard.labels.map((label, index) => /*#__PURE__*/React.createElement(Badge, {\n    className: `badge-soft-${label.color} d-inline-block py-1 mr-1 mb-1`,\n    key: index + 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, label.text))), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-0 font-weight-medium text-sans-serif\",\n    dangerouslySetInnerHTML: {\n      __html: taskCard.title\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }), (taskCard.members || taskCard.attachments || taskCard.checklist) && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kanban-item-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 19\n    }\n  }, taskCard.members && members.find(member => member.id === 1) && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: \"eye\",\n    className: \"mr-2\",\n    id: `cardId-${taskCard.id}`,\n    transform: \"grow-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(UncontrolledTooltip, {\n    target: `cardId-${taskCard.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }, \"You're assigned in this card\")), taskCard.attachments && /*#__PURE__*/React.createElement(\"span\", {\n    id: `attachments-${taskCard.id}`,\n    className: \"mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: \"paperclip\",\n    className: \"mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }, taskCard.attachments.length), /*#__PURE__*/React.createElement(UncontrolledTooltip, {\n    target: `attachments-${taskCard.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  }, \"Attachments\")), taskCard.checklist && /*#__PURE__*/React.createElement(\"span\", {\n    id: `Checklist-${taskCard.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: \"check\",\n    className: \"mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  }, taskCard.checklist.completed, \"/\", taskCard.checklist.totalCount), /*#__PURE__*/React.createElement(UncontrolledTooltip, {\n    target: `Checklist-${taskCard.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  }, \"Checklist\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 19\n    }\n  }, taskCard.members && members.map((member, index) => /*#__PURE__*/React.createElement(Link, {\n    to: \"#!\",\n    className: index > 0 ? 'ml-n1 p-0' : 'p-0',\n    key: index,\n    id: `member-${member.id}-${taskCard.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    src: member.avatar.src,\n    size: \"l\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(UncontrolledTooltip, {\n    target: `member-${member.id}-${taskCard.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 27\n    }\n  }, member.name))))), /*#__PURE__*/React.createElement(UncontrolledDropdown, {\n    className: \"position-absolute text-sans-serif t-0 r-0 mt-card mr-card hover-actions\",\n    onClick: e => {\n      e.stopPropagation();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(DropdownToggle, {\n    color: \"falcon-default\",\n    size: \"sm\",\n    className: \"py-0 px-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: \"ellipsis-h\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(DropdownMenu, {\n    right: true,\n    className: \"py-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DropdownItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 19\n    }\n  }, \"Add Card\"), /*#__PURE__*/React.createElement(DropdownItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 19\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(DropdownItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 19\n    }\n  }, \"Copy link\"), /*#__PURE__*/React.createElement(DropdownItem, {\n    divider: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(DropdownItem, {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 19\n    }\n  }, \"Remove\")))))));\n};\n\nexport default TaskCard;","map":{"version":3,"sources":["/Users/matt/Documents/Dev/letter/letter-support/src/components/kanban/TaskCard.js"],"names":["React","useContext","Draggable","Card","CardBody","Badge","CardImg","UncontrolledDropdown","DropdownToggle","DropdownMenu","DropdownItem","UncontrolledTooltip","Link","Avatar","FontAwesomeIcon","KanbanContext","TaskCard","taskCardItemId","taskCard","taskCardImage","members","taskCardIndex","getItemStyle","setModalContent","setModal","provided","snapshot","innerRef","draggableProps","dragHandleProps","style","isDragging","url","labels","map","label","index","color","text","__html","title","attachments","checklist","find","member","id","length","completed","totalCount","avatar","src","name","e","stopPropagation"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Badge,\r\n  CardImg,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  UncontrolledTooltip\r\n} from 'reactstrap';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport Avatar from '../common/Avatar';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { KanbanContext } from '../../context/Context';\r\n\r\nconst TaskCard = ({ taskCardItemId, taskCard, taskCardImage, members, taskCardIndex }) => {\r\n  const { getItemStyle, setModalContent, setModal } = useContext(KanbanContext);\r\n  return (\r\n    <Draggable draggableId={`draggableId${taskCardItemId}`} index={taskCardIndex}>\r\n      {(provided, snapshot) => (\r\n        <div\r\n          className=\"kanban-item\"\r\n          ref={provided.innerRef}\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n          style={provided.draggableProps.style}\r\n        >\r\n          <Card\r\n            className=\"kanban-item-card hover-actions-trigger \"\r\n            style={getItemStyle(snapshot.isDragging)}\r\n            onClick={() => {\r\n              setModalContent({ taskCard, taskCardImage });\r\n              setModal(true);\r\n            }}\r\n          >\r\n            {taskCardImage && (\r\n              <CardImg\r\n                top\r\n                width=\"100%\"\r\n                src={taskCardImage.url}\r\n                className=\"overflow-hidden position-relative\"\r\n                alt=\"Card image cap\"\r\n              />\r\n            )}\r\n\r\n            <CardBody>\r\n              {taskCard.labels && (\r\n                <div className=\"mb-2\">\r\n                  {taskCard.labels.map((label, index) => (\r\n                    <Badge className={`badge-soft-${label.color} d-inline-block py-1 mr-1 mb-1`} key={index + 10}>\r\n                      {label.text}\r\n                    </Badge>\r\n                  ))}\r\n                </div>\r\n              )}\r\n              <p\r\n                className=\"mb-0 font-weight-medium text-sans-serif\"\r\n                dangerouslySetInnerHTML={{ __html: taskCard.title }}\r\n              />\r\n              {(taskCard.members || taskCard.attachments || taskCard.checklist) && (\r\n                <div className=\"kanban-item-footer\">\r\n                  <div className=\"text-500\">\r\n                    {taskCard.members && members.find(member => member.id === 1) && (\r\n                      <>\r\n                        <FontAwesomeIcon icon=\"eye\" className=\"mr-2\" id={`cardId-${taskCard.id}`} transform=\"grow-1\" />\r\n                        <UncontrolledTooltip target={`cardId-${taskCard.id}`}>\r\n                          You're assigned in this card\r\n                        </UncontrolledTooltip>\r\n                      </>\r\n                    )}\r\n                    {taskCard.attachments && (\r\n                      <span id={`attachments-${taskCard.id}`} className=\"mr-2\">\r\n                        <FontAwesomeIcon icon=\"paperclip\" className=\"mr-1\" />\r\n                        <span>{taskCard.attachments.length}</span>\r\n                        <UncontrolledTooltip target={`attachments-${taskCard.id}`}>Attachments</UncontrolledTooltip>\r\n                      </span>\r\n                    )}\r\n                    {taskCard.checklist && (\r\n                      <span id={`Checklist-${taskCard.id}`}>\r\n                        <FontAwesomeIcon icon=\"check\" className=\"mr-1\" />\r\n                        <span>\r\n                          {taskCard.checklist.completed}/{taskCard.checklist.totalCount}\r\n                        </span>\r\n                        <UncontrolledTooltip target={`Checklist-${taskCard.id}`}>Checklist</UncontrolledTooltip>\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                  <div>\r\n                    {taskCard.members &&\r\n                      members.map((member, index) => (\r\n                        <Link\r\n                          to=\"#!\"\r\n                          className={index > 0 ? 'ml-n1 p-0' : 'p-0'}\r\n                          key={index}\r\n                          id={`member-${member.id}-${taskCard.id}`}\r\n                        >\r\n                          <Avatar src={member.avatar.src} size=\"l\" />\r\n                          <UncontrolledTooltip target={`member-${member.id}-${taskCard.id}`}>\r\n                            {member.name}\r\n                          </UncontrolledTooltip>\r\n                        </Link>\r\n                      ))}\r\n                  </div>\r\n                </div>\r\n              )}\r\n              <UncontrolledDropdown\r\n                className=\"position-absolute text-sans-serif t-0 r-0 mt-card mr-card hover-actions\"\r\n                onClick={e => {\r\n                  e.stopPropagation();\r\n                }}\r\n              >\r\n                <DropdownToggle color=\"falcon-default\" size=\"sm\" className=\"py-0 px-2\">\r\n                  <FontAwesomeIcon icon=\"ellipsis-h\" />\r\n                </DropdownToggle>\r\n                <DropdownMenu right className=\"py-0\">\r\n                  <DropdownItem>Add Card</DropdownItem>\r\n                  <DropdownItem>Edit</DropdownItem>\r\n                  <DropdownItem>Copy link</DropdownItem>\r\n                  <DropdownItem divider />\r\n                  <DropdownItem className=\"text-danger\">Remove</DropdownItem>\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nexport default TaskCard;\r\n"]},"metadata":{},"sourceType":"module"}