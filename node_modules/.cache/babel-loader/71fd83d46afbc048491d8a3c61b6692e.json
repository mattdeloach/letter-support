{"ast":null,"code":"import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport L from 'leaflet';\nimport 'leaflet.markercluster/dist/leaflet.markercluster';\nimport 'leaflet.markercluster/dist/MarkerCluster.css';\nimport 'leaflet.markercluster/dist/MarkerCluster.Default.css';\nimport { useLeaflet } from 'react-leaflet';\nimport { customMarker } from './constants';\nconst mcg = L.markerClusterGroup({\n  chunkedLoading: false,\n  spiderfyOnMaxZoom: false\n});\n\nconst MarkerCluster = ({\n  markers\n}) => {\n  const {\n    map\n  } = useLeaflet();\n  useEffect(() => {\n    mcg.clearLayers();\n    markers.map(({\n      lat,\n      long,\n      name,\n      street,\n      location\n    }) => {\n      const popupContent = `\n        <h6 class=\"mb-1\">${name}</h6>\n        <p class=\"m-0 text-500\">${street}, ${location}</p>\n      `;\n      return L.marker(new L.LatLng(lat, long), {\n        icon: customMarker\n      }).addTo(mcg).bindPopup(popupContent);\n    }); // optionally center the map around the markers\n    // map.fitBounds(mcg.getBounds());\n    // // add the marker cluster group to the map\n\n    map.addLayer(mcg);\n  }, [markers, map]);\n  return null;\n};\n\nMarkerCluster.propTypes = {\n  markers: PropTypes.arrayOf(PropTypes.shape({\n    lat: PropTypes.number.isRequired,\n    long: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    street: PropTypes.string,\n    location: PropTypes.string\n  }).isRequired).isRequired\n};\nexport default MarkerCluster;","map":{"version":3,"sources":["/Users/greypro/Documents/Dev/letter/letter-support/src/components/dashboard/MarkerCluster.js"],"names":["useEffect","PropTypes","L","useLeaflet","customMarker","mcg","markerClusterGroup","chunkedLoading","spiderfyOnMaxZoom","MarkerCluster","markers","map","clearLayers","lat","long","name","street","location","popupContent","marker","LatLng","icon","addTo","bindPopup","addLayer","propTypes","arrayOf","shape","number","isRequired","string"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,CAAP,MAAc,SAAd;AACA,OAAO,kDAAP;AACA,OAAO,8CAAP;AACA,OAAO,sDAAP;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,YAAT,QAA6B,aAA7B;AAEA,MAAMC,GAAG,GAAGH,CAAC,CAACI,kBAAF,CAAqB;AAC/BC,EAAAA,cAAc,EAAE,KADe;AAE/BC,EAAAA,iBAAiB,EAAE;AAFY,CAArB,CAAZ;;AAKA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AACrC,QAAM;AAAEC,IAAAA;AAAF,MAAUR,UAAU,EAA1B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,GAAG,CAACO,WAAJ;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,CAAC;AAAEE,MAAAA,GAAF;AAAOC,MAAAA,IAAP;AAAaC,MAAAA,IAAb;AAAmBC,MAAAA,MAAnB;AAA2BC,MAAAA;AAA3B,KAAD,KAA2C;AACrD,YAAMC,YAAY,GAAI;2BACDH,IAAK;kCACEC,MAAO,KAAIC,QAAS;OAFhD;AAIA,aAAOf,CAAC,CAACiB,MAAF,CAAS,IAAIjB,CAAC,CAACkB,MAAN,CAAaP,GAAb,EAAkBC,IAAlB,CAAT,EAAkC;AACvCO,QAAAA,IAAI,EAAEjB;AADiC,OAAlC,EAGJkB,KAHI,CAGEjB,GAHF,EAIJkB,SAJI,CAIML,YAJN,CAAP;AAKD,KAVD,EAFc,CAcd;AACA;AACA;;AACAP,IAAAA,GAAG,CAACa,QAAJ,CAAanB,GAAb;AACD,GAlBQ,EAkBN,CAACK,OAAD,EAAUC,GAAV,CAlBM,CAAT;AAoBA,SAAO,IAAP;AACD,CAxBD;;AA0BAF,aAAa,CAACgB,SAAd,GAA0B;AACxBf,EAAAA,OAAO,EAAET,SAAS,CAACyB,OAAV,CACPzB,SAAS,CAAC0B,KAAV,CAAgB;AACdd,IAAAA,GAAG,EAAEZ,SAAS,CAAC2B,MAAV,CAAiBC,UADR;AAEdf,IAAAA,IAAI,EAAEb,SAAS,CAAC2B,MAAV,CAAiBC,UAFT;AAGdd,IAAAA,IAAI,EAAEd,SAAS,CAAC6B,MAAV,CAAiBD,UAHT;AAIdb,IAAAA,MAAM,EAAEf,SAAS,CAAC6B,MAJJ;AAKdb,IAAAA,QAAQ,EAAEhB,SAAS,CAAC6B;AALN,GAAhB,EAMGD,UAPI,EAQPA;AATsB,CAA1B;AAYA,eAAepB,aAAf","sourcesContent":["import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport L from 'leaflet';\nimport 'leaflet.markercluster/dist/leaflet.markercluster';\nimport 'leaflet.markercluster/dist/MarkerCluster.css';\nimport 'leaflet.markercluster/dist/MarkerCluster.Default.css';\nimport { useLeaflet } from 'react-leaflet';\nimport { customMarker } from './constants';\n\nconst mcg = L.markerClusterGroup({\n  chunkedLoading: false,\n  spiderfyOnMaxZoom: false\n});\n\nconst MarkerCluster = ({ markers }) => {\n  const { map } = useLeaflet();\n\n  useEffect(() => {\n    mcg.clearLayers();\n    markers.map(({ lat, long, name, street, location }) => {\n      const popupContent = `\n        <h6 class=\"mb-1\">${name}</h6>\n        <p class=\"m-0 text-500\">${street}, ${location}</p>\n      `;\n      return L.marker(new L.LatLng(lat, long), {\n        icon: customMarker\n      })\n        .addTo(mcg)\n        .bindPopup(popupContent);\n    });\n\n    // optionally center the map around the markers\n    // map.fitBounds(mcg.getBounds());\n    // // add the marker cluster group to the map\n    map.addLayer(mcg);\n  }, [markers, map]);\n\n  return null;\n};\n\nMarkerCluster.propTypes = {\n  markers: PropTypes.arrayOf(\n    PropTypes.shape({\n      lat: PropTypes.number.isRequired,\n      long: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      street: PropTypes.string,\n      location: PropTypes.string\n    }).isRequired\n  ).isRequired\n};\n\nexport default MarkerCluster;\n"]},"metadata":{},"sourceType":"module"}