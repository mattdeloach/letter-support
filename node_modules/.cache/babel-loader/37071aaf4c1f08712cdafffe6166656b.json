{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/Dev/letter/letter-support/src/layouts/navbar/NavbarTopDropDownMenus.js\";\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport NavbarDropdown from './NavbarDropdown';\nimport NavbarDropdownComponents from './NavbarDropdownComponents';\nimport { authenticationRoutes, chatRoutes, componentRoutes, ECommerceRoutes, emailRoutes, homeRoutes, pageRoutes, pluginRoutes, utilityRoutes, widgetsRoutes, kanbanRoutes, calenderRoutes } from '../../routes';\nimport { NavItem } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport { breakpoints, getPageName } from '../../helpers/utils';\nimport { navbarBreakPoint, topNavbarBreakpoint } from '../../config';\nimport AppContext from '../../context/Context';\n\nconst NavbarTopDropDownMenus = ({\n  setNavbarCollapsed,\n  setShowBurgerMenu\n}) => {\n  const {\n    isCombo,\n    isTopNav\n  } = useContext(AppContext);\n  const components = [componentRoutes, pluginRoutes, utilityRoutes];\n  const pages = [pageRoutes, calenderRoutes, kanbanRoutes, widgetsRoutes, chatRoutes, emailRoutes, ECommerceRoutes];\n\n  const handleSetNavbarCollapsed = () => {\n    const windowWidth = window.innerWidth;\n    isTopNav && !isCombo && windowWidth < breakpoints[topNavbarBreakpoint] && setNavbarCollapsed(false);\n    isCombo && windowWidth < breakpoints[navbarBreakPoint] && setShowBurgerMenu(false);\n  };\n\n  const isLanding = getPageName('landing');\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(NavbarDropdown, {\n    title: homeRoutes.name,\n    items: homeRoutes.children,\n    handleSetNavbarCollapsed: handleSetNavbarCollapsed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(NavbarDropdown, {\n    title: pageRoutes.name,\n    items: pages,\n    handleSetNavbarCollapsed: handleSetNavbarCollapsed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(NavbarDropdownComponents, {\n    title: componentRoutes.name,\n    items: components,\n    handleSetNavbarCollapsed: handleSetNavbarCollapsed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(NavbarDropdown, {\n    title: authenticationRoutes.name,\n    items: authenticationRoutes.children,\n    handleSetNavbarCollapsed: handleSetNavbarCollapsed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), isTopNav && !isLanding && /*#__PURE__*/React.createElement(NavItem, {\n    onClick: handleSetNavbarCollapsed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: \"nav-link\",\n    to: \"/documentation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, \"Documentation\")), isLanding && /*#__PURE__*/React.createElement(NavItem, {\n    onClick: handleSetNavbarCollapsed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: \"nav-link\",\n    to: \"/changelog\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, \"Changelog\")));\n};\n\nNavbarTopDropDownMenus.propTypes = {\n  setNavbarCollapsed: PropTypes.func.isRequired\n};\nexport default NavbarTopDropDownMenus;","map":{"version":3,"sources":["/Users/matt/Documents/Dev/letter/letter-support/src/layouts/navbar/NavbarTopDropDownMenus.js"],"names":["React","useContext","PropTypes","NavbarDropdown","NavbarDropdownComponents","authenticationRoutes","chatRoutes","componentRoutes","ECommerceRoutes","emailRoutes","homeRoutes","pageRoutes","pluginRoutes","utilityRoutes","widgetsRoutes","kanbanRoutes","calenderRoutes","NavItem","NavLink","breakpoints","getPageName","navbarBreakPoint","topNavbarBreakpoint","AppContext","NavbarTopDropDownMenus","setNavbarCollapsed","setShowBurgerMenu","isCombo","isTopNav","components","pages","handleSetNavbarCollapsed","windowWidth","window","innerWidth","isLanding","name","children","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport NavbarDropdown from './NavbarDropdown';\r\nimport NavbarDropdownComponents from './NavbarDropdownComponents';\r\nimport {\r\n  authenticationRoutes,\r\n  chatRoutes,\r\n  componentRoutes,\r\n  ECommerceRoutes,\r\n  emailRoutes,\r\n  homeRoutes,\r\n  pageRoutes,\r\n  pluginRoutes,\r\n  utilityRoutes,\r\n  widgetsRoutes,\r\n  kanbanRoutes,\r\n  calenderRoutes\r\n} from '../../routes';\r\nimport { NavItem } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { breakpoints, getPageName } from '../../helpers/utils';\r\nimport { navbarBreakPoint, topNavbarBreakpoint } from '../../config';\r\nimport AppContext from '../../context/Context';\r\n\r\nconst NavbarTopDropDownMenus = ({ setNavbarCollapsed, setShowBurgerMenu }) => {\r\n  const { isCombo, isTopNav } = useContext(AppContext);\r\n\r\n  const components = [componentRoutes, pluginRoutes, utilityRoutes];\r\n\r\n  const pages = [pageRoutes, calenderRoutes, kanbanRoutes, widgetsRoutes, chatRoutes, emailRoutes, ECommerceRoutes];\r\n\r\n  const handleSetNavbarCollapsed = () => {\r\n    const windowWidth = window.innerWidth;\r\n    isTopNav && !isCombo && windowWidth < breakpoints[topNavbarBreakpoint] && setNavbarCollapsed(false);\r\n    isCombo && windowWidth < breakpoints[navbarBreakPoint] && setShowBurgerMenu(false);\r\n  };\r\n  const isLanding = getPageName('landing');\r\n  return (\r\n    <>\r\n      <NavbarDropdown\r\n        title={homeRoutes.name}\r\n        items={homeRoutes.children}\r\n        handleSetNavbarCollapsed={handleSetNavbarCollapsed}\r\n      />\r\n      <NavbarDropdown title={pageRoutes.name} items={pages} handleSetNavbarCollapsed={handleSetNavbarCollapsed} />\r\n      <NavbarDropdownComponents\r\n        title={componentRoutes.name}\r\n        items={components}\r\n        handleSetNavbarCollapsed={handleSetNavbarCollapsed}\r\n      />\r\n      <NavbarDropdown\r\n        title={authenticationRoutes.name}\r\n        items={authenticationRoutes.children}\r\n        handleSetNavbarCollapsed={handleSetNavbarCollapsed}\r\n      />\r\n\r\n      {isTopNav && !isLanding && (\r\n        <NavItem onClick={handleSetNavbarCollapsed}>\r\n          <NavLink className=\"nav-link\" to=\"/documentation\">\r\n            Documentation\r\n          </NavLink>\r\n        </NavItem>\r\n      )}\r\n      {isLanding && (\r\n        <NavItem onClick={handleSetNavbarCollapsed}>\r\n          <NavLink className=\"nav-link\" to=\"/changelog\">\r\n            Changelog\r\n          </NavLink>\r\n        </NavItem>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nNavbarTopDropDownMenus.propTypes = { setNavbarCollapsed: PropTypes.func.isRequired };\r\n\r\nexport default NavbarTopDropDownMenus;\r\n"]},"metadata":{},"sourceType":"module"}