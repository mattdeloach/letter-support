{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/Dev/letter/letter-support/src/components/utilities/Clearfix.js\";\nimport React, { Fragment } from 'react';\nimport { Button, Card, CardBody } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport PageHeader from '../common/PageHeader';\nimport FalconEditor from '../common/FalconEditor';\nconst clearfixCode = `<div className=\"clearfix\">...</div>`;\nconst clearfixButtonCode = `<div className=\"bg-info clearfix\">\n  <button className=\"btn btn-secondary float-left\" type=\"button\">Example Button floated left</button>\n  <button className=\"btn btn-secondary float-right\" type=\"button\">Example Button floated right</button>\n</div>`;\n\nconst Clearfix = () => /*#__PURE__*/React.createElement(Fragment, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(PageHeader, {\n  title: \"Clearfix\",\n  description: \"Quickly and easily clear floated content within a container by adding a clearfix utility.\",\n  className: \"mb-3\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Button, {\n  tag: \"a\",\n  href: \"https://reactstrap.github.io/utilities/clearfix\",\n  target: \"_blank\",\n  color: \"link\",\n  size: \"sm\",\n  className: \"pl-0\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 7\n  }\n}, \"Clearfix on reactstrap\", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n  icon: \"chevron-right\",\n  className: \"ml-1 fs--2\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }\n}))), /*#__PURE__*/React.createElement(Card, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(CardBody, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }\n}, \"Easily clear floats by adding .clearfix to the parent element. Can also be used as a mixin.\"), /*#__PURE__*/React.createElement(FalconEditor, {\n  code: clearfixCode,\n  hidePreview: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(\"p\", {\n  className: \"mt-4\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }\n}, \"The following example shows how the clearfix can be used. Without the clearfix the wrapping div would not span around the buttons which would cause a broken layout.\"), /*#__PURE__*/React.createElement(FalconEditor, {\n  code: clearfixButtonCode,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }\n}))));\n\nexport default Clearfix;","map":{"version":3,"sources":["/Users/matt/Documents/Dev/letter/letter-support/src/components/utilities/Clearfix.js"],"names":["React","Fragment","Button","Card","CardBody","FontAwesomeIcon","PageHeader","FalconEditor","clearfixCode","clearfixButtonCode","Clearfix"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,QAAvB,QAAuC,YAAvC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AAEA,MAAMC,YAAY,GAAI,qCAAtB;AAEA,MAAMC,kBAAkB,GAAI;;;OAA5B;;AAKA,MAAMC,QAAQ,GAAG,mBACf,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,UAAD;AACE,EAAA,KAAK,EAAC,UADR;AAEE,EAAA,WAAW,EAAC,2FAFd;AAGE,EAAA,SAAS,EAAC,MAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAKE,oBAAC,MAAD;AACE,EAAA,GAAG,EAAC,GADN;AAEE,EAAA,IAAI,EAAC,iDAFP;AAGE,EAAA,MAAM,EAAC,QAHT;AAIE,EAAA,KAAK,EAAC,MAJR;AAKE,EAAA,IAAI,EAAC,IALP;AAME,EAAA,SAAS,EAAC,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CASE,oBAAC,eAAD;AAAiB,EAAA,IAAI,EAAC,eAAtB;AAAsC,EAAA,SAAS,EAAC,YAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EATF,CALF,CADF,eAkBE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iGADF,eAEE,oBAAC,YAAD;AAAc,EAAA,IAAI,EAAEF,YAApB;AAAkC,EAAA,WAAW,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,eAGE;AAAG,EAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0KAHF,eAOE,oBAAC,YAAD;AAAc,EAAA,IAAI,EAAEC,kBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAPF,CADF,CAlBF,CADF;;AAiCA,eAAeC,QAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport { Button, Card, CardBody } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport PageHeader from '../common/PageHeader';\nimport FalconEditor from '../common/FalconEditor';\n\nconst clearfixCode = `<div className=\"clearfix\">...</div>`;\n\nconst clearfixButtonCode = `<div className=\"bg-info clearfix\">\n  <button className=\"btn btn-secondary float-left\" type=\"button\">Example Button floated left</button>\n  <button className=\"btn btn-secondary float-right\" type=\"button\">Example Button floated right</button>\n</div>`;\n\nconst Clearfix = () => (\n  <Fragment>\n    <PageHeader\n      title=\"Clearfix\"\n      description=\"Quickly and easily clear floated content within a container by adding a clearfix utility.\"\n      className=\"mb-3\"\n    >\n      <Button\n        tag=\"a\"\n        href=\"https://reactstrap.github.io/utilities/clearfix\"\n        target=\"_blank\"\n        color=\"link\"\n        size=\"sm\"\n        className=\"pl-0\"\n      >\n        Clearfix on reactstrap\n        <FontAwesomeIcon icon=\"chevron-right\" className=\"ml-1 fs--2\" />\n      </Button>\n    </PageHeader>\n    <Card>\n      <CardBody>\n        <p>Easily clear floats by adding .clearfix to the parent element. Can also be used as a mixin.</p>\n        <FalconEditor code={clearfixCode} hidePreview />\n        <p className=\"mt-4\">\n          The following example shows how the clearfix can be used. Without the clearfix the wrapping div would not span\n          around the buttons which would cause a broken layout.\n        </p>\n        <FalconEditor code={clearfixButtonCode} />\n      </CardBody>\n    </Card>\n  </Fragment>\n);\n\nexport default Clearfix;\n"]},"metadata":{},"sourceType":"module"}