{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/Dev/letter/letter-support/src/components/auth/LockScreenForm.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport { Button, Col, Form, Input, Row } from 'reactstrap';\nimport withRedirect from '../../hoc/withRedirect';\n\nconst LockScreenForm = ({\n  setRedirect,\n  setRedirectUrl,\n  ...rest\n}) => {\n  // State\n  const [password, setPassword] = useState(''); // Handler\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setRedirect(true);\n    toast.success(`Logged in as Emma Watson`);\n  };\n\n  return /*#__PURE__*/React.createElement(Row, Object.assign({\n    tag: Form,\n    noGutters: true,\n    onSubmit: handleSubmit\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    className: \"mr-2\",\n    placeholder: \"Password\",\n    value: password,\n    onChange: ({\n      target\n    }) => setPassword(target.value),\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    xs: \"auto\",\n    className: \"pl-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    disabled: !password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"Login\")));\n};\n\nLockScreenForm.propTypes = {\n  setRedirect: PropTypes.func.isRequired,\n  setRedirectUrl: PropTypes.func\n};\nexport default withRedirect(LockScreenForm);","map":{"version":3,"sources":["/Users/matt/Documents/Dev/letter/letter-support/src/components/auth/LockScreenForm.js"],"names":["React","useState","PropTypes","toast","Button","Col","Form","Input","Row","withRedirect","LockScreenForm","setRedirect","setRedirectUrl","rest","password","setPassword","handleSubmit","e","preventDefault","success","target","value","propTypes","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,MAAT,EAAiBC,GAAjB,EAAsBC,IAAtB,EAA4BC,KAA5B,EAAmCC,GAAnC,QAA8C,YAA9C;AACA,OAAOC,YAAP,MAAyB,wBAAzB;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,cAAf;AAA+B,KAAGC;AAAlC,CAAD,KAA8C;AACnE;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC,CAFmE,CAInE;;AACA,QAAMe,YAAY,GAAGC,CAAC,IAAI;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACAP,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAR,IAAAA,KAAK,CAACgB,OAAN,CAAe,0BAAf;AACD,GAJD;;AAMA,sBACE,oBAAC,GAAD;AAAK,IAAA,GAAG,EAAEb,IAAV;AAAgB,IAAA,SAAS,MAAzB;AAA0B,IAAA,QAAQ,EAAEU;AAApC,KAAsDH,IAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,SAAS,EAAC,MADZ;AAEE,IAAA,WAAW,EAAC,UAFd;AAGE,IAAA,KAAK,EAAEC,QAHT;AAIE,IAAA,QAAQ,EAAE,CAAC;AAAEM,MAAAA;AAAF,KAAD,KAAgBL,WAAW,CAACK,MAAM,CAACC,KAAR,CAJvC;AAKE,IAAA,IAAI,EAAC,UALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAUE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,MAAR;AAAe,IAAA,SAAS,EAAC,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,QAAQ,EAAE,CAACP,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CAVF,CADF;AAkBD,CA7BD;;AA+BAJ,cAAc,CAACY,SAAf,GAA2B;AACzBX,EAAAA,WAAW,EAAET,SAAS,CAACqB,IAAV,CAAeC,UADH;AAEzBZ,EAAAA,cAAc,EAAEV,SAAS,CAACqB;AAFD,CAA3B;AAKA,eAAed,YAAY,CAACC,cAAD,CAA3B","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport { Button, Col, Form, Input, Row } from 'reactstrap';\nimport withRedirect from '../../hoc/withRedirect';\n\nconst LockScreenForm = ({ setRedirect, setRedirectUrl, ...rest }) => {\n  // State\n  const [password, setPassword] = useState('');\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    setRedirect(true);\n    toast.success(`Logged in as Emma Watson`);\n  };\n\n  return (\n    <Row tag={Form} noGutters onSubmit={handleSubmit} {...rest}>\n      <Col>\n        <Input\n          className=\"mr-2\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={({ target }) => setPassword(target.value)}\n          type=\"password\"\n        />\n      </Col>\n      <Col xs=\"auto\" className=\"pl-2\">\n        <Button color=\"primary\" disabled={!password}>\n          Login\n        </Button>\n      </Col>\n    </Row>\n  );\n};\n\nLockScreenForm.propTypes = {\n  setRedirect: PropTypes.func.isRequired,\n  setRedirectUrl: PropTypes.func\n};\n\nexport default withRedirect(LockScreenForm);\n"]},"metadata":{},"sourceType":"module"}