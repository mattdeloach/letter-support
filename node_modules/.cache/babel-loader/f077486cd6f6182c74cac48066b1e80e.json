{"ast":null,"code":"var _jsxFileName = \"/Users/greypro/Documents/Dev/letter/letter-support/src/components/common/FalconDropzone.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Dropzone from 'react-dropzone';\nimport uuid from 'uuid/v1';\nimport classNames from 'classnames';\nimport { isIterableArray } from '../../helpers/utils';\nimport { DropdownItem, DropdownMenu, DropdownToggle, Media, UncontrolledDropdown } from 'reactstrap';\nimport Flex from './Flex';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport cloudUpload from \"../../assets/img/icons/cloud-upload.svg\";\n\nconst getSize = size => {\n  if (size < 1024) {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }\n    }, size), \" Byte\");\n  } else if (size < 1024 * 1024) {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, (size / 1024).toFixed(2)), \" KB\");\n  } else {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, (size / (1024 * 1024)).toFixed(2)), \" MB\");\n  }\n};\n\nconst FalconDropzone = ({\n  placeholder,\n  className,\n  onChange,\n  files,\n  preview,\n  ...rest\n}) => /*#__PURE__*/React.createElement(Fragment, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Dropzone, {\n  onDrop: acceptedFiles => {\n    const stringFiles = [];\n\n    if (!!acceptedFiles.length) {\n      acceptedFiles.map(file => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n\n        reader.onload = () => {\n          stringFiles.push({\n            id: uuid(),\n            base64: reader.result,\n            size: file.size,\n            path: file.path,\n            type: file.type\n          });\n          onChange([...stringFiles]);\n        };\n\n        return true;\n      });\n    }\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }\n}, ({\n  getRootProps,\n  getInputProps\n}) => /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getRootProps({\n  className: classNames('p-3 border-dashed border-2x border-300 bg-light rounded-soft text-center cursor-pointer', className)\n}), {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(\"input\", Object.assign({ ...getInputProps(),\n  ...rest\n}, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 11\n  }\n})), placeholder)), preview && isIterableArray(files) && /*#__PURE__*/React.createElement(\"div\", {\n  className: \"border-top mt-3\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 7\n  }\n}, files.map(({\n  id,\n  path,\n  base64,\n  size\n}) => /*#__PURE__*/React.createElement(Media, {\n  className: \"align-items-center py-3 border-bottom btn-reveal-trigger\",\n  key: id,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(\"img\", {\n  className: \"img-fluid\",\n  width: 38,\n  src: base64,\n  alt: path,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 13\n  }\n}), /*#__PURE__*/React.createElement(Media, {\n  body: true,\n  tag: Flex,\n  justify: \"between\",\n  align: \"center\",\n  className: \"ml-3\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 15\n  }\n}, /*#__PURE__*/React.createElement(\"h6\", {\n  \"data-dz-name\": \"\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 17\n  }\n}, path), /*#__PURE__*/React.createElement(Flex, {\n  className: \"position-relative\",\n  align: \"center\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 17\n  }\n}, /*#__PURE__*/React.createElement(\"p\", {\n  className: \"mb-0 fs--1 text-400 line-height-1\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 19\n  }\n}, getSize(size)))), /*#__PURE__*/React.createElement(UncontrolledDropdown, {\n  className: \"text-sans-serif\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 15\n  }\n}, /*#__PURE__*/React.createElement(DropdownToggle, {\n  color: \"link\",\n  size: \"sm\",\n  className: \"text-600 btn-reveal\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 17\n  }\n}, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n  icon: \"ellipsis-h\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 19\n  }\n})), /*#__PURE__*/React.createElement(DropdownMenu, {\n  className: \"border py-0\",\n  right: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 17\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"bg-white py-2\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 19\n  }\n}, /*#__PURE__*/React.createElement(DropdownItem, {\n  className: \"text-danger\",\n  onClick: () => onChange(files.filter(file => file.id !== id)),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 21\n  }\n}, \"Remove File\")))))))));\n\nFalconDropzone.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  placeholder: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  className: PropTypes.string,\n  files: PropTypes.array,\n  preview: PropTypes.bool,\n  isMulti: PropTypes.bool\n};\nFalconDropzone.defaultProps = {\n  placeholder: /*#__PURE__*/React.createElement(\"img\", {\n    src: cloudUpload,\n    alt: \"\",\n    width: 25,\n    className: \"mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 16\n    }\n  }),\n  files: [],\n  preview: false\n};\nexport default FalconDropzone;","map":{"version":3,"sources":["/Users/greypro/Documents/Dev/letter/letter-support/src/components/common/FalconDropzone.js"],"names":["React","Fragment","PropTypes","Dropzone","uuid","classNames","isIterableArray","DropdownItem","DropdownMenu","DropdownToggle","Media","UncontrolledDropdown","Flex","FontAwesomeIcon","getSize","size","toFixed","FalconDropzone","placeholder","className","onChange","files","preview","rest","acceptedFiles","stringFiles","length","map","file","reader","FileReader","readAsDataURL","onload","push","id","base64","result","path","type","getRootProps","getInputProps","filter","propTypes","func","isRequired","oneOfType","string","node","array","bool","isMulti","defaultProps","cloudUpload"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Dropzone from 'react-dropzone';\r\nimport uuid from 'uuid/v1';\r\nimport classNames from 'classnames';\r\nimport { isIterableArray } from '../../helpers/utils';\r\nimport { DropdownItem, DropdownMenu, DropdownToggle, Media, UncontrolledDropdown } from 'reactstrap';\r\nimport Flex from './Flex';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport cloudUpload from '../../assets/img/icons/cloud-upload.svg';\r\n\r\nconst getSize = size => {\r\n  if (size < 1024) {\r\n    return (\r\n      <Fragment>\r\n        <strong>{size}</strong> Byte\r\n      </Fragment>\r\n    );\r\n  } else if (size < 1024 * 1024) {\r\n    return (\r\n      <Fragment>\r\n        <strong>{(size / 1024).toFixed(2)}</strong> KB\r\n      </Fragment>\r\n    );\r\n  } else {\r\n    return (\r\n      <Fragment>\r\n        <strong>{(size / (1024 * 1024)).toFixed(2)}</strong> MB\r\n      </Fragment>\r\n    );\r\n  }\r\n};\r\n\r\nconst FalconDropzone = ({ placeholder, className, onChange, files, preview, ...rest }) => (\r\n  <Fragment>\r\n    <Dropzone\r\n      onDrop={acceptedFiles => {\r\n        const stringFiles = [];\r\n        if (!!acceptedFiles.length) {\r\n          acceptedFiles.map(file => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => {\r\n              stringFiles.push({\r\n                id: uuid(),\r\n                base64: reader.result,\r\n                size: file.size,\r\n                path: file.path,\r\n                type: file.type\r\n              });\r\n              onChange([...stringFiles]);\r\n            };\r\n            return true;\r\n          });\r\n        }\r\n      }}\r\n    >\r\n      {({ getRootProps, getInputProps }) => (\r\n        <div\r\n          {...getRootProps({\r\n            className: classNames(\r\n              'p-3 border-dashed border-2x border-300 bg-light rounded-soft text-center cursor-pointer',\r\n              className\r\n            )\r\n          })}\r\n        >\r\n          <input {...{ ...getInputProps(), ...rest }} />\r\n          {placeholder}\r\n        </div>\r\n      )}\r\n    </Dropzone>\r\n    {preview && isIterableArray(files) && (\r\n      <div className=\"border-top mt-3\">\r\n        {files.map(({ id, path, base64, size }) => (\r\n          <Media className=\"align-items-center py-3 border-bottom btn-reveal-trigger\" key={id}>\r\n            <img className=\"img-fluid\" width={38} src={base64} alt={path} />\r\n            <Media body tag={Flex} justify=\"between\" align=\"center\" className=\"ml-3\">\r\n              <div>\r\n                <h6 data-dz-name=\"\">{path}</h6>\r\n                <Flex className=\"position-relative\" align=\"center\">\r\n                  <p className=\"mb-0 fs--1 text-400 line-height-1\">{getSize(size)}</p>\r\n                </Flex>\r\n              </div>\r\n              <UncontrolledDropdown className=\"text-sans-serif\">\r\n                <DropdownToggle color=\"link\" size=\"sm\" className=\"text-600 btn-reveal\">\r\n                  <FontAwesomeIcon icon=\"ellipsis-h\" />\r\n                </DropdownToggle>\r\n                <DropdownMenu className=\"border py-0\" right>\r\n                  <div className=\"bg-white py-2\">\r\n                    <DropdownItem\r\n                      className=\"text-danger\"\r\n                      onClick={() => onChange(files.filter(file => file.id !== id))}\r\n                    >\r\n                      Remove File\r\n                    </DropdownItem>\r\n                  </div>\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n            </Media>\r\n          </Media>\r\n        ))}\r\n      </div>\r\n    )}\r\n  </Fragment>\r\n);\r\n\r\nFalconDropzone.propTypes = {\r\n  onChange: PropTypes.func.isRequired,\r\n  placeholder: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\r\n  className: PropTypes.string,\r\n  files: PropTypes.array,\r\n  preview: PropTypes.bool,\r\n  isMulti: PropTypes.bool\r\n};\r\n\r\nFalconDropzone.defaultProps = {\r\n  placeholder: <img src={cloudUpload} alt=\"\" width={25} className=\"mr-2\" />,\r\n  files: [],\r\n  preview: false\r\n};\r\n\r\nexport default FalconDropzone;\r\n"]},"metadata":{},"sourceType":"module"}