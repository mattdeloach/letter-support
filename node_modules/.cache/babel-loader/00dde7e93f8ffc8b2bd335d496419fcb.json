{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/Dev/letter/letter-support/src/components/email/ComposeAttachment.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Flex from '../common/Flex';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { UncontrolledTooltip } from 'reactstrap';\nimport truncate from 'lodash/truncate';\nimport join from 'lodash/join';\n\nconst getIcon = type => {\n  const icon = ['far'];\n\n  if (type.includes('image')) {\n    icon.push('file-image');\n  }\n\n  if (type.includes('video')) {\n    icon.push('file-video');\n  }\n\n  if (type.includes('audio')) {\n    icon.push('file-audio');\n  }\n\n  if (type.includes('zip')) {\n    icon.push('file-archive');\n  }\n\n  if (type.includes('pdf')) {\n    icon.push('file-pdf');\n  }\n\n  if (type.includes('html') || type.includes('css') || type.includes('json') || type.includes('javascript')) {\n    icon.push('file-code');\n  }\n\n  if (icon.length === 1) {\n    icon.push('file');\n  }\n\n  return icon;\n};\n\nconst getName = name => {\n  const nameStrings = name.split('.');\n  const extension = nameStrings.pop();\n  return `${truncate(join(nameStrings), {\n    length: 24,\n    omission: '[...]'\n  })}.${extension}`;\n};\n\nconst ComposeAttachment = ({\n  id,\n  name,\n  size,\n  handleDetachAttachment,\n  type\n}) => /*#__PURE__*/React.createElement(Flex, {\n  align: \"center\",\n  className: \"border px-2 rounded-soft bg-white my-1 fs--1\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n  icon: getIcon(type),\n  className: \"fs-1\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(\"span\", {\n  className: \"mx-2\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }\n}, getName(name), \" (\", (size / 1024).toFixed(2), \"kb)\"), /*#__PURE__*/React.createElement(\"span\", {\n  className: \"text-300 p-1 ml-auto cursor-pointer\",\n  id: `attachmentTooltip${id}`,\n  onClick: () => handleDetachAttachment(id),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n  icon: \"times\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(UncontrolledTooltip, {\n  placement: \"right\",\n  target: `attachmentTooltip${id}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 7\n  }\n}, \"Detach\")));\n\nComposeAttachment.propTypes = {\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  name: PropTypes.string.isRequired,\n  size: PropTypes.number.isRequired,\n  handleDetachAttachment: PropTypes.func.isRequired,\n  type: PropTypes.string.isRequired\n};\nComposeAttachment.defaultProps = {\n  value: `ComposeAttachment`\n};\nexport default ComposeAttachment;","map":{"version":3,"sources":["/Users/matt/Documents/Dev/letter/letter-support/src/components/email/ComposeAttachment.js"],"names":["React","PropTypes","Flex","FontAwesomeIcon","UncontrolledTooltip","truncate","join","getIcon","type","icon","includes","push","length","getName","name","nameStrings","split","extension","pop","omission","ComposeAttachment","id","size","handleDetachAttachment","toFixed","propTypes","oneOfType","string","number","isRequired","func","defaultProps","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Flex from '../common/Flex';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { UncontrolledTooltip } from 'reactstrap';\nimport truncate from 'lodash/truncate';\nimport join from 'lodash/join';\n\nconst getIcon = type => {\n  const icon = ['far'];\n  if (type.includes('image')) {\n    icon.push('file-image');\n  }\n  if (type.includes('video')) {\n    icon.push('file-video');\n  }\n  if (type.includes('audio')) {\n    icon.push('file-audio');\n  }\n  if (type.includes('zip')) {\n    icon.push('file-archive');\n  }\n  if (type.includes('pdf')) {\n    icon.push('file-pdf');\n  }\n  if (type.includes('html') || type.includes('css') || type.includes('json') || type.includes('javascript')) {\n    icon.push('file-code');\n  }\n  if (icon.length === 1) {\n    icon.push('file');\n  }\n  return icon;\n};\n\nconst getName = name => {\n  const nameStrings = name.split('.');\n  const extension = nameStrings.pop();\n  return `${truncate(join(nameStrings), {\n    length: 24,\n    omission: '[...]'\n  })}.${extension}`;\n};\n\nconst ComposeAttachment = ({ id, name, size, handleDetachAttachment, type }) => (\n  <Flex align=\"center\" className=\"border px-2 rounded-soft bg-white my-1 fs--1\">\n    <FontAwesomeIcon icon={getIcon(type)} className=\"fs-1\" />\n    <span className=\"mx-2\">\n      {getName(name)} ({(size / 1024).toFixed(2)}kb)\n    </span>\n    <span\n      className=\"text-300 p-1 ml-auto cursor-pointer\"\n      id={`attachmentTooltip${id}`}\n      onClick={() => handleDetachAttachment(id)}\n    >\n      <FontAwesomeIcon icon=\"times\" />\n      <UncontrolledTooltip placement=\"right\" target={`attachmentTooltip${id}`}>\n        Detach\n      </UncontrolledTooltip>\n    </span>\n  </Flex>\n);\n\nComposeAttachment.propTypes = {\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  name: PropTypes.string.isRequired,\n  size: PropTypes.number.isRequired,\n  handleDetachAttachment: PropTypes.func.isRequired,\n  type: PropTypes.string.isRequired\n};\n\nComposeAttachment.defaultProps = { value: `ComposeAttachment` };\n\nexport default ComposeAttachment;\n"]},"metadata":{},"sourceType":"module"}