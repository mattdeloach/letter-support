{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Documents/Dev/letter/letter-support/src/components/agent/Accounts/AccountGraph.js\";\nimport React, { useState, useContext } from 'react';\nimport { Row, Col, Card, CardBody, CustomInput } from 'reactstrap';\nimport { Line } from 'react-chartjs-2';\nimport { hours, paymentByStatus } from './account-graph';\nimport { rgbaColor, themeColors } from '../../../helpers/utils';\nimport AppContext from '../../../context/Context';\n\nconst AccountGraph = () => {\n  const [paymentStatus, setPaymentStatus] = useState('successful');\n  const {\n    isDark\n  } = useContext(AppContext);\n  const config = {\n    data(canvas) {\n      const ctx = canvas.getContext('2d');\n      const gradientFill = isDark ? ctx.createLinearGradient(0, 0, 0, ctx.canvas.height) : ctx.createLinearGradient(0, 0, 0, 250);\n      gradientFill.addColorStop(0, isDark ? 'rgba(44,123,229, 0.5)' : 'rgba(255, 255, 255, 0.3)');\n      gradientFill.addColorStop(1, isDark ? 'transparent' : 'rgba(255, 255, 255, 0)');\n      return {\n        labels: hours,\n        datasets: [{\n          borderWidth: 2,\n          data: paymentByStatus[paymentStatus].map(d => (d * 3.14).toFixed(2)),\n          borderColor: rgbaColor(isDark ? themeColors.primary : '#fff', 0.8),\n          backgroundColor: gradientFill\n        }]\n      };\n    },\n\n    options: {\n      legend: {\n        display: false\n      },\n      tooltips: {\n        mode: 'x-axis',\n        xPadding: 20,\n        yPadding: 10,\n        displayColors: false,\n        callbacks: {\n          label: tooltipItem => `${hours[tooltipItem.index]} - ${tooltipItem.yLabel} USD`,\n          title: () => null\n        }\n      },\n      hover: {\n        mode: 'label'\n      },\n      scales: {\n        xAxes: [{\n          scaleLabel: {\n            show: true,\n            labelString: 'Month'\n          },\n          ticks: {\n            fontColor: rgbaColor('#fff', 0.7),\n            fontStyle: 600\n          },\n          gridLines: {\n            color: rgbaColor('#fff', 0.1),\n            zeroLineColor: rgbaColor('#fff', 0.1),\n            lineWidth: 1\n          }\n        }],\n        yAxes: [{\n          display: false,\n          gridLines: {\n            color: rgbaColor('#fff', 1)\n          }\n        }]\n      }\n    }\n  };\n  return /*#__PURE__*/React.createElement(Card, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    className: \"rounded-soft bg-gradient\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"text-white align-items-center no-gutters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"text-white mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, \"Today $764,928.39\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"fs--1 font-weight-semi-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, \"Yesterday \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"opacity-50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }, \"$684,283.87\"))), /*#__PURE__*/React.createElement(Col, {\n    xs: \"auto\",\n    className: \"d-none d-sm-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CustomInput, {\n    id: \"ddd\",\n    type: \"select\",\n    bsSize: \"sm\",\n    className: \"mb-3 shadow\",\n    value: paymentStatus,\n    onChange: ({\n      target\n    }) => setPaymentStatus(target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, \"Available Balance\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"successful\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }, \"Charges\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"failed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, \"Deposits\")))), /*#__PURE__*/React.createElement(Line, {\n    data: config.data,\n    options: config.options,\n    width: 1618,\n    height: 375,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default AccountGraph;","map":{"version":3,"sources":["/Users/matt/Documents/Dev/letter/letter-support/src/components/agent/Accounts/AccountGraph.js"],"names":["React","useState","useContext","Row","Col","Card","CardBody","CustomInput","Line","hours","paymentByStatus","rgbaColor","themeColors","AppContext","AccountGraph","paymentStatus","setPaymentStatus","isDark","config","data","canvas","ctx","getContext","gradientFill","createLinearGradient","height","addColorStop","labels","datasets","borderWidth","map","d","toFixed","borderColor","primary","backgroundColor","options","legend","display","tooltips","mode","xPadding","yPadding","displayColors","callbacks","label","tooltipItem","index","yLabel","title","hover","scales","xAxes","scaleLabel","show","labelString","ticks","fontColor","fontStyle","gridLines","color","zeroLineColor","lineWidth","yAxes","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { Row, Col, Card, CardBody, CustomInput } from 'reactstrap';\nimport { Line } from 'react-chartjs-2';\nimport { hours, paymentByStatus } from './account-graph';\nimport { rgbaColor, themeColors } from '../../../helpers/utils';\nimport AppContext from '../../../context/Context';\n\nconst AccountGraph = () => {\n  const [paymentStatus, setPaymentStatus] = useState('successful');\n  const { isDark } = useContext(AppContext);\n\n  const config = {\n    data(canvas) {\n      const ctx = canvas.getContext('2d');\n      const gradientFill = isDark\n        ? ctx.createLinearGradient(0, 0, 0, ctx.canvas.height)\n        : ctx.createLinearGradient(0, 0, 0, 250);\n      gradientFill.addColorStop(0, isDark ? 'rgba(44,123,229, 0.5)' : 'rgba(255, 255, 255, 0.3)');\n      gradientFill.addColorStop(1, isDark ? 'transparent' : 'rgba(255, 255, 255, 0)');\n\n      return {\n        labels: hours,\n        datasets: [\n          {\n            borderWidth: 2,\n            data: paymentByStatus[paymentStatus].map(d => (d * 3.14).toFixed(2)),\n            borderColor: rgbaColor(isDark ? themeColors.primary : '#fff', 0.8),\n            backgroundColor: gradientFill\n          }\n        ]\n      };\n    },\n    options: {\n      legend: { display: false },\n      tooltips: {\n        mode: 'x-axis',\n        xPadding: 20,\n        yPadding: 10,\n        displayColors: false,\n        callbacks: {\n          label: tooltipItem => `${hours[tooltipItem.index]} - ${tooltipItem.yLabel} USD`,\n          title: () => null\n        }\n      },\n      hover: { mode: 'label' },\n      scales: {\n        xAxes: [\n          {\n            scaleLabel: {\n              show: true,\n              labelString: 'Month'\n            },\n            ticks: {\n              fontColor: rgbaColor('#fff', 0.7),\n              fontStyle: 600\n            },\n            gridLines: {\n              color: rgbaColor('#fff', 0.1),\n              zeroLineColor: rgbaColor('#fff', 0.1),\n              lineWidth: 1\n            }\n          }\n        ],\n        yAxes: [\n          {\n            display: false,\n            gridLines: {\n              color: rgbaColor('#fff', 1)\n            }\n          }\n        ]\n      }\n    }\n  };\n\n  return (\n    <Card className=\"mb-3\">\n      <CardBody className=\"rounded-soft bg-gradient\">\n        <Row className=\"text-white align-items-center no-gutters\">\n          <Col>\n            <h4 className=\"text-white mb-0\">Today $764,928.39</h4>\n            <p className=\"fs--1 font-weight-semi-bold\">\n              Yesterday <span className=\"opacity-50\">$684,283.87</span>\n            </p>\n          </Col>\n          <Col xs=\"auto\" className=\"d-none d-sm-block\">\n            <CustomInput\n              id=\"ddd\"\n              type=\"select\"\n              bsSize=\"sm\"\n              className=\"mb-3 shadow\"\n              value={paymentStatus}\n              onChange={({ target }) => setPaymentStatus(target.value)}\n            >\n              <option value=\"all\">Available Balance</option>\n              <option value=\"successful\">Charges</option>\n              <option value=\"failed\">Deposits</option>\n            </CustomInput>\n          </Col>\n        </Row>\n        <Line data={config.data} options={config.options} width={1618} height={375} />\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default AccountGraph;\n"]},"metadata":{},"sourceType":"module"}